{
  "timestamp": "2025-07-01T23:51:51.176Z",
  "totalFiles": 1931,
  "totalIssues": 660,
  "batches": {
    "client-types": {
      "files": [
        "client/src/types/wallet.ts",
        "client/src/types/vault.types.ts",
        "client/src/types/user.ts",
        "client/src/types/thread.types.ts",
        "client/src/types/profile.ts",
        "client/src/types/preferences.types.ts",
        "client/src/types/payment.types.ts",
        "client/src/types/notifications.ts",
        "client/src/types/inventory.ts",
        "client/src/types/gamification.types.ts",
        "client/src/types/forum.ts",
        "client/src/types/core.types.ts",
        "client/src/types/canonical.types.ts",
        "client/src/types/admin.types.ts",
        "client/src/types/compat/user.ts",
        "client/src/types/compat/forum.ts",
        "client/src/types/compat/economy.ts",
        "client/src/types/compat/brand.ts",
        "client/src/types/compat/avatar.ts"
      ],
      "issues": [
        {
          "file": "client/src/types/profile.ts",
          "line": 27,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/profile.ts",
          "line": 34,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/profile.ts",
          "line": 42,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/profile.ts",
          "line": 49,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/profile.ts",
          "line": 56,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/profile.ts",
          "line": 63,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/payment.types.ts",
          "line": 20,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/types/payment.types.ts",
          "line": 39,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/types/payment.types.ts",
          "line": 56,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/types/payment.types.ts",
          "line": 90,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/types/notifications.ts",
          "line": 5,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/notifications.ts",
          "line": 6,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/types/inventory.ts",
          "line": 9,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/inventory.ts",
          "line": 19,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number; // This is the inventory item's own ID, should be number",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/inventory.ts",
          "line": 31,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number; // This is the inventory item's own ID, should be number",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/gamification.types.ts",
          "line": 88,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 23,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 60,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 110,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 149,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 178,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 206,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 275,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 400,
          "column": 21,
          "pattern": "id: number",
          "context": "getStructureById: (id: number) => CanonicalForum | CanonicalSubforum | undefined;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 208,
          "column": 2,
          "pattern": "threadId: number",
          "context": "threadId: number;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 378,
          "column": 2,
          "pattern": "threadId: number",
          "context": "threadId: number;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/types/admin.types.ts",
          "line": 82,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/compat/avatar.ts",
          "line": 5,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        }
      ],
      "priority": 1
    },
    "client-hooks": {
      "files": [
        "client/src/hooks/widgetData.ts",
        "client/src/hooks/useZoneStats.ts",
        "client/src/hooks/useXP.ts",
        "client/src/hooks/useUserXP.ts",
        "client/src/hooks/useUserInventory.ts",
        "client/src/hooks/useUserCosmetics.ts",
        "client/src/hooks/useThreadZone.ts",
        "client/src/hooks/useShowHotRibbon.ts",
        "client/src/hooks/useSearchParams.ts",
        "client/src/hooks/useRouteProtection.ts",
        "client/src/hooks/useProfileStats.ts",
        "client/src/hooks/useProfileEngagement.ts",
        "client/src/hooks/usePermission.ts",
        "client/src/hooks/useMissions.ts",
        "client/src/hooks/useMediaQuery.ts",
        "client/src/hooks/useJsonConfig.ts",
        "client/src/hooks/useIdentityDisplay.ts",
        "client/src/hooks/useFriends.ts",
        "client/src/hooks/useForumFilters.ts",
        "client/src/hooks/useFollowing.ts",
        "client/src/hooks/useFeatureGates.ts",
        "client/src/hooks/useDgtPurchase.ts",
        "client/src/hooks/useDailyTasks.ts",
        "client/src/hooks/useCrudMutation.ts",
        "client/src/hooks/useConfig.ts",
        "client/src/hooks/use-wallet.ts",
        "client/src/hooks/use-vault-items.tsx",
        "client/src/hooks/use-toast.ts",
        "client/src/hooks/use-tip.ts",
        "client/src/hooks/use-shop-ownership.tsx",
        "client/src/hooks/use-shop-items.tsx",
        "client/src/hooks/use-rain.ts",
        "client/src/hooks/use-rain-notifications.ts",
        "client/src/hooks/use-purchase-modal.tsx",
        "client/src/hooks/use-pending-transactions.ts",
        "client/src/hooks/use-notifications.ts",
        "client/src/hooks/use-mobile.tsx",
        "client/src/hooks/use-messages.tsx",
        "client/src/hooks/use-mentions.ts",
        "client/src/hooks/use-media-query.ts",
        "client/src/hooks/use-local-storage.ts",
        "client/src/hooks/use-gamification.tsx",
        "client/src/hooks/use-draft.ts",
        "client/src/hooks/use-dgt-packages.ts",
        "client/src/hooks/use-debounce.ts",
        "client/src/hooks/use-content.ts",
        "client/src/hooks/use-auth.tsx",
        "client/src/hooks/use-async-button.tsx",
        "client/src/hooks/use-admin-modules.ts",
        "client/src/hooks/use-achievements.ts",
        "client/src/hooks/index.ts",
        "client/src/hooks/preferences/useUserSettings.ts",
        "client/src/hooks/preferences/useUpdateUserSettings.ts",
        "client/src/hooks/wrappers/use-auth-wrapper.ts",
        "client/src/hooks/__tests__/useMediaQuery.test.tsx"
      ],
      "issues": [
        {
          "file": "client/src/hooks/useXP.ts",
          "line": 37,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useXP.ts",
          "line": 47,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useXP.ts",
          "line": 56,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useUserXP.ts",
          "line": 6,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/hooks/useUserCosmetics.ts",
          "line": 11,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useMissions.ts",
          "line": 8,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useMissions.ts",
          "line": 27,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useMissions.ts",
          "line": 28,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/hooks/useIdentityDisplay.ts",
          "line": 7,
          "column": 18,
          "pattern": "id: number",
          "context": "roles?: Array<{ id: number; name: string; hexColor?: string | null }>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useIdentityDisplay.ts",
          "line": 34,
          "column": 68,
          "pattern": "parseInt(user.id)",
          "context": "const { data: xpData } = useUserXP(typeof user?.id === 'string' ? parseInt(user.id) : user?.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "client/src/hooks/use-tip.ts",
          "line": 21,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-rain.ts",
          "line": 17,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-rain.ts",
          "line": 25,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-messages.tsx",
          "line": 4,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-dgt-packages.ts",
          "line": 5,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-auth.tsx",
          "line": 12,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-achievements.ts",
          "line": 55,
          "column": 32,
          "pattern": "id: number",
          "context": "export function useAchievement(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-achievements.ts",
          "line": 68,
          "column": 43,
          "pattern": "id: number",
          "context": "export function useAchievementCompletions(id: number, page = 1, limit = 50) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-achievements.ts",
          "line": 115,
          "column": 32,
          "pattern": "id: number",
          "context": "mutationFn: ({ id, data }: { id: number; data: Partial<Achievement> }) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-achievements.ts",
          "line": 135,
          "column": 16,
          "pattern": "id: number",
          "context": "mutationFn: (id: number) => achievementApi.deleteAchievement(id),",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-achievements.ts",
          "line": 172,
          "column": 43,
          "pattern": "id: number",
          "context": "mutationFn: ({ id, userIds, reason }: { id: number; userIds: string[]; reason?: string }) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/preferences/useUserSettings.ts",
          "line": 9,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/preferences/useUserSettings.ts",
          "line": 25,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/hooks/preferences/useUserSettings.ts",
          "line": 34,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        }
      ],
      "priority": 2
    },
    "client-api": {
      "files": [
        "client/src/lib/api.ts",
        "client/src/lib/api-response.ts",
        "client/src/lib/api-request.ts",
        "client/src/core/api.ts",
        "client/src/lib/utils/api-helpers.ts",
        "client/src/features/admin/components/analytics/APIMetricsCard.tsx"
      ],
      "issues": [
        {
          "file": "client/src/core/api.ts",
          "line": 224,
          "column": 18,
          "pattern": "id: number",
          "context": "recipients: { id: number; username: string }[];",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        }
      ],
      "priority": 3
    },
    "client-components": {
      "files": [
        "client/src/components/ErrorBoundary.tsx",
        "client/src/components/zone/PrimaryZoneCarousel.tsx",
        "client/src/components/xp/tracks.ts",
        "client/src/components/xp/XpToast.tsx",
        "client/src/components/xp/XPBarsContainer.tsx",
        "client/src/components/xp/XPBarTrack.tsx",
        "client/src/components/xp/LevelUpModal.tsx",
        "client/src/components/widgets/ProfileCard.tsx",
        "client/src/components/users/user-avatar.tsx",
        "client/src/components/users/index.ts",
        "client/src/components/users/framed-avatar.tsx",
        "client/src/components/users/Username.tsx",
        "client/src/components/users/UserFilters.tsx",
        "client/src/components/users/UserDirectoryTable.tsx",
        "client/src/components/users/UserCard.tsx",
        "client/src/components/users/UserAvatar.tsx",
        "client/src/components/users/Avatar.tsx",
        "client/src/components/users/ActiveMembersWidget.tsx",
        "client/src/components/test/RoleTest.tsx",
        "client/src/components/social/WhaleWatchDisplay.tsx",
        "client/src/components/social/WhaleWatchDashboard.tsx",
        "client/src/components/social/FriendsManager.tsx",
        "client/src/components/social/FollowingList.tsx",
        "client/src/components/social/FollowButton.tsx",
        "client/src/components/skeletons/ZoneCardSkeleton.tsx",
        "client/src/components/skeletons/HomePageSkeleton.tsx",
        "client/src/components/ui/widget-skeleton.tsx",
        "client/src/components/ui/user-badge.tsx",
        "client/src/components/ui/tooltip.tsx",
        "client/src/components/ui/tooltip-utils.tsx",
        "client/src/components/ui/toggle.tsx",
        "client/src/components/ui/toggle-group.tsx",
        "client/src/components/ui/toaster.tsx",
        "client/src/components/ui/toast.tsx",
        "client/src/components/ui/thread-skeleton.tsx",
        "client/src/components/ui/textarea.tsx",
        "client/src/components/ui/tag-badge.tsx",
        "client/src/components/ui/tabs.tsx",
        "client/src/components/ui/table.tsx",
        "client/src/components/ui/tab-switcher.tsx",
        "client/src/components/ui/switch.tsx",
        "client/src/components/ui/stat-chip.tsx",
        "client/src/components/ui/smart-thread-filters.tsx",
        "client/src/components/ui/slider.tsx",
        "client/src/components/ui/skeleton.tsx",
        "client/src/components/ui/sidebar.tsx",
        "client/src/components/ui/sheet.tsx",
        "client/src/components/ui/separator.tsx",
        "client/src/components/ui/seo-head.tsx",
        "client/src/components/ui/select.tsx",
        "client/src/components/ui/scroll-area.tsx",
        "client/src/components/ui/safe-image.tsx",
        "client/src/components/ui/resizable.tsx",
        "client/src/components/ui/reactions-bar.tsx",
        "client/src/components/ui/radio-group.tsx",
        "client/src/components/ui/progress.tsx",
        "client/src/components/ui/popover.tsx",
        "client/src/components/ui/pagination.tsx",
        "client/src/components/ui/navigation-menu.tsx",
        "client/src/components/ui/mobile-forum-nav.tsx",
        "client/src/components/ui/menubar.tsx",
        "client/src/components/ui/menu.tsx",
        "client/src/components/ui/loader.tsx",
        "client/src/components/ui/label.tsx",
        "client/src/components/ui/input.tsx",
        "client/src/components/ui/input-otp.tsx",
        "client/src/components/ui/index.ts",
        "client/src/components/ui/hover-card.tsx",
        "client/src/components/ui/hamburger.tsx",
        "client/src/components/ui/frost-card.tsx",
        "client/src/components/ui/form.tsx",
        "client/src/components/ui/file-drop-zone.tsx",
        "client/src/components/ui/feature-gate.tsx",
        "client/src/components/ui/error-display.tsx",
        "client/src/components/ui/enhanced-thread-card.tsx",
        "client/src/components/ui/enhanced-notifications.tsx",
        "client/src/components/ui/enhanced-loading-states.tsx",
        "client/src/components/ui/enhanced-button.tsx",
        "client/src/components/ui/dropdown-menu.tsx",
        "client/src/components/ui/drawer.tsx",
        "client/src/components/ui/dialog.tsx",
        "client/src/components/ui/context-menu.tsx",
        "client/src/components/ui/content-feed.tsx",
        "client/src/components/ui/content-area.tsx",
        "client/src/components/ui/command.tsx",
        "client/src/components/ui/collapsible.tsx",
        "client/src/components/ui/checkbox.tsx",
        "client/src/components/ui/chart.tsx",
        "client/src/components/ui/carousel.tsx",
        "client/src/components/ui/card.tsx",
        "client/src/components/ui/candlestick-menu.tsx",
        "client/src/components/ui/calendar.tsx",
        "client/src/components/ui/button.tsx",
        "client/src/components/ui/breadcrumb.tsx",
        "client/src/components/ui/bookmark-button.tsx",
        "client/src/components/ui/badge.tsx",
        "client/src/components/ui/avatar.tsx",
        "client/src/components/ui/aspect-ratio.tsx",
        "client/src/components/ui/animated-logo.tsx",
        "client/src/components/ui/alert.tsx",
        "client/src/components/ui/alert-dialog.tsx",
        "client/src/components/ui/accordion.tsx",
        "client/src/components/ui/accessibility-enhancements.tsx",
        "client/src/components/ui/Container.tsx",
        "client/src/components/sidebar/wallet-summary-widget.tsx",
        "client/src/components/sidebar/related-content-widget.tsx",
        "client/src/components/sidebar/navigation-widget.tsx",
        "client/src/components/sidebar/leaderboard-widget.tsx",
        "client/src/components/shoutbox/shoutbox.spec.tsx",
        "client/src/components/shoutbox/shoutbox-widget.tsx",
        "client/src/components/shoutbox/shoutbox-rain-notification.tsx",
        "client/src/components/shoutbox/shoutbox-position-selector.tsx",
        "client/src/components/shoutbox/shoutbox-message-styles.tsx",
        "client/src/components/shoutbox/shoutbox-help-command.tsx",
        "client/src/components/shoutbox/positioned-shoutbox.tsx",
        "client/src/components/shoutbox/integration-example.tsx",
        "client/src/components/shoutbox/index.ts",
        "client/src/components/shoutbox/ShoutboxInput.tsx",
        "client/src/components/shoutbox/ShoutboxContainer.tsx",
        "client/src/components/shop/shop-item-card.tsx",
        "client/src/components/shop/purchase-modal.tsx",
        "client/src/components/shop/ShopItem.tsx",
        "client/src/components/preferences/social-preferences.tsx",
        "client/src/components/preferences/session-preferences.tsx",
        "client/src/components/preferences/referral-preferences.tsx",
        "client/src/components/preferences/profile-preferences.tsx",
        "client/src/components/preferences/notification-preferences.tsx",
        "client/src/components/preferences/display-preferences.tsx",
        "client/src/components/preferences/account-preferences.tsx",
        "client/src/components/preferences/PreferencesToggle.tsx",
        "client/src/components/preferences/PreferencesTextarea.tsx",
        "client/src/components/preferences/PreferencesSelect.tsx",
        "client/src/components/preferences/PreferencesInput.tsx",
        "client/src/components/preferences/PreferencesGroup.tsx",
        "client/src/components/preferences/PreferencesCard.tsx",
        "client/src/components/profile/rarityUtils.ts",
        "client/src/components/profile/index.ts",
        "client/src/components/profile/XpLogView.tsx",
        "client/src/components/profile/XPProgressBar.tsx",
        "client/src/components/profile/XPProfileSection.tsx",
        "client/src/components/profile/WhaleWatchTab.tsx",
        "client/src/components/profile/UserTitles.tsx",
        "client/src/components/profile/UserProfileRenderer.tsx",
        "client/src/components/profile/UserBadges.tsx",
        "client/src/components/profile/UnifiedProfileCard.tsx",
        "client/src/components/profile/StatCard.tsx",
        "client/src/components/profile/SignatureRenderer.tsx",
        "client/src/components/profile/ProfileSkeleton.tsx",
        "client/src/components/profile/ProfileSidebar.tsx",
        "client/src/components/profile/ProfileNavigation.tsx",
        "client/src/components/profile/ProfileEditor.tsx",
        "client/src/components/profile/ProfileDashboard.tsx",
        "client/src/components/profile/ProfileCard.tsx",
        "client/src/components/profile/OverviewTab.tsx",
        "client/src/components/profile/InventoryTab.tsx",
        "client/src/components/profile/FriendsTab.tsx",
        "client/src/components/profile/CosmeticControlPanel.tsx",
        "client/src/components/profile/AchievementsTab.tsx",
        "client/src/components/payment/StripeElementsWrapper.tsx",
        "client/src/components/payment/PaymentForm.tsx",
        "client/src/components/platform-energy/index.ts",
        "client/src/components/paths/user-paths-display.tsx",
        "client/src/components/paths/path-progress.tsx",
        "client/src/components/notifications/NotificationPanel.tsx",
        "client/src/components/notifications/MentionsNotifications.tsx",
        "client/src/components/navigation/nav-item.tsx",
        "client/src/components/navigation/mobile-nav-bar.tsx",
        "client/src/components/navigation/ForumBreadcrumbs.tsx",
        "client/src/components/modals/TipPostModal.tsx",
        "client/src/components/modals/QuotePostModal.tsx",
        "client/src/components/modals/DeleteConfirmModal.tsx",
        "client/src/components/missions/MissionsWidget.tsx",
        "client/src/components/missions/DailyMissions.tsx",
        "client/src/components/mod/mod-sidebar.tsx",
        "client/src/components/mod/mod-layout.tsx",
        "client/src/components/messages/WhispersInbox.tsx",
        "client/src/components/messages/WhisperModal.tsx",
        "client/src/components/messages/WhisperButton.tsx",
        "client/src/components/media/MediaAsset.tsx",
        "client/src/components/mentions/MentionRenderer.tsx",
        "client/src/components/mentions/MentionAutocomplete.tsx",
        "client/src/components/identity/path-progress.tsx",
        "client/src/components/identity/index.ts",
        "client/src/components/identity/UserName.tsx",
        "client/src/components/identity/RoleBadge.tsx",
        "client/src/components/identity/LevelBadge.tsx",
        "client/src/components/identity/AvatarFrame.tsx",
        "client/src/components/icons/types.ts",
        "client/src/components/icons/iconRenderer.tsx",
        "client/src/components/icons/iconMap.config.ts",
        "client/src/components/icons/iconLoader.ts",
        "client/src/components/header/index.ts",
        "client/src/components/header/WalletButton.tsx",
        "client/src/components/header/UserMenu.tsx",
        "client/src/components/header/SiteHeader.tsx",
        "client/src/components/header/SearchBox.tsx",
        "client/src/components/header/PrimaryNav.tsx",
        "client/src/components/header/NotificationButton.tsx",
        "client/src/components/header/NavLink.tsx",
        "client/src/components/header/MobileNav.tsx",
        "client/src/components/header/Logo.tsx",
        "client/src/components/header/HeaderThemeWrapper.tsx",
        "client/src/components/header/HeaderPluginSlot.tsx",
        "client/src/components/header/HeaderContext.tsx",
        "client/src/components/header/AuthButtons.tsx",
        "client/src/components/header/AdminButton.tsx",
        "client/src/components/gamification/progression-card.tsx",
        "client/src/components/gamification/profile-gamification-widget.tsx",
        "client/src/components/gamification/mission-dashboard.tsx",
        "client/src/components/gamification/mission-card.tsx",
        "client/src/components/gamification/level-up-modal.tsx",
        "client/src/components/gamification/level-display.tsx",
        "client/src/components/gamification/leaderboard.tsx",
        "client/src/components/gamification/index.ts",
        "client/src/components/gamification/achievement-unlock-modal.tsx",
        "client/src/components/gamification/achievement-grid.tsx",
        "client/src/components/gamification/achievement-card.tsx",
        "client/src/components/footer/index.ts",
        "client/src/components/footer/SiteFooter.tsx",
        "client/src/components/footer/RandomTagline.tsx",
        "client/src/components/footer/LiveStats.tsx",
        "client/src/components/footer/FooterSection.tsx",
        "client/src/components/footer/FooterBrand.tsx",
        "client/src/components/fixtures/fixture-preview.tsx",
        "client/src/components/fixtures/fixture-builder.tsx",
        "client/src/components/forum/zone-group.tsx",
        "client/src/components/forum/tag-input.tsx",
        "client/src/components/forum/prefix-badge.tsx",
        "client/src/components/forum/index.ts",
        "client/src/components/forum/forum-guidelines.tsx",
        "client/src/components/forum/forum-filters.tsx",
        "client/src/components/forum/forum-category-card.tsx",
        "client/src/components/forum/forum-card.tsx",
        "client/src/components/forum/category-card.tsx",
        "client/src/components/forum/breadcrumb-nav.tsx",
        "client/src/components/forum/ZoneStats.tsx",
        "client/src/components/forum/ZoneCard.tsx",
        "client/src/components/forum/XpBoostBadge.tsx",
        "client/src/components/forum/UserLevelDisplay.tsx",
        "client/src/components/forum/ThreadStats.tsx",
        "client/src/components/forum/ThreadSidebar.tsx",
        "client/src/components/forum/ThreadRow.tsx",
        "client/src/components/forum/ThreadPagination.tsx",
        "client/src/components/forum/ThreadFilters.tsx",
        "client/src/components/forum/ThreadCard.tsx",
        "client/src/components/forum/ThreadAuthor.tsx",
        "client/src/components/forum/StickyBackButton.tsx",
        "client/src/components/forum/SolveBadge.tsx",
        "client/src/components/forum/SignatureRenderer.tsx",
        "client/src/components/forum/ShopCard.tsx",
        "client/src/components/forum/ShareButton.tsx",
        "client/src/components/forum/RecentActivity.tsx",
        "client/src/components/forum/ReactionBar.tsx",
        "client/src/components/forum/QuickStats.tsx",
        "client/src/components/forum/QuickReplyInput.tsx",
        "client/src/components/forum/ProfileCard.tsx",
        "client/src/components/forum/OriginForumPill.tsx",
        "client/src/components/forum/ModeratorActions.tsx",
        "client/src/components/forum/LegacyForumRedirect.tsx",
        "client/src/components/forum/HotTopics.tsx",
        "client/src/components/forum/ForumPage.tsx",
        "client/src/components/forum/ForumHeader.tsx",
        "client/src/components/forum/ForumErrorBoundary.tsx",
        "client/src/components/forum/CreateThreadButton.tsx",
        "client/src/components/forum/CanonicalZoneGrid.tsx",
        "client/src/components/forum/BBCodePostCard.tsx",
        "client/src/components/errors/UserNotFound.tsx",
        "client/src/components/errors/ThreadNotFound.tsx",
        "client/src/components/errors/NetworkError.tsx",
        "client/src/components/errors/ForumNotFound.tsx",
        "client/src/components/errors/ErrorBoundary.tsx",
        "client/src/components/errors/AdminErrorBoundary.tsx",
        "client/src/components/editor/suggestion.ts",
        "client/src/components/editor/rich-text-editor.tsx",
        "client/src/components/editor/gif-picker.tsx",
        "client/src/components/editor/enhanced-gif-picker.tsx",
        "client/src/components/economy/wallet-display.tsx",
        "client/src/components/dev/dev-role-switcher.tsx",
        "client/src/components/dev/dev-playground-shortcut.tsx",
        "client/src/components/dashboard/UpcomingEventsWidget.tsx",
        "client/src/components/dashboard/DailyTasksWidget.tsx",
        "client/src/components/common/index.ts",
        "client/src/components/common/StatsBar.tsx",
        "client/src/components/common/StandardErrorDisplay.tsx",
        "client/src/components/common/LoadingCard.tsx",
        "client/src/components/common/Breadcrumb.tsx",
        "client/src/components/common/BackToHomeButton.tsx",
        "client/src/components/auth/withRouteProtection.tsx",
        "client/src/components/auth/protected-route.tsx",
        "client/src/components/auth/index.ts",
        "client/src/components/auth/RouteGuards.tsx",
        "client/src/components/auth/RequireRole.tsx",
        "client/src/components/auth/ProtectedRoute.tsx",
        "client/src/components/auth/GlobalRouteGuard.tsx",
        "client/src/components/admin/simple-menu.tsx",
        "client/src/components/admin/protected-admin-route.tsx",
        "client/src/components/admin/cooldown-settings.tsx",
        "client/src/components/admin/XpActionRow.tsx",
        "client/src/components/admin/VisualJsonTabs.tsx",
        "client/src/components/admin/ModularAdminSidebar.tsx",
        "client/src/components/admin/ModularAdminLayout.tsx",
        "client/src/components/admin/GrantFrameModal.tsx",
        "client/src/components/admin/AdminThemeProvider.tsx",
        "client/src/components/admin/AdminDashboard.tsx",
        "client/src/components/layout/site-layout-wrapper.tsx",
        "client/src/components/layout/sidebar.tsx",
        "client/src/components/layout/hero-section.tsx",
        "client/src/components/layout/announcement-ticker.tsx",
        "client/src/components/layout/WidgetGallery.tsx",
        "client/src/components/layout/WidgetFrame.tsx",
        "client/src/components/layout/SlotRenderer.tsx",
        "client/src/components/layout/SidebarNavigation.tsx",
        "client/src/components/layout/ResponsiveLayoutWrapper.tsx",
        "client/src/components/layout/ProfileBackground.tsx",
        "client/src/components/layout/LayoutRenderer.tsx",
        "client/src/components/layout/AppSidebar.tsx",
        "client/src/components/profile/widgets/index.ts",
        "client/src/components/profile/widgets/WalletOverviewCard.tsx",
        "client/src/components/profile/widgets/SocialStatsCard.tsx",
        "client/src/components/profile/widgets/ReputationCard.tsx",
        "client/src/components/profile/widgets/QuickActionsCard.tsx",
        "client/src/components/profile/widgets/ProfileInsightsCard.tsx",
        "client/src/components/profile/widgets/MilestoneCard.tsx",
        "client/src/components/profile/widgets/ActivityStatsCard.tsx",
        "client/src/components/platform-energy/stats/platform-stats-widget.tsx",
        "client/src/components/platform-energy/recent-posts/recent-posts-feed.tsx",
        "client/src/components/platform-energy/leaderboards/weekly-leaderboard.tsx",
        "client/src/components/platform-energy/featured-threads/featured-threads-slider.tsx",
        "client/src/components/messages/icons/MessageSquareWave.tsx",
        "client/src/components/forum/layouts/index.ts",
        "client/src/components/forum/layouts/ResponsiveForumLayout.tsx",
        "client/src/components/forum/layouts/MagicForumBuilder.tsx",
        "client/src/components/forum/layouts/AdaptiveForumGrid.tsx",
        "client/src/components/forum/enhanced/QuickReactions.tsx",
        "client/src/components/forum/enhanced/MobileForumNavigation.tsx",
        "client/src/components/forum/enhanced/CryptoEngagementBar.tsx",
        "client/src/components/forum/bbcode/index.ts",
        "client/src/components/forum/bbcode/QuickReplyBox.tsx",
        "client/src/components/forum/bbcode/PostSidebar.tsx",
        "client/src/components/forum/bbcode/PostHeader.tsx",
        "client/src/components/forum/bbcode/PostFooter.tsx",
        "client/src/components/forum/bbcode/PostBody.tsx",
        "client/src/components/forum/bbcode/PostActions.tsx",
        "client/src/components/economy/xp/XPProgressBar.tsx",
        "client/src/components/economy/xp/XPHistoryLog.tsx",
        "client/src/components/economy/xp/TitleSelector.tsx",
        "client/src/components/economy/xp/LevelUpNotification.tsx",
        "client/src/components/economy/xp/LevelBadge.tsx",
        "client/src/components/economy/wallet/withdraw-button.tsx",
        "client/src/components/economy/wallet/wallet-balance-display.tsx",
        "client/src/components/economy/wallet/wallet-address-display.tsx",
        "client/src/components/economy/wallet/transaction-history.tsx",
        "client/src/components/economy/wallet/tip-button.tsx",
        "client/src/components/economy/wallet/rain-button.tsx",
        "client/src/components/economy/wallet/dgt-transfer.tsx",
        "client/src/components/economy/wallet/deposit-button.tsx",
        "client/src/components/economy/wallet/buy-dgt-button.tsx",
        "client/src/components/economy/wallet/animated-balance.tsx",
        "client/src/components/economy/wallet/WalletSheet.tsx",
        "client/src/components/economy/wallet/TransactionSheet.tsx",
        "client/src/components/economy/wallet/PackagesGrid.tsx",
        "client/src/components/economy/wallet/DgtPackageCard.tsx",
        "client/src/components/economy/shoutbox/enhanced-shoutbox-widget.tsx",
        "client/src/components/economy/badges/UserBadgesDisplay.tsx",
        "client/src/components/economy/badges/BadgeShowcase.tsx",
        "client/src/components/forum/sidebar/index.ts",
        "client/src/components/forum/sidebar/WidgetSkeleton.tsx",
        "client/src/components/forum/sidebar/StatsWidget.tsx",
        "client/src/components/forum/sidebar/SidebarWidgetCard.tsx",
        "client/src/components/forum/sidebar/SidebarIntegrationExample.tsx",
        "client/src/components/forum/sidebar/HotTopicsWidget.tsx",
        "client/src/components/forum/sidebar/DynamicSidebar.tsx",
        "client/src/components/forum/sidebar/ActivityFeedWidget.tsx",
        "client/src/components/admin/titles/TitlesSection.tsx",
        "client/src/components/admin/wallet/mock-webhook-trigger.tsx",
        "client/src/components/admin/roles/RolesSection.tsx",
        "client/src/components/admin/roles/RoleForm.tsx",
        "client/src/components/admin/permissions/PermissionsOverview.tsx",
        "client/src/components/admin/permissions/PermissionsEditor.tsx",
        "client/src/components/admin/layout/EntityTable.tsx",
        "client/src/components/admin/layout/EntityFilters.tsx",
        "client/src/components/admin/layout/AdminPageShell.tsx",
        "client/src/components/admin/media/MediaPickerModal.tsx",
        "client/src/components/admin/media/MediaLibraryModal.tsx",
        "client/src/components/admin/inputs/UnlockMultiSelect.tsx",
        "client/src/components/admin/inputs/AdminToggle.tsx",
        "client/src/components/admin/inputs/AdminAccessSelector.tsx",
        "client/src/components/admin/form-controls/index.ts",
        "client/src/components/admin/form-controls/SwitchRow.tsx",
        "client/src/components/admin/form-controls/JsonEditor.tsx",
        "client/src/components/admin/form-controls/InlineError.tsx",
        "client/src/components/admin/form-controls/ImageUpload.tsx",
        "client/src/components/admin/form-controls/ColorPicker.tsx",
        "client/src/components/admin/common/AdminDataTable.tsx",
        "client/src/components/admin/effects/CloutObliterationEffect.tsx",
        "client/src/components/admin/effects/BankruptcyEffect.tsx",
        "client/src/components/admin/clout/CloutTiersSection.tsx",
        "client/src/components/admin/clout/CloutLogsSection.tsx",
        "client/src/components/admin/clout/CloutGrantsSection.tsx",
        "client/src/components/admin/clout/AchievementsSection.tsx",
        "client/src/components/forum/layouts/__tests__/ResponsiveForumLayout.test.tsx",
        "client/src/components/forum/layouts/__tests__/AdaptiveForumGrid.test.tsx",
        "client/src/components/forum/enhanced/__tests__/QuickReactions.test.tsx",
        "client/src/components/forum/enhanced/__tests__/EnhancedThreadCard.test.tsx",
        "client/src/components/forum/enhanced/__tests__/CryptoEngagementBar.test.tsx",
        "client/src/components/admin/forms/xp/TitleMediaInput.tsx",
        "client/src/components/admin/forms/xp/LevelFormDialogs.tsx",
        "client/src/components/admin/forms/xp/BadgeFormDialogs.tsx",
        "client/src/components/admin/forms/wallets/ManualDgtAdjustmentDialog.tsx",
        "client/src/components/admin/forms/users/UserFormDialog.tsx",
        "client/src/components/admin/forms/users/UserActionDialogs.tsx",
        "client/src/components/admin/forms/roles/RoleFormDialog.tsx",
        "client/src/components/admin/forms/reports/ViewReportDialog.tsx",
        "client/src/components/admin/forms/reports/ReportActionDialogs.tsx"
      ],
      "issues": [
        {
          "file": "client/src/components/users/UserAvatar.tsx",
          "line": 10,
          "column": 4,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/users/ActiveMembersWidget.tsx",
          "line": 19,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number | string;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/social/WhaleWatchDashboard.tsx",
          "line": 43,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/social/FriendsManager.tsx",
          "line": 55,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/social/FriendsManager.tsx",
          "line": 66,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/ui/smart-thread-filters.tsx",
          "line": 67,
          "column": 26,
          "pattern": "id: number",
          "context": "availableTags?: Array<{ id: number; name: string; slug: string; color?: string }>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/ui/smart-thread-filters.tsx",
          "line": 68,
          "column": 30,
          "pattern": "id: number",
          "context": "availablePrefixes?: Array<{ id: number; name: string; color?: string }>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/ui/reactions-bar.tsx",
          "line": 21,
          "column": 2,
          "pattern": "postId: number",
          "context": "postId: number;",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/components/ui/enhanced-button.tsx",
          "line": 86,
          "column": 56,
          "pattern": "id: number",
          "context": "const [ripples, setRipples] = React.useState<Array<{ id: number; x: number; y: number }>>([]);",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/ui/bookmark-button.tsx",
          "line": 12,
          "column": 2,
          "pattern": "threadId: number",
          "context": "threadId: number;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/components/shoutbox/shoutbox-widget.tsx",
          "line": 58,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/shoutbox/shoutbox-widget.tsx",
          "line": 67,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/shoutbox/shoutbox-widget.tsx",
          "line": 79,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/shoutbox/ShoutboxContainer.tsx",
          "line": 27,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/components/profile/XpLogView.tsx",
          "line": 58,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/UserTitles.tsx",
          "line": 9,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/UserTitles.tsx",
          "line": 64,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/UserBadges.tsx",
          "line": 9,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/UserBadges.tsx",
          "line": 64,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/CosmeticControlPanel.tsx",
          "line": 23,
          "column": 18,
          "pattern": "id: number",
          "context": "activeFrame?: { id: number; name: string; imageUrl: string; rarity: string } | null; // IDs for frame, title, badge are numbers",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/CosmeticControlPanel.tsx",
          "line": 24,
          "column": 18,
          "pattern": "id: number",
          "context": "activeTitle?: { id: number; name: string; description: string | null; rarity: string } | null; // IDs for frame, title, badge are numbers",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/CosmeticControlPanel.tsx",
          "line": 26,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number; // IDs for frame, title, badge are numbers",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/notifications/MentionsNotifications.tsx",
          "line": 27,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/missions/DailyMissions.tsx",
          "line": 37,
          "column": 12,
          "pattern": "id: number",
          "context": "onClaim: (id: number) => void;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/gamification/leaderboard.tsx",
          "line": 101,
          "column": 30,
          "pattern": "userId: number",
          "context": "const toggleRowExpansion = (userId: number) => {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/components/forum/zone-group.tsx",
          "line": 51,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/zone-group.tsx",
          "line": 59,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/zone-group.tsx",
          "line": 73,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/forum-card.tsx",
          "line": 9,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/forum-card.tsx",
          "line": 18,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/category-card.tsx",
          "line": 18,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/ShareButton.tsx",
          "line": 6,
          "column": 2,
          "pattern": "threadId: number",
          "context": "threadId: number | string;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/components/forum/RecentActivity.tsx",
          "line": 9,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/RecentActivity.tsx",
          "line": 13,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/ReactionBar.tsx",
          "line": 29,
          "column": 2,
          "pattern": "postId: number",
          "context": "postId: number;",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/components/forum/HotTopics.tsx",
          "line": 9,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/errors/ThreadNotFound.tsx",
          "line": 16,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/layout/announcement-ticker.tsx",
          "line": 20,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/platform-energy/recent-posts/recent-posts-feed.tsx",
          "line": 64,
          "column": 24,
          "pattern": "postId: number",
          "context": "const toggleExpand = (postId: number) => {",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/components/platform-energy/leaderboards/weekly-leaderboard.tsx",
          "line": 13,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/bbcode/QuickReplyBox.tsx",
          "line": 10,
          "column": 2,
          "pattern": "threadId: number",
          "context": "threadId: number;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/components/forum/bbcode/PostHeader.tsx",
          "line": 10,
          "column": 2,
          "pattern": "postId: number",
          "context": "postId: number;",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/components/forum/bbcode/PostActions.tsx",
          "line": 30,
          "column": 2,
          "pattern": "postId: number",
          "context": "postId: number;",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/components/economy/shoutbox/enhanced-shoutbox-widget.tsx",
          "line": 40,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/economy/shoutbox/enhanced-shoutbox-widget.tsx",
          "line": 50,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/economy/shoutbox/enhanced-shoutbox-widget.tsx",
          "line": 62,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/economy/shoutbox/enhanced-shoutbox-widget.tsx",
          "line": 266,
          "column": 44,
          "pattern": "userId: number",
          "context": "mutationFn: async ({ userId, ignore }: { userId: number; ignore: boolean }) => {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/components/economy/badges/UserBadgesDisplay.tsx",
          "line": 9,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/inputs/UnlockMultiSelect.tsx",
          "line": 11,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/inputs/UnlockMultiSelect.tsx",
          "line": 44,
          "column": 18,
          "pattern": "id: number",
          "context": "const toggle = (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/inputs/AdminAccessSelector.tsx",
          "line": 11,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/inputs/AdminAccessSelector.tsx",
          "line": 44,
          "column": 22,
          "pattern": "id: number",
          "context": "const toggleRole = (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/clout/AchievementsSection.tsx",
          "line": 164,
          "column": 48,
          "pattern": "id: number",
          "context": "mutationFn: async (data: AchievementForm & { id: number }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/clout/AchievementsSection.tsx",
          "line": 192,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/clout/AchievementsSection.tsx",
          "line": 218,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/forms/xp/LevelFormDialogs.tsx",
          "line": 49,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/forms/xp/BadgeFormDialogs.tsx",
          "line": 37,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/forms/reports/ViewReportDialog.tsx",
          "line": 34,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        }
      ],
      "priority": 4
    },
    "client-pages": {
      "files": [
        "client/src/pages/whispers.tsx",
        "client/src/pages/wallet.tsx",
        "client/src/pages/ui-playground.tsx",
        "client/src/pages/shop.tsx",
        "client/src/pages/progress.tsx",
        "client/src/pages/not-found.tsx",
        "client/src/pages/leaderboard.tsx",
        "client/src/pages/home.tsx",
        "client/src/pages/forum-rules.tsx",
        "client/src/pages/fixtures-dashboard.tsx",
        "client/src/pages/degen-index.tsx",
        "client/src/pages/auth.tsx",
        "client/src/pages/RouteProtectionDemo.tsx",
        "client/src/pages/zones/index.tsx",
        "client/src/pages/zones/[slug].tsx",
        "client/src/pages/tags/[tagSlug].tsx",
        "client/src/pages/threads/create.tsx",
        "client/src/pages/threads/BBCodeThreadPage.tsx",
        "client/src/pages/shop-management/purchase-success.tsx",
        "client/src/pages/shop-management/dgt-purchase.tsx",
        "client/src/pages/shop/avatar-frames.tsx",
        "client/src/pages/search/index.tsx",
        "client/src/pages/referrals/index.tsx",
        "client/src/pages/preferences/index.tsx",
        "client/src/pages/profile/xp.tsx",
        "client/src/pages/profile/xp-demo.tsx",
        "client/src/pages/profile/activity.tsx",
        "client/src/pages/profile/[username].tsx",
        "client/src/pages/missions/index.tsx",
        "client/src/pages/mod/users.tsx",
        "client/src/pages/mod/shoutbox.tsx",
        "client/src/pages/mod/reports.tsx",
        "client/src/pages/mod/index.tsx",
        "client/src/pages/mod/activity.tsx",
        "client/src/pages/invite/[code].tsx",
        "client/src/pages/forums/search.tsx",
        "client/src/pages/forums/index.tsx",
        "client/src/pages/forums/[forumSlug].tsx",
        "client/src/pages/dictionary/index.tsx",
        "client/src/pages/dictionary/[slug].tsx",
        "client/src/pages/dev/index.ts",
        "client/src/pages/dev/DevPlaygroundLayout.tsx",
        "client/src/pages/dev/DemoCard.tsx",
        "client/src/pages/dev/ControlsDrawer.tsx",
        "client/src/pages/announcements/index.tsx",
        "client/src/pages/admin/xp-system.tsx",
        "client/src/pages/admin/users.tsx",
        "client/src/pages/admin/ui-config.tsx",
        "client/src/pages/admin/treasury.tsx",
        "client/src/pages/admin/tip-rain-settings.tsx",
        "client/src/pages/admin/tags.tsx",
        "client/src/pages/admin/system-analytics.tsx",
        "client/src/pages/admin/stickers.tsx",
        "client/src/pages/admin/social-config.tsx",
        "client/src/pages/admin/shoutbox.tsx",
        "client/src/pages/admin/roles.tsx",
        "client/src/pages/admin/roles-titles.tsx",
        "client/src/pages/admin/prefixes.tsx",
        "client/src/pages/admin/live-database.tsx",
        "client/src/pages/admin/index.tsx",
        "client/src/pages/admin/forum-structure.tsx",
        "client/src/pages/admin/feature-flags.tsx",
        "client/src/pages/admin/emojis.tsx",
        "client/src/pages/admin/dgt-packages.tsx",
        "client/src/pages/admin/database-config.tsx",
        "client/src/pages/admin/categories.tsx",
        "client/src/pages/admin/brand-config.tsx",
        "client/src/pages/admin/avatar-frames.tsx",
        "client/src/pages/admin/airdrop.tsx",
        "client/src/pages/admin/admin-layout.tsx",
        "client/src/pages/admin/ad-management.tsx",
        "client/src/pages/ui-playground/demo-data.ts",
        "client/src/pages/admin/wallets/index.tsx",
        "client/src/pages/admin/users/[userId].tsx",
        "client/src/pages/admin/ui/pack-builder.tsx",
        "client/src/pages/admin/ui/animations.tsx",
        "client/src/pages/admin/transactions/index.tsx",
        "client/src/pages/admin/stats/index.tsx",
        "client/src/pages/admin/shop/rarities.tsx",
        "client/src/pages/admin/shop/index.tsx",
        "client/src/pages/admin/shop/edit.tsx",
        "client/src/pages/admin/shop/categories.tsx",
        "client/src/pages/admin/reports/index.tsx",
        "client/src/pages/admin/permissions/index.tsx",
        "client/src/pages/admin/missions/index.tsx",
        "client/src/pages/admin/features/index.tsx",
        "client/src/pages/admin/dictionary/index.tsx",
        "client/src/pages/admin/dev/seeding.tsx",
        "client/src/pages/admin/config/zones.tsx",
        "client/src/pages/admin/config/xp.tsx",
        "client/src/pages/admin/config/tags.tsx",
        "client/src/pages/admin/config/economy.tsx",
        "client/src/pages/admin/clout/index.tsx",
        "client/src/pages/admin/clout/grants.tsx",
        "client/src/pages/admin/clout/achievements.tsx",
        "client/src/pages/admin/announcements/index.tsx",
        "client/src/pages/admin/activity/index.tsx",
        "client/src/pages/ui-playground/sections/FontsSection.tsx",
        "client/src/pages/ui-playground/sections/ColorsSection.tsx",
        "client/src/pages/ui-playground/sections/CardsSection.tsx",
        "client/src/pages/ui-playground/sections/ButtonsSection.tsx",
        "client/src/pages/ui-playground/sections/AvatarBadgesSection.tsx",
        "client/src/pages/ui-playground/sections/AnimationsSection.tsx",
        "client/src/pages/ui-playground/animations/FadeInListDemo.tsx",
        "client/src/pages/ui-playground/animations/CardFlipDemo.tsx",
        "client/src/pages/ui-playground/animations/ButtonPulseDemo.tsx",
        "client/src/pages/admin/xp/user-adjustment.tsx",
        "client/src/pages/admin/xp/titles.tsx",
        "client/src/pages/admin/xp/settings.tsx",
        "client/src/pages/admin/xp/badges.tsx",
        "client/src/pages/admin/xp/adjust.tsx",
        "client/src/pages/admin/xp/actions.tsx",
        "client/src/pages/admin/activity/user/[userId].tsx"
      ],
      "issues": [
        {
          "file": "client/src/pages/leaderboard.tsx",
          "line": 23,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/forum-rules.tsx",
          "line": 27,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/forum-rules.tsx",
          "line": 48,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/forum-rules.tsx",
          "line": 49,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/pages/degen-index.tsx",
          "line": 15,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/shop/avatar-frames.tsx",
          "line": 14,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/users.tsx",
          "line": 94,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/users.tsx",
          "line": 106,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/reports.tsx",
          "line": 59,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/reports.tsx",
          "line": 126,
          "column": 18,
          "pattern": "id: number",
          "context": "async getReport(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/reports.tsx",
          "line": 133,
          "column": 22,
          "pattern": "id: number",
          "context": "async resolveReport(id: number, data: { action: string; reason?: string; banDuration?: string }) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/reports.tsx",
          "line": 141,
          "column": 22,
          "pattern": "id: number",
          "context": "async dismissReport(id: number, reason: string) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/reports.tsx",
          "line": 196,
          "column": 4,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/reports.tsx",
          "line": 212,
          "column": 34,
          "pattern": "id: number",
          "context": "mutationFn: ({ id, reason }: { id: number; reason: string }) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/activity.tsx",
          "line": 54,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/activity.tsx",
          "line": 153,
          "column": 27,
          "pattern": "id: number",
          "context": "async getActivityDetails(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/dictionary/index.tsx",
          "line": 13,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/dictionary/[slug].tsx",
          "line": 12,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/dictionary/[slug].tsx",
          "line": 34,
          "column": 38,
          "pattern": "id: number",
          "context": "const upvoteMutation = useMutation((id: number) => dictionaryApi.upvote(id), {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp-system.tsx",
          "line": 136,
          "column": 32,
          "pattern": "id: number",
          "context": "mutationFn: ({ id, data }: { id: number; data: LevelFormData }) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp-system.tsx",
          "line": 150,
          "column": 16,
          "pattern": "id: number",
          "context": "mutationFn: (id: number) => apiRequest({ url: `/api/admin/xp/levels/${id}`, method: 'DELETE' }),",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/treasury.tsx",
          "line": 44,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/treasury.tsx",
          "line": 45,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/pages/admin/treasury.tsx",
          "line": 52,
          "column": 2,
          "pattern": "walletId: number",
          "context": "walletId: number;",
          "severity": "critical",
          "suggestedType": "WalletId"
        },
        {
          "file": "client/src/pages/admin/tags.tsx",
          "line": 122,
          "column": 58,
          "pattern": "id: number",
          "context": "mutationFn: async (data: z.infer<typeof tagSchema> & { id: number }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/tags.tsx",
          "line": 147,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/shoutbox.tsx",
          "line": 68,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/roles.tsx",
          "line": 21,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/roles-titles.tsx",
          "line": 36,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/roles-titles.tsx",
          "line": 73,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/prefixes.tsx",
          "line": 156,
          "column": 61,
          "pattern": "id: number",
          "context": "mutationFn: async (data: z.infer<typeof prefixSchema> & { id: number }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/prefixes.tsx",
          "line": 181,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/prefixes.tsx",
          "line": 201,
          "column": 43,
          "pattern": "id: number",
          "context": "mutationFn: async ({ id, direction }: { id: number; direction: 'up' | 'down' }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/prefixes.tsx",
          "line": 237,
          "column": 31,
          "pattern": "id: number",
          "context": "const handleReorderPrefix = (id: number, direction: 'up' | 'down') => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/forum-structure.tsx",
          "line": 92,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/emojis.tsx",
          "line": 68,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/emojis.tsx",
          "line": 141,
          "column": 33,
          "pattern": "id: number",
          "context": "mutationFn: ({ id, emoji }: { id: number; emoji: EmojiFormValues }) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/emojis.tsx",
          "line": 174,
          "column": 16,
          "pattern": "id: number",
          "context": "mutationFn: (id: number) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/categories.tsx",
          "line": 89,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/categories.tsx",
          "line": 146,
          "column": 63,
          "pattern": "id: number",
          "context": "mutationFn: async (data: z.infer<typeof categorySchema> & { id: number }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/categories.tsx",
          "line": 161,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/categories.tsx",
          "line": 175,
          "column": 43,
          "pattern": "id: number",
          "context": "mutationFn: async ({ id, direction }: { id: number; direction: 'up' | 'down' }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/categories.tsx",
          "line": 206,
          "column": 33,
          "pattern": "id: number",
          "context": "const handleReorderCategory = (id: number, direction: 'up' | 'down') => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/avatar-frames.tsx",
          "line": 100,
          "column": 59,
          "pattern": "id: number",
          "context": "const updateMutation = useMutation<AvatarFrame, Error, { id: number; data: CreateFrameData }>({",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/airdrop.tsx",
          "line": 29,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/ui/pack-builder.tsx",
          "line": 61,
          "column": 26,
          "pattern": "id: number",
          "context": "const removeFromPack = (id: number) => setContents(contents.filter((c) => c.id !== id));",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/shop/rarities.tsx",
          "line": 38,
          "column": 48,
          "pattern": "id: number",
          "context": "type Rarity = z.infer<typeof RaritySchema> & { id: number };",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/shop/rarities.tsx",
          "line": 91,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/shop/categories.tsx",
          "line": 30,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/shop/categories.tsx",
          "line": 48,
          "column": 52,
          "pattern": "id: number",
          "context": "type Category = z.infer<typeof CategorySchema> & { id: number };",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/shop/categories.tsx",
          "line": 112,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/reports/index.tsx",
          "line": 73,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/reports/index.tsx",
          "line": 177,
          "column": 30,
          "pattern": "id: number",
          "context": "mutationFn: async (data: { id: number; notes?: string }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/reports/index.tsx",
          "line": 194,
          "column": 30,
          "pattern": "id: number",
          "context": "mutationFn: async (data: { id: number; notes?: string }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/reports/index.tsx",
          "line": 211,
          "column": 30,
          "pattern": "userId: number",
          "context": "mutationFn: async (data: { userId: number; reason: string; duration?: string }) => {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/pages/admin/missions/index.tsx",
          "line": 48,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/dictionary/index.tsx",
          "line": 11,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/dictionary/index.tsx",
          "line": 55,
          "column": 34,
          "pattern": "id: number",
          "context": "mutationFn: ({ id, status }: { id: number; status: 'approved' | 'rejected' }) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/clout/index.tsx",
          "line": 17,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/clout/index.tsx",
          "line": 30,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/clout/grants.tsx",
          "line": 69,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/announcements/index.tsx",
          "line": 75,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/announcements/index.tsx",
          "line": 245,
          "column": 40,
          "pattern": "id: number",
          "context": "mutationFn: async ({ id, values }: { id: number; values: AnnouncementFormValues }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/announcements/index.tsx",
          "line": 273,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/user-adjustment.tsx",
          "line": 63,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/user-adjustment.tsx",
          "line": 74,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/user-adjustment.tsx",
          "line": 75,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/pages/admin/xp/user-adjustment.tsx",
          "line": 203,
          "column": 33,
          "pattern": "userId: number",
          "context": "const refetchUserInfo = async (userId: number) => {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/pages/admin/xp/titles.tsx",
          "line": 43,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/titles.tsx",
          "line": 174,
          "column": 38,
          "pattern": "id: number",
          "context": "mutationFn: async ({ id, data }: { id: number; data: TitleFormData }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/titles.tsx",
          "line": 196,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/badges.tsx",
          "line": 97,
          "column": 64,
          "pattern": "id: number",
          "context": "const updateBadgeMutation = useCrudMutation<unknown, Error, { id: number; data: BadgeFormData }>({",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/adjust.tsx",
          "line": 70,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        }
      ],
      "priority": 5
    },
    "client-other": {
      "files": [
        "client/src/main.tsx",
        "client/src/App.tsx",
        "client/src/types/wallet.ts",
        "client/src/types/vault.types.ts",
        "client/src/types/user.ts",
        "client/src/types/thread.types.ts",
        "client/src/types/profile.ts",
        "client/src/types/preferences.types.ts",
        "client/src/types/payment.types.ts",
        "client/src/types/notifications.ts",
        "client/src/types/inventory.ts",
        "client/src/types/gamification.types.ts",
        "client/src/types/forum.ts",
        "client/src/types/core.types.ts",
        "client/src/types/canonical.types.ts",
        "client/src/types/admin.types.ts",
        "client/src/utils/spacing-constants.ts",
        "client/src/utils/forumStats.ts",
        "client/src/utils/forum-urls.ts",
        "client/src/utils/forum-routing-helper.ts",
        "client/src/utils/card-constants.ts",
        "client/src/utils/avatar.ts",
        "client/src/utils/adaptiveSpacing.ts",
        "client/src/styles/cssVariables.ts",
        "client/src/stores/usePlaygroundControls.ts",
        "client/src/stores/useLayoutStore.ts",
        "client/src/services/error.service.ts",
        "client/src/schemas/uiQuotes.schema.ts",
        "client/src/schemas/featureFlags.schema.ts",
        "client/src/schemas/brand.schema.ts",
        "client/src/schemas/assertValid.ts",
        "client/src/providers/root-provider.tsx",
        "client/src/providers/app-provider.tsx",
        "client/src/payments/index.ts",
        "client/src/navigation/forumNav.ts",
        "client/src/pages/whispers.tsx",
        "client/src/pages/wallet.tsx",
        "client/src/pages/ui-playground.tsx",
        "client/src/pages/shop.tsx",
        "client/src/pages/progress.tsx",
        "client/src/pages/not-found.tsx",
        "client/src/pages/leaderboard.tsx",
        "client/src/pages/home.tsx",
        "client/src/pages/forum-rules.tsx",
        "client/src/pages/fixtures-dashboard.tsx",
        "client/src/pages/degen-index.tsx",
        "client/src/pages/auth.tsx",
        "client/src/pages/RouteProtectionDemo.tsx",
        "client/src/test/setup.ts",
        "client/src/core/router.tsx",
        "client/src/core/queryClient.ts",
        "client/src/core/constants.ts",
        "client/src/core/api.ts",
        "client/src/hooks/widgetData.ts",
        "client/src/hooks/useZoneStats.ts",
        "client/src/hooks/useXP.ts",
        "client/src/hooks/useUserXP.ts",
        "client/src/hooks/useUserInventory.ts",
        "client/src/hooks/useUserCosmetics.ts",
        "client/src/hooks/useThreadZone.ts",
        "client/src/hooks/useShowHotRibbon.ts",
        "client/src/hooks/useSearchParams.ts",
        "client/src/hooks/useRouteProtection.ts",
        "client/src/hooks/useProfileStats.ts",
        "client/src/hooks/useProfileEngagement.ts",
        "client/src/hooks/usePermission.ts",
        "client/src/hooks/useMissions.ts",
        "client/src/hooks/useMediaQuery.ts",
        "client/src/hooks/useJsonConfig.ts",
        "client/src/hooks/useIdentityDisplay.ts",
        "client/src/hooks/useFriends.ts",
        "client/src/hooks/useForumFilters.ts",
        "client/src/hooks/useFollowing.ts",
        "client/src/hooks/useFeatureGates.ts",
        "client/src/hooks/useDgtPurchase.ts",
        "client/src/hooks/useDailyTasks.ts",
        "client/src/hooks/useCrudMutation.ts",
        "client/src/hooks/useConfig.ts",
        "client/src/hooks/use-wallet.ts",
        "client/src/hooks/use-vault-items.tsx",
        "client/src/hooks/use-toast.ts",
        "client/src/hooks/use-tip.ts",
        "client/src/hooks/use-shop-ownership.tsx",
        "client/src/hooks/use-shop-items.tsx",
        "client/src/hooks/use-rain.ts",
        "client/src/hooks/use-rain-notifications.ts",
        "client/src/hooks/use-purchase-modal.tsx",
        "client/src/hooks/use-pending-transactions.ts",
        "client/src/hooks/use-notifications.ts",
        "client/src/hooks/use-mobile.tsx",
        "client/src/hooks/use-messages.tsx",
        "client/src/hooks/use-mentions.ts",
        "client/src/hooks/use-media-query.ts",
        "client/src/hooks/use-local-storage.ts",
        "client/src/hooks/use-gamification.tsx",
        "client/src/hooks/use-draft.ts",
        "client/src/hooks/use-dgt-packages.ts",
        "client/src/hooks/use-debounce.ts",
        "client/src/hooks/use-content.ts",
        "client/src/hooks/use-auth.tsx",
        "client/src/hooks/use-async-button.tsx",
        "client/src/hooks/use-admin-modules.ts",
        "client/src/hooks/use-achievements.ts",
        "client/src/hooks/index.ts",
        "client/src/constants/websocket-disabled.ts",
        "client/src/constants/routes.ts",
        "client/src/constants/env.ts",
        "client/src/constants/apiRoutes.ts",
        "client/src/contexts/wallet-context.tsx",
        "client/src/contexts/shoutbox-context.tsx",
        "client/src/contexts/safe-shoutbox-provider.tsx",
        "client/src/contexts/mock-shoutbox-context.tsx",
        "client/src/contexts/content-feed-context.tsx",
        "client/src/contexts/XpToastContext.tsx",
        "client/src/contexts/ProfileCardContext.tsx",
        "client/src/contexts/MotionContext.tsx",
        "client/src/contexts/LevelUpContext.tsx",
        "client/src/contexts/ForumThemeProvider.tsx",
        "client/src/contexts/ForumStructureContext.tsx",
        "client/src/contexts/ForumOrderingContext.tsx",
        "client/src/contexts/AdminSidebarContext.tsx",
        "client/src/config/widgetRegistry.ts",
        "client/src/config/ui.config.ts",
        "client/src/config/thread.config.ts",
        "client/src/config/themeFallbacks.ts",
        "client/src/config/themeConstants.ts",
        "client/src/config/tags.config.ts",
        "client/src/config/sidebarWidgets.config.ts",
        "client/src/config/shop-items.config.ts",
        "client/src/config/rarity.config.ts",
        "client/src/config/publicConfig.ts",
        "client/src/config/pagination.config.ts",
        "client/src/config/pageSlotMap.ts",
        "client/src/config/navigation.ts",
        "client/src/config/frames.config.ts",
        "client/src/config/forumMap.config.ts",
        "client/src/config/forum-layouts.config.ts",
        "client/src/config/footer-navigation.ts",
        "client/src/config/fonts.config.ts",
        "client/src/config/featureFlags.ts",
        "client/src/config/easter-eggs.config.ts",
        "client/src/config/brand.config.ts",
        "client/src/config/animation.config.ts",
        "client/src/components/ErrorBoundary.tsx",
        "client/src/lib/utils.ts",
        "client/src/lib/safeWebSocket.ts",
        "client/src/lib/routeConfig.ts",
        "client/src/lib/roles.ts",
        "client/src/lib/rare-items-vault.ts",
        "client/src/lib/queryClient.ts",
        "client/src/lib/formatters.ts",
        "client/src/lib/format-date.ts",
        "client/src/lib/api.ts",
        "client/src/lib/api-response.ts",
        "client/src/lib/api-request.ts",
        "client/src/lib/adminApi.ts",
        "client/src/lib/admin-vault-service.ts",
        "client/src/lib/admin-utils.ts",
        "client/src/lib/admin-route.tsx",
        "client/src/__tests__/admin-modules.test.ts",
        "client/src/types/compat/user.ts",
        "client/src/types/compat/forum.ts",
        "client/src/types/compat/economy.ts",
        "client/src/types/compat/brand.ts",
        "client/src/types/compat/avatar.ts",
        "client/src/utils/dev/mockProfile.ts",
        "client/src/payments/ccpayment/withdraw.ts",
        "client/src/payments/ccpayment/utils.ts",
        "client/src/payments/ccpayment/types.ts",
        "client/src/payments/ccpayment/swap.ts",
        "client/src/payments/ccpayment/index.ts",
        "client/src/payments/ccpayment/deposit.ts",
        "client/src/payments/ccpayment/ccpayment-client.ts",
        "client/src/payments/shared/index.ts",
        "client/src/pages/zones/index.tsx",
        "client/src/pages/zones/[slug].tsx",
        "client/src/pages/ui-playground/demo-data.ts",
        "client/src/pages/threads/create.tsx",
        "client/src/pages/threads/BBCodeThreadPage.tsx",
        "client/src/pages/tags/[tagSlug].tsx",
        "client/src/pages/shop/avatar-frames.tsx",
        "client/src/pages/search/index.tsx",
        "client/src/pages/referrals/index.tsx",
        "client/src/pages/profile/xp.tsx",
        "client/src/pages/profile/xp-demo.tsx",
        "client/src/pages/profile/activity.tsx",
        "client/src/pages/profile/[username].tsx",
        "client/src/pages/preferences/index.tsx",
        "client/src/pages/mod/users.tsx",
        "client/src/pages/mod/shoutbox.tsx",
        "client/src/pages/mod/reports.tsx",
        "client/src/pages/mod/index.tsx",
        "client/src/pages/mod/activity.tsx",
        "client/src/pages/missions/index.tsx",
        "client/src/pages/invite/[code].tsx",
        "client/src/pages/forums/search.tsx",
        "client/src/pages/forums/index.tsx",
        "client/src/pages/forums/[forumSlug].tsx",
        "client/src/pages/dictionary/index.tsx",
        "client/src/pages/dictionary/[slug].tsx",
        "client/src/pages/dev/index.ts",
        "client/src/pages/dev/DevPlaygroundLayout.tsx",
        "client/src/pages/dev/DemoCard.tsx",
        "client/src/pages/dev/ControlsDrawer.tsx",
        "client/src/pages/announcements/index.tsx",
        "client/src/pages/shop-management/purchase-success.tsx",
        "client/src/pages/shop-management/dgt-purchase.tsx",
        "client/src/pages/admin/xp-system.tsx",
        "client/src/pages/admin/users.tsx",
        "client/src/pages/admin/ui-config.tsx",
        "client/src/pages/admin/treasury.tsx",
        "client/src/pages/admin/tip-rain-settings.tsx",
        "client/src/pages/admin/tags.tsx",
        "client/src/pages/admin/system-analytics.tsx",
        "client/src/pages/admin/stickers.tsx",
        "client/src/pages/admin/social-config.tsx",
        "client/src/pages/admin/shoutbox.tsx",
        "client/src/pages/admin/roles.tsx",
        "client/src/pages/admin/roles-titles.tsx",
        "client/src/pages/admin/prefixes.tsx",
        "client/src/pages/admin/live-database.tsx",
        "client/src/pages/admin/index.tsx",
        "client/src/pages/admin/forum-structure.tsx",
        "client/src/pages/admin/feature-flags.tsx",
        "client/src/pages/admin/emojis.tsx",
        "client/src/pages/admin/dgt-packages.tsx",
        "client/src/pages/admin/database-config.tsx",
        "client/src/pages/admin/categories.tsx",
        "client/src/pages/admin/brand-config.tsx",
        "client/src/pages/admin/avatar-frames.tsx",
        "client/src/pages/admin/airdrop.tsx",
        "client/src/pages/admin/admin-layout.tsx",
        "client/src/pages/admin/ad-management.tsx",
        "client/src/layout/primitives/index.ts",
        "client/src/layout/primitives/Wide.tsx",
        "client/src/layout/primitives/StickyRegion.tsx",
        "client/src/layout/primitives/Prose.tsx",
        "client/src/layout/primitives/PageBackdrop.tsx",
        "client/src/layout/primitives/FullBleedSection.tsx",
        "client/src/layout/primitives/ClampPadding.tsx",
        "client/src/test/utils/renderWithProviders.tsx",
        "client/src/hooks/wrappers/use-auth-wrapper.ts",
        "client/src/hooks/preferences/useUserSettings.ts",
        "client/src/hooks/preferences/useUpdateUserSettings.ts",
        "client/src/hooks/__tests__/useMediaQuery.test.tsx",
        "client/src/components/zone/PrimaryZoneCarousel.tsx",
        "client/src/components/xp/tracks.ts",
        "client/src/components/xp/XpToast.tsx",
        "client/src/components/xp/XPBarsContainer.tsx",
        "client/src/components/xp/XPBarTrack.tsx",
        "client/src/components/xp/LevelUpModal.tsx",
        "client/src/components/users/user-avatar.tsx",
        "client/src/components/users/index.ts",
        "client/src/components/users/framed-avatar.tsx",
        "client/src/components/users/Username.tsx",
        "client/src/components/users/UserFilters.tsx",
        "client/src/components/users/UserDirectoryTable.tsx",
        "client/src/components/users/UserCard.tsx",
        "client/src/components/users/UserAvatar.tsx",
        "client/src/components/users/Avatar.tsx",
        "client/src/components/users/ActiveMembersWidget.tsx",
        "client/src/components/test/RoleTest.tsx",
        "client/src/components/social/WhaleWatchDisplay.tsx",
        "client/src/components/social/WhaleWatchDashboard.tsx",
        "client/src/components/social/FriendsManager.tsx",
        "client/src/components/social/FollowingList.tsx",
        "client/src/components/social/FollowButton.tsx",
        "client/src/components/skeletons/ZoneCardSkeleton.tsx",
        "client/src/components/skeletons/HomePageSkeleton.tsx",
        "client/src/components/ui/widget-skeleton.tsx",
        "client/src/components/ui/user-badge.tsx",
        "client/src/components/ui/tooltip.tsx",
        "client/src/components/ui/tooltip-utils.tsx",
        "client/src/components/ui/toggle.tsx",
        "client/src/components/ui/toggle-group.tsx",
        "client/src/components/ui/toaster.tsx",
        "client/src/components/ui/toast.tsx",
        "client/src/components/ui/thread-skeleton.tsx",
        "client/src/components/ui/textarea.tsx",
        "client/src/components/ui/tag-badge.tsx",
        "client/src/components/ui/tabs.tsx",
        "client/src/components/ui/table.tsx",
        "client/src/components/ui/tab-switcher.tsx",
        "client/src/components/ui/switch.tsx",
        "client/src/components/ui/stat-chip.tsx",
        "client/src/components/ui/smart-thread-filters.tsx",
        "client/src/components/ui/slider.tsx",
        "client/src/components/ui/skeleton.tsx",
        "client/src/components/ui/sidebar.tsx",
        "client/src/components/ui/sheet.tsx",
        "client/src/components/ui/separator.tsx",
        "client/src/components/ui/seo-head.tsx",
        "client/src/components/ui/select.tsx",
        "client/src/components/ui/scroll-area.tsx",
        "client/src/components/ui/safe-image.tsx",
        "client/src/components/ui/resizable.tsx",
        "client/src/components/ui/reactions-bar.tsx",
        "client/src/components/ui/radio-group.tsx",
        "client/src/components/ui/progress.tsx",
        "client/src/components/ui/popover.tsx",
        "client/src/components/ui/pagination.tsx",
        "client/src/components/ui/navigation-menu.tsx",
        "client/src/components/ui/mobile-forum-nav.tsx",
        "client/src/components/ui/menubar.tsx",
        "client/src/components/ui/menu.tsx",
        "client/src/components/ui/loader.tsx",
        "client/src/components/ui/label.tsx",
        "client/src/components/ui/input.tsx",
        "client/src/components/ui/input-otp.tsx",
        "client/src/components/ui/index.ts",
        "client/src/components/ui/hover-card.tsx",
        "client/src/components/ui/hamburger.tsx",
        "client/src/components/ui/frost-card.tsx",
        "client/src/components/ui/form.tsx",
        "client/src/components/ui/file-drop-zone.tsx",
        "client/src/components/ui/feature-gate.tsx",
        "client/src/components/ui/error-display.tsx",
        "client/src/components/ui/enhanced-thread-card.tsx",
        "client/src/components/ui/enhanced-notifications.tsx",
        "client/src/components/ui/enhanced-loading-states.tsx",
        "client/src/components/ui/enhanced-button.tsx",
        "client/src/components/ui/dropdown-menu.tsx",
        "client/src/components/ui/drawer.tsx",
        "client/src/components/ui/dialog.tsx",
        "client/src/components/ui/context-menu.tsx",
        "client/src/components/ui/content-feed.tsx",
        "client/src/components/ui/content-area.tsx",
        "client/src/components/ui/command.tsx",
        "client/src/components/ui/collapsible.tsx",
        "client/src/components/ui/checkbox.tsx",
        "client/src/components/ui/chart.tsx",
        "client/src/components/ui/carousel.tsx",
        "client/src/components/ui/card.tsx",
        "client/src/components/ui/candlestick-menu.tsx",
        "client/src/components/ui/calendar.tsx",
        "client/src/components/ui/button.tsx",
        "client/src/components/ui/breadcrumb.tsx",
        "client/src/components/ui/bookmark-button.tsx",
        "client/src/components/ui/badge.tsx",
        "client/src/components/ui/avatar.tsx",
        "client/src/components/ui/aspect-ratio.tsx",
        "client/src/components/ui/animated-logo.tsx",
        "client/src/components/ui/alert.tsx",
        "client/src/components/ui/alert-dialog.tsx",
        "client/src/components/ui/accordion.tsx",
        "client/src/components/ui/accessibility-enhancements.tsx",
        "client/src/components/ui/Container.tsx",
        "client/src/components/sidebar/wallet-summary-widget.tsx",
        "client/src/components/sidebar/related-content-widget.tsx",
        "client/src/components/sidebar/navigation-widget.tsx",
        "client/src/components/sidebar/leaderboard-widget.tsx",
        "client/src/components/widgets/ProfileCard.tsx",
        "client/src/components/shop/shop-item-card.tsx",
        "client/src/components/shop/purchase-modal.tsx",
        "client/src/components/shop/ShopItem.tsx",
        "client/src/components/preferences/social-preferences.tsx",
        "client/src/components/preferences/session-preferences.tsx",
        "client/src/components/preferences/referral-preferences.tsx",
        "client/src/components/preferences/profile-preferences.tsx",
        "client/src/components/preferences/notification-preferences.tsx",
        "client/src/components/preferences/display-preferences.tsx",
        "client/src/components/preferences/account-preferences.tsx",
        "client/src/components/preferences/PreferencesToggle.tsx",
        "client/src/components/preferences/PreferencesTextarea.tsx",
        "client/src/components/preferences/PreferencesSelect.tsx",
        "client/src/components/preferences/PreferencesInput.tsx",
        "client/src/components/preferences/PreferencesGroup.tsx",
        "client/src/components/preferences/PreferencesCard.tsx",
        "client/src/components/profile/rarityUtils.ts",
        "client/src/components/profile/index.ts",
        "client/src/components/profile/XpLogView.tsx",
        "client/src/components/profile/XPProgressBar.tsx",
        "client/src/components/profile/XPProfileSection.tsx",
        "client/src/components/profile/WhaleWatchTab.tsx",
        "client/src/components/profile/UserTitles.tsx",
        "client/src/components/profile/UserProfileRenderer.tsx",
        "client/src/components/profile/UserBadges.tsx",
        "client/src/components/profile/UnifiedProfileCard.tsx",
        "client/src/components/profile/StatCard.tsx",
        "client/src/components/profile/SignatureRenderer.tsx",
        "client/src/components/profile/ProfileSkeleton.tsx",
        "client/src/components/profile/ProfileSidebar.tsx",
        "client/src/components/profile/ProfileNavigation.tsx",
        "client/src/components/profile/ProfileEditor.tsx",
        "client/src/components/profile/ProfileDashboard.tsx",
        "client/src/components/profile/ProfileCard.tsx",
        "client/src/components/profile/OverviewTab.tsx",
        "client/src/components/profile/InventoryTab.tsx",
        "client/src/components/profile/FriendsTab.tsx",
        "client/src/components/profile/CosmeticControlPanel.tsx",
        "client/src/components/profile/AchievementsTab.tsx",
        "client/src/components/platform-energy/index.ts",
        "client/src/components/payment/StripeElementsWrapper.tsx",
        "client/src/components/payment/PaymentForm.tsx",
        "client/src/components/paths/user-paths-display.tsx",
        "client/src/components/paths/path-progress.tsx",
        "client/src/components/notifications/NotificationPanel.tsx",
        "client/src/components/notifications/MentionsNotifications.tsx",
        "client/src/components/navigation/nav-item.tsx",
        "client/src/components/navigation/mobile-nav-bar.tsx",
        "client/src/components/navigation/ForumBreadcrumbs.tsx",
        "client/src/components/modals/TipPostModal.tsx",
        "client/src/components/modals/QuotePostModal.tsx",
        "client/src/components/modals/DeleteConfirmModal.tsx",
        "client/src/components/mod/mod-sidebar.tsx",
        "client/src/components/mod/mod-layout.tsx",
        "client/src/components/missions/MissionsWidget.tsx",
        "client/src/components/missions/DailyMissions.tsx",
        "client/src/components/messages/WhispersInbox.tsx",
        "client/src/components/messages/WhisperModal.tsx",
        "client/src/components/messages/WhisperButton.tsx",
        "client/src/components/mentions/MentionRenderer.tsx",
        "client/src/components/mentions/MentionAutocomplete.tsx",
        "client/src/components/layout/site-layout-wrapper.tsx",
        "client/src/components/layout/sidebar.tsx",
        "client/src/components/layout/hero-section.tsx",
        "client/src/components/layout/announcement-ticker.tsx",
        "client/src/components/layout/WidgetGallery.tsx",
        "client/src/components/layout/WidgetFrame.tsx",
        "client/src/components/layout/SlotRenderer.tsx",
        "client/src/components/layout/SidebarNavigation.tsx",
        "client/src/components/layout/ResponsiveLayoutWrapper.tsx",
        "client/src/components/layout/ProfileBackground.tsx",
        "client/src/components/layout/LayoutRenderer.tsx",
        "client/src/components/layout/AppSidebar.tsx",
        "client/src/components/media/MediaAsset.tsx",
        "client/src/components/icons/types.ts",
        "client/src/components/icons/iconRenderer.tsx",
        "client/src/components/icons/iconMap.config.ts",
        "client/src/components/icons/iconLoader.ts",
        "client/src/components/identity/path-progress.tsx",
        "client/src/components/identity/index.ts",
        "client/src/components/identity/UserName.tsx",
        "client/src/components/identity/RoleBadge.tsx",
        "client/src/components/identity/LevelBadge.tsx",
        "client/src/components/identity/AvatarFrame.tsx",
        "client/src/components/gamification/progression-card.tsx",
        "client/src/components/gamification/profile-gamification-widget.tsx",
        "client/src/components/gamification/mission-dashboard.tsx",
        "client/src/components/gamification/mission-card.tsx",
        "client/src/components/gamification/level-up-modal.tsx",
        "client/src/components/gamification/level-display.tsx",
        "client/src/components/gamification/leaderboard.tsx",
        "client/src/components/gamification/index.ts",
        "client/src/components/gamification/achievement-unlock-modal.tsx",
        "client/src/components/gamification/achievement-grid.tsx",
        "client/src/components/gamification/achievement-card.tsx",
        "client/src/components/header/index.ts",
        "client/src/components/header/WalletButton.tsx",
        "client/src/components/header/UserMenu.tsx",
        "client/src/components/header/SiteHeader.tsx",
        "client/src/components/header/SearchBox.tsx",
        "client/src/components/header/PrimaryNav.tsx",
        "client/src/components/header/NotificationButton.tsx",
        "client/src/components/header/NavLink.tsx",
        "client/src/components/header/MobileNav.tsx",
        "client/src/components/header/Logo.tsx",
        "client/src/components/header/HeaderThemeWrapper.tsx",
        "client/src/components/header/HeaderPluginSlot.tsx",
        "client/src/components/header/HeaderContext.tsx",
        "client/src/components/header/AuthButtons.tsx",
        "client/src/components/header/AdminButton.tsx",
        "client/src/components/footer/index.ts",
        "client/src/components/footer/SiteFooter.tsx",
        "client/src/components/footer/RandomTagline.tsx",
        "client/src/components/footer/LiveStats.tsx",
        "client/src/components/footer/FooterSection.tsx",
        "client/src/components/footer/FooterBrand.tsx",
        "client/src/components/fixtures/fixture-preview.tsx",
        "client/src/components/fixtures/fixture-builder.tsx",
        "client/src/components/forum/zone-group.tsx",
        "client/src/components/forum/tag-input.tsx",
        "client/src/components/forum/prefix-badge.tsx",
        "client/src/components/forum/index.ts",
        "client/src/components/forum/forum-guidelines.tsx",
        "client/src/components/forum/forum-filters.tsx",
        "client/src/components/forum/forum-category-card.tsx",
        "client/src/components/forum/forum-card.tsx",
        "client/src/components/forum/category-card.tsx",
        "client/src/components/forum/breadcrumb-nav.tsx",
        "client/src/components/forum/ZoneStats.tsx",
        "client/src/components/forum/ZoneCard.tsx",
        "client/src/components/forum/XpBoostBadge.tsx",
        "client/src/components/forum/UserLevelDisplay.tsx",
        "client/src/components/forum/ThreadStats.tsx",
        "client/src/components/forum/ThreadSidebar.tsx",
        "client/src/components/forum/ThreadRow.tsx",
        "client/src/components/forum/ThreadPagination.tsx",
        "client/src/components/forum/ThreadFilters.tsx",
        "client/src/components/forum/ThreadCard.tsx",
        "client/src/components/forum/ThreadAuthor.tsx",
        "client/src/components/forum/StickyBackButton.tsx",
        "client/src/components/forum/SolveBadge.tsx",
        "client/src/components/forum/SignatureRenderer.tsx",
        "client/src/components/forum/ShopCard.tsx",
        "client/src/components/forum/ShareButton.tsx",
        "client/src/components/forum/RecentActivity.tsx",
        "client/src/components/forum/ReactionBar.tsx",
        "client/src/components/forum/QuickStats.tsx",
        "client/src/components/forum/QuickReplyInput.tsx",
        "client/src/components/forum/ProfileCard.tsx",
        "client/src/components/forum/OriginForumPill.tsx",
        "client/src/components/forum/ModeratorActions.tsx",
        "client/src/components/forum/LegacyForumRedirect.tsx",
        "client/src/components/forum/HotTopics.tsx",
        "client/src/components/forum/ForumPage.tsx",
        "client/src/components/forum/ForumHeader.tsx",
        "client/src/components/forum/ForumErrorBoundary.tsx",
        "client/src/components/forum/CreateThreadButton.tsx",
        "client/src/components/forum/CanonicalZoneGrid.tsx",
        "client/src/components/forum/BBCodePostCard.tsx",
        "client/src/components/editor/suggestion.ts",
        "client/src/components/editor/rich-text-editor.tsx",
        "client/src/components/editor/gif-picker.tsx",
        "client/src/components/editor/enhanced-gif-picker.tsx",
        "client/src/components/errors/UserNotFound.tsx",
        "client/src/components/errors/ThreadNotFound.tsx",
        "client/src/components/errors/NetworkError.tsx",
        "client/src/components/errors/ForumNotFound.tsx",
        "client/src/components/errors/ErrorBoundary.tsx",
        "client/src/components/errors/AdminErrorBoundary.tsx",
        "client/src/components/dev/dev-role-switcher.tsx",
        "client/src/components/dev/dev-playground-shortcut.tsx",
        "client/src/components/economy/wallet-display.tsx",
        "client/src/components/dashboard/UpcomingEventsWidget.tsx",
        "client/src/components/dashboard/DailyTasksWidget.tsx",
        "client/src/components/common/index.ts",
        "client/src/components/common/StatsBar.tsx",
        "client/src/components/common/StandardErrorDisplay.tsx",
        "client/src/components/common/LoadingCard.tsx",
        "client/src/components/common/Breadcrumb.tsx",
        "client/src/components/common/BackToHomeButton.tsx",
        "client/src/components/auth/withRouteProtection.tsx",
        "client/src/components/auth/protected-route.tsx",
        "client/src/components/auth/index.ts",
        "client/src/components/auth/RouteGuards.tsx",
        "client/src/components/auth/RequireRole.tsx",
        "client/src/components/auth/ProtectedRoute.tsx",
        "client/src/components/auth/GlobalRouteGuard.tsx",
        "client/src/components/admin/simple-menu.tsx",
        "client/src/components/admin/protected-admin-route.tsx",
        "client/src/components/admin/cooldown-settings.tsx",
        "client/src/components/admin/XpActionRow.tsx",
        "client/src/components/admin/VisualJsonTabs.tsx",
        "client/src/components/admin/ModularAdminSidebar.tsx",
        "client/src/components/admin/ModularAdminLayout.tsx",
        "client/src/components/admin/GrantFrameModal.tsx",
        "client/src/components/admin/AdminThemeProvider.tsx",
        "client/src/components/admin/AdminDashboard.tsx",
        "client/src/lib/utils/generateSlug.ts",
        "client/src/lib/utils/cosmeticsUtils.tsx",
        "client/src/lib/utils/category.ts",
        "client/src/lib/utils/applyPluginRewards.ts",
        "client/src/lib/utils/api-helpers.ts",
        "client/src/lib/utils/animateNumber.ts",
        "client/src/lib/forum/urls.ts",
        "client/src/lib/forum/sidebarUtils.ts",
        "client/src/lib/forum/breadcrumbs.ts",
        "client/src/lib/api/achievements.ts",
        "client/src/components/shoutbox/shoutbox.spec.tsx",
        "client/src/components/shoutbox/shoutbox-widget.tsx",
        "client/src/components/shoutbox/shoutbox-rain-notification.tsx",
        "client/src/components/shoutbox/shoutbox-position-selector.tsx",
        "client/src/components/shoutbox/shoutbox-message-styles.tsx",
        "client/src/components/shoutbox/shoutbox-help-command.tsx",
        "client/src/components/shoutbox/positioned-shoutbox.tsx",
        "client/src/components/shoutbox/integration-example.tsx",
        "client/src/components/shoutbox/index.ts",
        "client/src/components/shoutbox/ShoutboxInput.tsx",
        "client/src/components/shoutbox/ShoutboxContainer.tsx",
        "client/src/__tests__/types/admin.types.test.ts",
        "client/src/__tests__/services/error.service.test.ts",
        "client/src/pages/ui-playground/sections/FontsSection.tsx",
        "client/src/pages/ui-playground/sections/ColorsSection.tsx",
        "client/src/pages/ui-playground/sections/CardsSection.tsx",
        "client/src/pages/ui-playground/sections/ButtonsSection.tsx",
        "client/src/pages/ui-playground/sections/AvatarBadgesSection.tsx",
        "client/src/pages/ui-playground/sections/AnimationsSection.tsx",
        "client/src/pages/ui-playground/animations/FadeInListDemo.tsx",
        "client/src/pages/ui-playground/animations/CardFlipDemo.tsx",
        "client/src/pages/ui-playground/animations/ButtonPulseDemo.tsx",
        "client/src/pages/admin/wallets/index.tsx",
        "client/src/pages/admin/users/[userId].tsx",
        "client/src/pages/admin/ui/pack-builder.tsx",
        "client/src/pages/admin/ui/animations.tsx",
        "client/src/pages/admin/transactions/index.tsx",
        "client/src/pages/admin/stats/index.tsx",
        "client/src/pages/admin/shop/rarities.tsx",
        "client/src/pages/admin/shop/index.tsx",
        "client/src/pages/admin/shop/edit.tsx",
        "client/src/pages/admin/shop/categories.tsx",
        "client/src/pages/admin/reports/index.tsx",
        "client/src/pages/admin/permissions/index.tsx",
        "client/src/pages/admin/missions/index.tsx",
        "client/src/pages/admin/features/index.tsx",
        "client/src/pages/admin/dictionary/index.tsx",
        "client/src/pages/admin/dev/seeding.tsx",
        "client/src/pages/admin/config/zones.tsx",
        "client/src/pages/admin/config/xp.tsx",
        "client/src/pages/admin/config/tags.tsx",
        "client/src/pages/admin/config/economy.tsx",
        "client/src/pages/admin/clout/index.tsx",
        "client/src/pages/admin/clout/grants.tsx",
        "client/src/pages/admin/clout/achievements.tsx",
        "client/src/pages/admin/announcements/index.tsx",
        "client/src/pages/admin/activity/index.tsx",
        "client/src/pages/admin/xp/user-adjustment.tsx",
        "client/src/pages/admin/xp/titles.tsx",
        "client/src/pages/admin/xp/settings.tsx",
        "client/src/pages/admin/xp/badges.tsx",
        "client/src/pages/admin/xp/adjust.tsx",
        "client/src/pages/admin/xp/actions.tsx",
        "client/src/features/wallet/services/wallet-api.service.ts",
        "client/src/features/gamification/services/gamification-api.service.ts",
        "client/src/features/forum/services/forumApi.ts",
        "client/src/features/forum/hooks/useThreadPermissions.ts",
        "client/src/features/forum/hooks/useForumStats.ts",
        "client/src/features/forum/hooks/useForumQueries.ts",
        "client/src/features/forum/hooks/useForumMutations.ts",
        "client/src/features/forum/contexts/ThreadActionsContext.tsx",
        "client/src/features/forum/components/index.ts",
        "client/src/features/forum/components/ThreadList.tsx",
        "client/src/features/forum/components/ThreadForm.tsx",
        "client/src/features/forum/components/ReportPostDialog.tsx",
        "client/src/features/forum/components/ReplyForm.tsx",
        "client/src/features/forum/components/ReactionTray.tsx",
        "client/src/features/forum/components/PostCard.tsx",
        "client/src/features/forum/components/LikeButton.tsx",
        "client/src/features/forum/components/HotThreads.tsx",
        "client/src/features/forum/components/HierarchicalZoneNav.tsx",
        "client/src/features/forum/components/ForumListItem.tsx",
        "client/src/features/forum/components/ForumHeader.tsx",
        "client/src/features/forum/components/EditPostDialog.tsx",
        "client/src/features/forum/components/CreateThreadForm.tsx",
        "client/src/features/forum/components/CreatePostForm.tsx",
        "client/src/features/dictionary/services/dictionaryApi.ts",
        "client/src/features/dictionary/components/AddWordModal.tsx",
        "client/src/features/admin/services/xpCloutService.ts",
        "client/src/features/admin/services/xpActionsService.ts",
        "client/src/features/admin/services/uiConfigApi.ts",
        "client/src/features/admin/services/sticker-api.service.ts",
        "client/src/features/admin/services/settingsService.ts",
        "client/src/features/admin/services/media-api.service.ts",
        "client/src/features/admin/services/economyConfigService.ts",
        "client/src/features/admin/services/cloutGrantsService.ts",
        "client/src/features/admin/services/cloutAchievementsService.ts",
        "client/src/features/admin/services/brandConfigApi.ts",
        "client/src/features/admin/services/animation-pack-api.service.ts",
        "client/src/features/admin/hooks/useSystemAnalytics.ts",
        "client/src/features/admin/api/system-analytics.api.ts",
        "client/src/features/activity/services/activityApi.ts",
        "client/src/features/activity/hooks/useActivityFeed.ts",
        "client/src/features/activity/components/PaginatedActivityFeed.tsx",
        "client/src/features/activity/components/ActivityFeed.tsx",
        "client/src/features/users/services/usersApi.ts",
        "client/src/features/users/services/referralsApi.ts",
        "client/src/features/users/services/index.ts",
        "client/src/features/users/hooks/useUserReferrals.ts",
        "client/src/features/users/hooks/useActiveUsers.ts",
        "client/src/features/users/hooks/index.ts",
        "client/src/components/profile/widgets/index.ts",
        "client/src/components/profile/widgets/WalletOverviewCard.tsx",
        "client/src/components/profile/widgets/SocialStatsCard.tsx",
        "client/src/components/profile/widgets/ReputationCard.tsx",
        "client/src/components/profile/widgets/QuickActionsCard.tsx",
        "client/src/components/profile/widgets/ProfileInsightsCard.tsx",
        "client/src/components/profile/widgets/MilestoneCard.tsx",
        "client/src/components/profile/widgets/ActivityStatsCard.tsx",
        "client/src/components/platform-energy/stats/platform-stats-widget.tsx",
        "client/src/components/platform-energy/recent-posts/recent-posts-feed.tsx",
        "client/src/components/platform-energy/leaderboards/weekly-leaderboard.tsx",
        "client/src/components/platform-energy/featured-threads/featured-threads-slider.tsx",
        "client/src/components/messages/icons/MessageSquareWave.tsx",
        "client/src/components/forum/sidebar/index.ts",
        "client/src/components/forum/sidebar/WidgetSkeleton.tsx",
        "client/src/components/forum/sidebar/StatsWidget.tsx",
        "client/src/components/forum/sidebar/SidebarWidgetCard.tsx",
        "client/src/components/forum/sidebar/SidebarIntegrationExample.tsx",
        "client/src/components/forum/sidebar/HotTopicsWidget.tsx",
        "client/src/components/forum/sidebar/DynamicSidebar.tsx",
        "client/src/components/forum/sidebar/ActivityFeedWidget.tsx",
        "client/src/components/forum/layouts/index.ts",
        "client/src/components/forum/layouts/ResponsiveForumLayout.tsx",
        "client/src/components/forum/layouts/MagicForumBuilder.tsx",
        "client/src/components/forum/layouts/AdaptiveForumGrid.tsx",
        "client/src/components/forum/enhanced/QuickReactions.tsx",
        "client/src/components/forum/enhanced/MobileForumNavigation.tsx",
        "client/src/components/forum/enhanced/CryptoEngagementBar.tsx",
        "client/src/components/economy/xp/XPProgressBar.tsx",
        "client/src/components/economy/xp/XPHistoryLog.tsx",
        "client/src/components/economy/xp/TitleSelector.tsx",
        "client/src/components/economy/xp/LevelUpNotification.tsx",
        "client/src/components/economy/xp/LevelBadge.tsx",
        "client/src/components/economy/wallet/withdraw-button.tsx",
        "client/src/components/economy/wallet/wallet-balance-display.tsx",
        "client/src/components/economy/wallet/wallet-address-display.tsx",
        "client/src/components/economy/wallet/transaction-history.tsx",
        "client/src/components/economy/wallet/tip-button.tsx",
        "client/src/components/economy/wallet/rain-button.tsx",
        "client/src/components/economy/wallet/dgt-transfer.tsx",
        "client/src/components/economy/wallet/deposit-button.tsx",
        "client/src/components/economy/wallet/buy-dgt-button.tsx",
        "client/src/components/economy/wallet/animated-balance.tsx",
        "client/src/components/economy/wallet/WalletSheet.tsx",
        "client/src/components/economy/wallet/TransactionSheet.tsx",
        "client/src/components/economy/wallet/PackagesGrid.tsx",
        "client/src/components/economy/wallet/DgtPackageCard.tsx",
        "client/src/components/economy/shoutbox/enhanced-shoutbox-widget.tsx",
        "client/src/components/economy/badges/UserBadgesDisplay.tsx",
        "client/src/components/economy/badges/BadgeShowcase.tsx",
        "client/src/components/forum/bbcode/index.ts",
        "client/src/components/forum/bbcode/QuickReplyBox.tsx",
        "client/src/components/forum/bbcode/PostSidebar.tsx",
        "client/src/components/forum/bbcode/PostHeader.tsx",
        "client/src/components/forum/bbcode/PostFooter.tsx",
        "client/src/components/forum/bbcode/PostBody.tsx",
        "client/src/components/forum/bbcode/PostActions.tsx",
        "client/src/components/admin/wallet/mock-webhook-trigger.tsx",
        "client/src/components/admin/titles/TitlesSection.tsx",
        "client/src/components/admin/roles/RolesSection.tsx",
        "client/src/components/admin/roles/RoleForm.tsx",
        "client/src/components/admin/permissions/PermissionsOverview.tsx",
        "client/src/components/admin/permissions/PermissionsEditor.tsx",
        "client/src/components/admin/media/MediaPickerModal.tsx",
        "client/src/components/admin/media/MediaLibraryModal.tsx",
        "client/src/components/admin/inputs/UnlockMultiSelect.tsx",
        "client/src/components/admin/inputs/AdminToggle.tsx",
        "client/src/components/admin/inputs/AdminAccessSelector.tsx",
        "client/src/components/admin/form-controls/index.ts",
        "client/src/components/admin/form-controls/SwitchRow.tsx",
        "client/src/components/admin/form-controls/JsonEditor.tsx",
        "client/src/components/admin/form-controls/InlineError.tsx",
        "client/src/components/admin/form-controls/ImageUpload.tsx",
        "client/src/components/admin/form-controls/ColorPicker.tsx",
        "client/src/components/admin/effects/CloutObliterationEffect.tsx",
        "client/src/components/admin/effects/BankruptcyEffect.tsx",
        "client/src/components/admin/common/AdminDataTable.tsx",
        "client/src/components/admin/clout/CloutTiersSection.tsx",
        "client/src/components/admin/clout/CloutLogsSection.tsx",
        "client/src/components/admin/clout/CloutGrantsSection.tsx",
        "client/src/components/admin/clout/AchievementsSection.tsx",
        "client/src/components/admin/layout/EntityTable.tsx",
        "client/src/components/admin/layout/EntityFilters.tsx",
        "client/src/components/admin/layout/AdminPageShell.tsx",
        "client/src/pages/admin/activity/user/[userId].tsx",
        "client/src/features/admin/components/analytics/SystemOverviewCard.tsx",
        "client/src/features/admin/components/analytics/SystemHealthCard.tsx",
        "client/src/features/admin/components/analytics/SystemAlertsCard.tsx",
        "client/src/features/admin/components/analytics/RealtimeMetricsCard.tsx",
        "client/src/features/admin/components/analytics/PerformanceHeatmapCard.tsx",
        "client/src/features/admin/components/analytics/DatabaseStatsCard.tsx",
        "client/src/features/admin/components/analytics/CacheAnalyticsCard.tsx",
        "client/src/features/admin/components/analytics/APIMetricsCard.tsx",
        "client/src/features/admin/components/dashboard/index.ts",
        "client/src/features/admin/components/dashboard/TippingAnalyticsCard.tsx",
        "client/src/features/admin/components/dashboard/RainAnalyticsCard.tsx",
        "client/src/features/admin/components/dashboard/EngagementAnalyticsDashboard.tsx",
        "client/src/components/forum/layouts/__tests__/ResponsiveForumLayout.test.tsx",
        "client/src/components/forum/layouts/__tests__/AdaptiveForumGrid.test.tsx",
        "client/src/components/forum/enhanced/__tests__/QuickReactions.test.tsx",
        "client/src/components/forum/enhanced/__tests__/EnhancedThreadCard.test.tsx",
        "client/src/components/forum/enhanced/__tests__/CryptoEngagementBar.test.tsx",
        "client/src/components/admin/forms/xp/TitleMediaInput.tsx",
        "client/src/components/admin/forms/xp/LevelFormDialogs.tsx",
        "client/src/components/admin/forms/xp/BadgeFormDialogs.tsx",
        "client/src/components/admin/forms/wallets/ManualDgtAdjustmentDialog.tsx",
        "client/src/components/admin/forms/users/UserFormDialog.tsx",
        "client/src/components/admin/forms/users/UserActionDialogs.tsx",
        "client/src/components/admin/forms/roles/RoleFormDialog.tsx",
        "client/src/components/admin/forms/reports/ViewReportDialog.tsx",
        "client/src/components/admin/forms/reports/ReportActionDialogs.tsx"
      ],
      "issues": [
        {
          "file": "client/src/types/profile.ts",
          "line": 27,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/profile.ts",
          "line": 34,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/profile.ts",
          "line": 42,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/profile.ts",
          "line": 49,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/profile.ts",
          "line": 56,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/profile.ts",
          "line": 63,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/payment.types.ts",
          "line": 20,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/types/payment.types.ts",
          "line": 39,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/types/payment.types.ts",
          "line": 56,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/types/payment.types.ts",
          "line": 90,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/types/notifications.ts",
          "line": 5,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/notifications.ts",
          "line": 6,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/types/inventory.ts",
          "line": 9,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/inventory.ts",
          "line": 19,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number; // This is the inventory item's own ID, should be number",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/inventory.ts",
          "line": 31,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number; // This is the inventory item's own ID, should be number",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/gamification.types.ts",
          "line": 88,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 23,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 60,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 110,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 149,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 178,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 206,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 275,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 400,
          "column": 21,
          "pattern": "id: number",
          "context": "getStructureById: (id: number) => CanonicalForum | CanonicalSubforum | undefined;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 208,
          "column": 2,
          "pattern": "threadId: number",
          "context": "threadId: number;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/types/canonical.types.ts",
          "line": 378,
          "column": 2,
          "pattern": "threadId: number",
          "context": "threadId: number;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/types/admin.types.ts",
          "line": 82,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/leaderboard.tsx",
          "line": 23,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/forum-rules.tsx",
          "line": 27,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/forum-rules.tsx",
          "line": 48,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/forum-rules.tsx",
          "line": 49,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/pages/degen-index.tsx",
          "line": 15,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/core/api.ts",
          "line": 224,
          "column": 18,
          "pattern": "id: number",
          "context": "recipients: { id: number; username: string }[];",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useXP.ts",
          "line": 37,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useXP.ts",
          "line": 47,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useXP.ts",
          "line": 56,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useUserXP.ts",
          "line": 6,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/hooks/useUserCosmetics.ts",
          "line": 11,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useMissions.ts",
          "line": 8,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useMissions.ts",
          "line": 27,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useMissions.ts",
          "line": 28,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/hooks/useIdentityDisplay.ts",
          "line": 7,
          "column": 18,
          "pattern": "id: number",
          "context": "roles?: Array<{ id: number; name: string; hexColor?: string | null }>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/useIdentityDisplay.ts",
          "line": 34,
          "column": 68,
          "pattern": "parseInt(user.id)",
          "context": "const { data: xpData } = useUserXP(typeof user?.id === 'string' ? parseInt(user.id) : user?.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "client/src/hooks/use-tip.ts",
          "line": 21,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-rain.ts",
          "line": 17,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-rain.ts",
          "line": 25,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-messages.tsx",
          "line": 4,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-dgt-packages.ts",
          "line": 5,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-auth.tsx",
          "line": 12,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-achievements.ts",
          "line": 55,
          "column": 32,
          "pattern": "id: number",
          "context": "export function useAchievement(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-achievements.ts",
          "line": 68,
          "column": 43,
          "pattern": "id: number",
          "context": "export function useAchievementCompletions(id: number, page = 1, limit = 50) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-achievements.ts",
          "line": 115,
          "column": 32,
          "pattern": "id: number",
          "context": "mutationFn: ({ id, data }: { id: number; data: Partial<Achievement> }) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-achievements.ts",
          "line": 135,
          "column": 16,
          "pattern": "id: number",
          "context": "mutationFn: (id: number) => achievementApi.deleteAchievement(id),",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/use-achievements.ts",
          "line": 172,
          "column": 43,
          "pattern": "id: number",
          "context": "mutationFn: ({ id, userIds, reason }: { id: number; userIds: string[]; reason?: string }) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/constants/apiRoutes.ts",
          "line": 4,
          "column": 20,
          "pattern": "id: number",
          "context": "threadsByForum: (id: number | string) => `/api/forum/forums/${id}/threads`",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/contexts/ForumStructureContext.tsx",
          "line": 179,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/contexts/ForumStructureContext.tsx",
          "line": 209,
          "column": 16,
          "pattern": "id: number",
          "context": "getZoneById: (id: number) => MergedZone | undefined;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/contexts/ForumStructureContext.tsx",
          "line": 211,
          "column": 17,
          "pattern": "id: number",
          "context": "getForumById: (id: number) => MergedForum | undefined;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/types/compat/avatar.ts",
          "line": 5,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/payments/ccpayment/withdraw.ts",
          "line": 15,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/payments/ccpayment/withdraw.ts",
          "line": 118,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/payments/ccpayment/swap.ts",
          "line": 14,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/payments/ccpayment/deposit.ts",
          "line": 15,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/payments/shared/index.ts",
          "line": 23,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/pages/shop/avatar-frames.tsx",
          "line": 14,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/users.tsx",
          "line": 94,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/users.tsx",
          "line": 106,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/reports.tsx",
          "line": 59,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/reports.tsx",
          "line": 126,
          "column": 18,
          "pattern": "id: number",
          "context": "async getReport(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/reports.tsx",
          "line": 133,
          "column": 22,
          "pattern": "id: number",
          "context": "async resolveReport(id: number, data: { action: string; reason?: string; banDuration?: string }) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/reports.tsx",
          "line": 141,
          "column": 22,
          "pattern": "id: number",
          "context": "async dismissReport(id: number, reason: string) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/reports.tsx",
          "line": 196,
          "column": 4,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/reports.tsx",
          "line": 212,
          "column": 34,
          "pattern": "id: number",
          "context": "mutationFn: ({ id, reason }: { id: number; reason: string }) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/activity.tsx",
          "line": 54,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/mod/activity.tsx",
          "line": 153,
          "column": 27,
          "pattern": "id: number",
          "context": "async getActivityDetails(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/dictionary/index.tsx",
          "line": 13,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/dictionary/[slug].tsx",
          "line": 12,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/dictionary/[slug].tsx",
          "line": 34,
          "column": 38,
          "pattern": "id: number",
          "context": "const upvoteMutation = useMutation((id: number) => dictionaryApi.upvote(id), {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp-system.tsx",
          "line": 136,
          "column": 32,
          "pattern": "id: number",
          "context": "mutationFn: ({ id, data }: { id: number; data: LevelFormData }) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp-system.tsx",
          "line": 150,
          "column": 16,
          "pattern": "id: number",
          "context": "mutationFn: (id: number) => apiRequest({ url: `/api/admin/xp/levels/${id}`, method: 'DELETE' }),",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/treasury.tsx",
          "line": 44,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/treasury.tsx",
          "line": 45,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/pages/admin/treasury.tsx",
          "line": 52,
          "column": 2,
          "pattern": "walletId: number",
          "context": "walletId: number;",
          "severity": "critical",
          "suggestedType": "WalletId"
        },
        {
          "file": "client/src/pages/admin/tags.tsx",
          "line": 122,
          "column": 58,
          "pattern": "id: number",
          "context": "mutationFn: async (data: z.infer<typeof tagSchema> & { id: number }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/tags.tsx",
          "line": 147,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/shoutbox.tsx",
          "line": 68,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/roles.tsx",
          "line": 21,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/roles-titles.tsx",
          "line": 36,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/roles-titles.tsx",
          "line": 73,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/prefixes.tsx",
          "line": 156,
          "column": 61,
          "pattern": "id: number",
          "context": "mutationFn: async (data: z.infer<typeof prefixSchema> & { id: number }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/prefixes.tsx",
          "line": 181,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/prefixes.tsx",
          "line": 201,
          "column": 43,
          "pattern": "id: number",
          "context": "mutationFn: async ({ id, direction }: { id: number; direction: 'up' | 'down' }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/prefixes.tsx",
          "line": 237,
          "column": 31,
          "pattern": "id: number",
          "context": "const handleReorderPrefix = (id: number, direction: 'up' | 'down') => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/forum-structure.tsx",
          "line": 92,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/emojis.tsx",
          "line": 68,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/emojis.tsx",
          "line": 141,
          "column": 33,
          "pattern": "id: number",
          "context": "mutationFn: ({ id, emoji }: { id: number; emoji: EmojiFormValues }) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/emojis.tsx",
          "line": 174,
          "column": 16,
          "pattern": "id: number",
          "context": "mutationFn: (id: number) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/categories.tsx",
          "line": 89,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/categories.tsx",
          "line": 146,
          "column": 63,
          "pattern": "id: number",
          "context": "mutationFn: async (data: z.infer<typeof categorySchema> & { id: number }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/categories.tsx",
          "line": 161,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/categories.tsx",
          "line": 175,
          "column": 43,
          "pattern": "id: number",
          "context": "mutationFn: async ({ id, direction }: { id: number; direction: 'up' | 'down' }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/categories.tsx",
          "line": 206,
          "column": 33,
          "pattern": "id: number",
          "context": "const handleReorderCategory = (id: number, direction: 'up' | 'down') => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/avatar-frames.tsx",
          "line": 100,
          "column": 59,
          "pattern": "id: number",
          "context": "const updateMutation = useMutation<AvatarFrame, Error, { id: number; data: CreateFrameData }>({",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/airdrop.tsx",
          "line": 29,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/preferences/useUserSettings.ts",
          "line": 9,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/hooks/preferences/useUserSettings.ts",
          "line": 25,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/hooks/preferences/useUserSettings.ts",
          "line": 34,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/components/users/UserAvatar.tsx",
          "line": 10,
          "column": 4,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/users/ActiveMembersWidget.tsx",
          "line": 19,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number | string;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/social/WhaleWatchDashboard.tsx",
          "line": 43,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/social/FriendsManager.tsx",
          "line": 55,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/social/FriendsManager.tsx",
          "line": 66,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/ui/smart-thread-filters.tsx",
          "line": 67,
          "column": 26,
          "pattern": "id: number",
          "context": "availableTags?: Array<{ id: number; name: string; slug: string; color?: string }>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/ui/smart-thread-filters.tsx",
          "line": 68,
          "column": 30,
          "pattern": "id: number",
          "context": "availablePrefixes?: Array<{ id: number; name: string; color?: string }>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/ui/reactions-bar.tsx",
          "line": 21,
          "column": 2,
          "pattern": "postId: number",
          "context": "postId: number;",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/components/ui/enhanced-button.tsx",
          "line": 86,
          "column": 56,
          "pattern": "id: number",
          "context": "const [ripples, setRipples] = React.useState<Array<{ id: number; x: number; y: number }>>([]);",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/ui/bookmark-button.tsx",
          "line": 12,
          "column": 2,
          "pattern": "threadId: number",
          "context": "threadId: number;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/components/profile/XpLogView.tsx",
          "line": 58,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/UserTitles.tsx",
          "line": 9,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/UserTitles.tsx",
          "line": 64,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/UserBadges.tsx",
          "line": 9,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/UserBadges.tsx",
          "line": 64,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/CosmeticControlPanel.tsx",
          "line": 23,
          "column": 18,
          "pattern": "id: number",
          "context": "activeFrame?: { id: number; name: string; imageUrl: string; rarity: string } | null; // IDs for frame, title, badge are numbers",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/CosmeticControlPanel.tsx",
          "line": 24,
          "column": 18,
          "pattern": "id: number",
          "context": "activeTitle?: { id: number; name: string; description: string | null; rarity: string } | null; // IDs for frame, title, badge are numbers",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/profile/CosmeticControlPanel.tsx",
          "line": 26,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number; // IDs for frame, title, badge are numbers",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/notifications/MentionsNotifications.tsx",
          "line": 27,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/missions/DailyMissions.tsx",
          "line": 37,
          "column": 12,
          "pattern": "id: number",
          "context": "onClaim: (id: number) => void;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/layout/announcement-ticker.tsx",
          "line": 20,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/gamification/leaderboard.tsx",
          "line": 101,
          "column": 30,
          "pattern": "userId: number",
          "context": "const toggleRowExpansion = (userId: number) => {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/components/forum/zone-group.tsx",
          "line": 51,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/zone-group.tsx",
          "line": 59,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/zone-group.tsx",
          "line": 73,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/forum-card.tsx",
          "line": 9,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/forum-card.tsx",
          "line": 18,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/category-card.tsx",
          "line": 18,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/ShareButton.tsx",
          "line": 6,
          "column": 2,
          "pattern": "threadId: number",
          "context": "threadId: number | string;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/components/forum/RecentActivity.tsx",
          "line": 9,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/RecentActivity.tsx",
          "line": 13,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/ReactionBar.tsx",
          "line": 29,
          "column": 2,
          "pattern": "postId: number",
          "context": "postId: number;",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/components/forum/HotTopics.tsx",
          "line": 9,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/errors/ThreadNotFound.tsx",
          "line": 16,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/lib/forum/urls.ts",
          "line": 8,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/lib/forum/breadcrumbs.ts",
          "line": 5,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/lib/api/achievements.ts",
          "line": 11,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/lib/api/achievements.ts",
          "line": 18,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/lib/api/achievements.ts",
          "line": 35,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/lib/api/achievements.ts",
          "line": 115,
          "column": 23,
          "pattern": "id: number",
          "context": "getAchievementById: (id: number) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/lib/api/achievements.ts",
          "line": 123,
          "column": 30,
          "pattern": "id: number",
          "context": "getAchievementCompletions: (id: number, page = 1, limit = 50) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/lib/api/achievements.ts",
          "line": 142,
          "column": 22,
          "pattern": "id: number",
          "context": "updateAchievement: (id: number, achievementData: Partial<Achievement>) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/lib/api/achievements.ts",
          "line": 152,
          "column": 22,
          "pattern": "id: number",
          "context": "deleteAchievement: (id: number) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/lib/api/achievements.ts",
          "line": 171,
          "column": 29,
          "pattern": "id: number",
          "context": "manuallyAwardAchievement: (id: number, userIds: string[], reason?: string) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/shoutbox/shoutbox-widget.tsx",
          "line": 58,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/shoutbox/shoutbox-widget.tsx",
          "line": 67,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/shoutbox/shoutbox-widget.tsx",
          "line": 79,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/shoutbox/ShoutboxContainer.tsx",
          "line": 27,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/pages/admin/ui/pack-builder.tsx",
          "line": 61,
          "column": 26,
          "pattern": "id: number",
          "context": "const removeFromPack = (id: number) => setContents(contents.filter((c) => c.id !== id));",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/shop/rarities.tsx",
          "line": 38,
          "column": 48,
          "pattern": "id: number",
          "context": "type Rarity = z.infer<typeof RaritySchema> & { id: number };",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/shop/rarities.tsx",
          "line": 91,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/shop/categories.tsx",
          "line": 30,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/shop/categories.tsx",
          "line": 48,
          "column": 52,
          "pattern": "id: number",
          "context": "type Category = z.infer<typeof CategorySchema> & { id: number };",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/shop/categories.tsx",
          "line": 112,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/reports/index.tsx",
          "line": 73,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/reports/index.tsx",
          "line": 177,
          "column": 30,
          "pattern": "id: number",
          "context": "mutationFn: async (data: { id: number; notes?: string }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/reports/index.tsx",
          "line": 194,
          "column": 30,
          "pattern": "id: number",
          "context": "mutationFn: async (data: { id: number; notes?: string }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/reports/index.tsx",
          "line": 211,
          "column": 30,
          "pattern": "userId: number",
          "context": "mutationFn: async (data: { userId: number; reason: string; duration?: string }) => {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/pages/admin/missions/index.tsx",
          "line": 48,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/dictionary/index.tsx",
          "line": 11,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/dictionary/index.tsx",
          "line": 55,
          "column": 34,
          "pattern": "id: number",
          "context": "mutationFn: ({ id, status }: { id: number; status: 'approved' | 'rejected' }) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/clout/index.tsx",
          "line": 17,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/clout/index.tsx",
          "line": 30,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/clout/grants.tsx",
          "line": 69,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/announcements/index.tsx",
          "line": 75,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/announcements/index.tsx",
          "line": 245,
          "column": 40,
          "pattern": "id: number",
          "context": "mutationFn: async ({ id, values }: { id: number; values: AnnouncementFormValues }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/announcements/index.tsx",
          "line": 273,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/user-adjustment.tsx",
          "line": 63,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/user-adjustment.tsx",
          "line": 74,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/user-adjustment.tsx",
          "line": 75,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/pages/admin/xp/user-adjustment.tsx",
          "line": 203,
          "column": 33,
          "pattern": "userId: number",
          "context": "const refetchUserInfo = async (userId: number) => {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/pages/admin/xp/titles.tsx",
          "line": 43,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/titles.tsx",
          "line": 174,
          "column": 38,
          "pattern": "id: number",
          "context": "mutationFn: async ({ id, data }: { id: number; data: TitleFormData }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/titles.tsx",
          "line": 196,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/badges.tsx",
          "line": 97,
          "column": 64,
          "pattern": "id: number",
          "context": "const updateBadgeMutation = useCrudMutation<unknown, Error, { id: number; data: BadgeFormData }>({",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/pages/admin/xp/adjust.tsx",
          "line": 70,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/gamification/services/gamification-api.service.ts",
          "line": 58,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/gamification/services/gamification-api.service.ts",
          "line": 87,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/gamification/services/gamification-api.service.ts",
          "line": 106,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/gamification/services/gamification-api.service.ts",
          "line": 34,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/features/gamification/services/gamification-api.service.ts",
          "line": 77,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/features/gamification/services/gamification-api.service.ts",
          "line": 107,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/features/gamification/services/gamification-api.service.ts",
          "line": 117,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/features/gamification/services/gamification-api.service.ts",
          "line": 242,
          "column": 34,
          "pattern": "userId: number",
          "context": "async checkAndAwardAchievements(userId: number, actionType: string, metadata?: any) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/features/gamification/services/gamification-api.service.ts",
          "line": 314,
          "column": 30,
          "pattern": "userId: number",
          "context": "async updateMissionProgress(userId: number, actionType: string, metadata?: any) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/features/forum/services/forumApi.ts",
          "line": 156,
          "column": 3,
          "pattern": "threadId: number",
          "context": "threadId: number,",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/features/forum/services/forumApi.ts",
          "line": 251,
          "column": 3,
          "pattern": "threadId: number",
          "context": "threadId: number,",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/features/forum/services/forumApi.ts",
          "line": 304,
          "column": 3,
          "pattern": "postId: number",
          "context": "postId: number,",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/features/forum/services/forumApi.ts",
          "line": 336,
          "column": 3,
          "pattern": "postId: number",
          "context": "postId: number,",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/features/forum/services/forumApi.ts",
          "line": 348,
          "column": 3,
          "pattern": "postId: number",
          "context": "postId: number,",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/features/forum/hooks/useForumStats.ts",
          "line": 30,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/forum/hooks/useForumQueries.ts",
          "line": 202,
          "column": 2,
          "pattern": "threadId: number",
          "context": "threadId: number | undefined,",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/features/forum/hooks/useForumQueries.ts",
          "line": 419,
          "column": 4,
          "pattern": "postId: number",
          "context": "postId: number;",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/features/forum/hooks/useForumMutations.ts",
          "line": 92,
          "column": 4,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/features/forum/hooks/useForumMutations.ts",
          "line": 133,
          "column": 4,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/features/forum/hooks/useForumMutations.ts",
          "line": 36,
          "column": 4,
          "pattern": "threadId: number",
          "context": "threadId: number;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/features/forum/components/ReplyForm.tsx",
          "line": 16,
          "column": 2,
          "pattern": "threadId: number",
          "context": "threadId: number;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/features/forum/components/ReactionTray.tsx",
          "line": 6,
          "column": 2,
          "pattern": "postId: number",
          "context": "postId: number; // postId might be used for keys or future data fetching within this component",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/features/forum/components/LikeButton.tsx",
          "line": 6,
          "column": 2,
          "pattern": "postId: number",
          "context": "postId: number; // Retained for context, though not directly used in this simplified version",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/features/forum/components/CreateThreadForm.tsx",
          "line": 56,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/forum/components/CreatePostForm.tsx",
          "line": 25,
          "column": 2,
          "pattern": "threadId: number",
          "context": "threadId: number;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/features/dictionary/services/dictionaryApi.ts",
          "line": 8,
          "column": 13,
          "pattern": "id: number",
          "context": "moderate: (id: number, status: 'approved' | 'rejected') =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/dictionary/services/dictionaryApi.ts",
          "line": 10,
          "column": 11,
          "pattern": "id: number",
          "context": "upvote: (id: number) => apiRequest({ url: `/api/dictionary/${id}/upvote`, method: 'POST' })",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/sticker-api.service.ts",
          "line": 12,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/sticker-api.service.ts",
          "line": 45,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/sticker-api.service.ts",
          "line": 203,
          "column": 19,
          "pattern": "id: number",
          "context": "async getSticker(id: number): Promise<ApiResponse<{ sticker: Sticker }>> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/sticker-api.service.ts",
          "line": 227,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number,",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/sticker-api.service.ts",
          "line": 240,
          "column": 22,
          "pattern": "id: number",
          "context": "async deleteSticker(id: number): Promise<ApiResponse<{ message: string }>> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/sticker-api.service.ts",
          "line": 278,
          "column": 23,
          "pattern": "id: number",
          "context": "async getStickerPack(id: number): Promise<ApiResponse<{ pack: StickerPack }>> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/sticker-api.service.ts",
          "line": 302,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number,",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/sticker-api.service.ts",
          "line": 315,
          "column": 26,
          "pattern": "id: number",
          "context": "async deleteStickerPack(id: number): Promise<ApiResponse<{ message: string }>> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/sticker-api.service.ts",
          "line": 337,
          "column": 23,
          "pattern": "id: number",
          "context": "async previewSticker(id: number): Promise<ApiResponse<StickerPreview>> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/media-api.service.ts",
          "line": 6,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/media-api.service.ts",
          "line": 42,
          "column": 20,
          "pattern": "id: number",
          "context": "async deleteMedia(id: number): Promise<void> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/cloutAchievementsService.ts",
          "line": 24,
          "column": 35,
          "pattern": "id: number",
          "context": "mutationFn: ({ id, payload }: { id: number; payload: any }) =>",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/cloutAchievementsService.ts",
          "line": 33,
          "column": 16,
          "pattern": "id: number",
          "context": "mutationFn: (id: number) => adminApi.post(`/clout/achievements/${id}/toggle`, {}),",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/services/cloutAchievementsService.ts",
          "line": 41,
          "column": 16,
          "pattern": "id: number",
          "context": "mutationFn: (id: number) => adminApi.delete(`/clout/achievements/${id}`),",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/users/services/usersApi.ts",
          "line": 32,
          "column": 38,
          "pattern": "userId: number",
          "context": "export async function getUserDetails(userId: number | string) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/features/users/services/referralsApi.ts",
          "line": 9,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/features/users/services/referralsApi.ts",
          "line": 19,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/components/platform-energy/recent-posts/recent-posts-feed.tsx",
          "line": 64,
          "column": 24,
          "pattern": "postId: number",
          "context": "const toggleExpand = (postId: number) => {",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/components/platform-energy/leaderboards/weekly-leaderboard.tsx",
          "line": 13,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/economy/shoutbox/enhanced-shoutbox-widget.tsx",
          "line": 40,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/economy/shoutbox/enhanced-shoutbox-widget.tsx",
          "line": 50,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/economy/shoutbox/enhanced-shoutbox-widget.tsx",
          "line": 62,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/economy/shoutbox/enhanced-shoutbox-widget.tsx",
          "line": 266,
          "column": 44,
          "pattern": "userId: number",
          "context": "mutationFn: async ({ userId, ignore }: { userId: number; ignore: boolean }) => {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/components/economy/badges/UserBadgesDisplay.tsx",
          "line": 9,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/forum/bbcode/QuickReplyBox.tsx",
          "line": 10,
          "column": 2,
          "pattern": "threadId: number",
          "context": "threadId: number;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "client/src/components/forum/bbcode/PostHeader.tsx",
          "line": 10,
          "column": 2,
          "pattern": "postId: number",
          "context": "postId: number;",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/components/forum/bbcode/PostActions.tsx",
          "line": 30,
          "column": 2,
          "pattern": "postId: number",
          "context": "postId: number;",
          "severity": "critical",
          "suggestedType": "PostId"
        },
        {
          "file": "client/src/components/admin/inputs/UnlockMultiSelect.tsx",
          "line": 11,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/inputs/UnlockMultiSelect.tsx",
          "line": 44,
          "column": 18,
          "pattern": "id: number",
          "context": "const toggle = (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/inputs/AdminAccessSelector.tsx",
          "line": 11,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/inputs/AdminAccessSelector.tsx",
          "line": 44,
          "column": 22,
          "pattern": "id: number",
          "context": "const toggleRole = (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/clout/AchievementsSection.tsx",
          "line": 164,
          "column": 48,
          "pattern": "id: number",
          "context": "mutationFn: async (data: AchievementForm & { id: number }) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/clout/AchievementsSection.tsx",
          "line": 192,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/clout/AchievementsSection.tsx",
          "line": 218,
          "column": 22,
          "pattern": "id: number",
          "context": "mutationFn: async (id: number) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/features/admin/components/dashboard/TippingAnalyticsCard.tsx",
          "line": 65,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/features/admin/components/dashboard/TippingAnalyticsCard.tsx",
          "line": 72,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/features/admin/components/dashboard/RainAnalyticsCard.tsx",
          "line": 61,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "client/src/components/admin/forms/xp/LevelFormDialogs.tsx",
          "line": 49,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/forms/xp/BadgeFormDialogs.tsx",
          "line": 37,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "client/src/components/admin/forms/reports/ViewReportDialog.tsx",
          "line": 34,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        }
      ],
      "priority": 6
    },
    "server-types": {
      "files": [],
      "issues": [],
      "priority": 7
    },
    "server-services": {
      "files": [],
      "issues": [],
      "priority": 8
    },
    "server-routes": {
      "files": [
        "server/src/routes/dev.routes.ts",
        "server/src/routes/api/ui.routes.ts",
        "server/src/routes/api/index.ts",
        "server/src/routes/api/store/avatar-frames.ts",
        "server/src/routes/api/user/frames.ts"
      ],
      "issues": [],
      "priority": 9
    },
    "server-repositories": {
      "files": [],
      "issues": [],
      "priority": 10
    },
    "server-middleware": {
      "files": [
        "server/src/middleware/validate.ts",
        "server/src/middleware/validate-request.ts",
        "server/src/middleware/trace.middleware.ts",
        "server/src/middleware/subscription-permissions.ts",
        "server/src/middleware/mission-progress.ts",
        "server/src/middleware/dev-security.middleware.ts",
        "server/src/middleware/authenticate.ts",
        "server/src/middleware/auth.ts"
      ],
      "issues": [
        {
          "file": "server/src/middleware/mission-progress.ts",
          "line": 55,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/middleware/authenticate.ts",
          "line": 12,
          "column": 4,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        }
      ],
      "priority": 11
    },
    "server-other": {
      "files": [
        "server/src/app.ts",
        "server/src/routes/dev.routes.ts",
        "server/src/middleware/validate.ts",
        "server/src/middleware/validate-request.ts",
        "server/src/middleware/trace.middleware.ts",
        "server/src/middleware/subscription-permissions.ts",
        "server/src/middleware/mission-progress.ts",
        "server/src/middleware/dev-security.middleware.ts",
        "server/src/middleware/authenticate.ts",
        "server/src/middleware/auth.ts",
        "server/src/lib/db.ts",
        "server/src/cron/subscription-management.ts",
        "server/src/cron/mission-reset.ts",
        "server/src/core/wallet-validators.ts",
        "server/src/core/storage.service.ts",
        "server/src/core/rate-limiter.ts",
        "server/src/core/middleware.ts",
        "server/src/core/logger.ts",
        "server/src/core/errors.ts",
        "server/src/core/db.ts",
        "server/src/core/database.ts",
        "server/src/core/config.service.ts",
        "server/src/core/cache.service.ts",
        "server/src/core/base-controller.ts",
        "server/src/core/background-processor.ts",
        "server/src/config/forum.config.ts",
        "server/src/routes/api/ui.routes.ts",
        "server/src/routes/api/index.ts",
        "server/src/utils/environment.ts",
        "server/src/utils/economy-loader.ts",
        "server/src/utils/db-utils.ts",
        "server/src/utils/auth.ts",
        "server/src/domains/wallet/withdrawal.controller.ts",
        "server/src/domains/wallet/webhook.service.ts",
        "server/src/domains/wallet/wallet.validators.ts",
        "server/src/domains/wallet/wallet.test.routes.ts",
        "server/src/domains/wallet/wallet.test.controller.ts",
        "server/src/domains/wallet/wallet.service.ts",
        "server/src/domains/wallet/wallet.routes.ts",
        "server/src/domains/wallet/wallet.dev.controller.ts",
        "server/src/domains/wallet/wallet.controller.ts",
        "server/src/domains/wallet/wallet.constants.ts",
        "server/src/domains/wallet/wallet-config.service.ts",
        "server/src/domains/wallet/wallet-api-tests.ts",
        "server/src/domains/wallet/user-management.service.ts",
        "server/src/domains/wallet/treasury.controller.ts",
        "server/src/domains/wallet/dgt.service.ts",
        "server/src/domains/wallet/ccpayment.service.ts",
        "server/src/domains/user/user-preferences.service.ts",
        "server/src/domains/user/user-preferences.routes.ts",
        "server/src/domains/uploads/upload.service.ts",
        "server/src/domains/uploads/upload.routes.ts",
        "server/src/domains/uploads/upload.controller.ts",
        "server/src/domains/xp/xp.service.ts",
        "server/src/domains/xp/xp.routes.ts",
        "server/src/domains/xp/xp.events.ts",
        "server/src/domains/xp/xp.controller.ts",
        "server/src/domains/xp/xp.admin.routes.ts",
        "server/src/domains/xp/xp-actions.ts",
        "server/src/domains/xp/xp-actions.controller.ts",
        "server/src/domains/xp/xp-actions-schema.ts",
        "server/src/domains/treasury/treasury.routes.ts",
        "server/src/domains/subscriptions/subscription.validators.ts",
        "server/src/domains/subscriptions/subscription.service.ts",
        "server/src/domains/subscriptions/subscription.routes.ts",
        "server/src/domains/subscriptions/subscription.controller.ts",
        "server/src/domains/subscriptions/subscription-permissions.service.ts",
        "server/src/domains/social/whale-watch.service.ts",
        "server/src/domains/social/whale-watch.routes.ts",
        "server/src/domains/social/social.routes.ts",
        "server/src/domains/social/relationships.routes.ts",
        "server/src/domains/social/mentions.types.ts",
        "server/src/domains/social/mentions.service.ts",
        "server/src/domains/social/mentions.routes.ts",
        "server/src/domains/social/friends.service.ts",
        "server/src/domains/social/friends.routes.ts",
        "server/src/domains/social/follows.types.ts",
        "server/src/domains/social/follows.service.ts",
        "server/src/domains/social/follows.routes.ts",
        "server/src/domains/shoutbox/shoutbox.routes.ts",
        "server/src/domains/shoutbox/enhanced-shoutbox.routes.ts",
        "server/src/domains/shop/shop.routes.ts",
        "server/src/domains/preferences/preferences.validators.ts",
        "server/src/domains/preferences/preferences.service.ts",
        "server/src/domains/preferences/preferences.routes.ts",
        "server/src/domains/profile/social-actions.service.ts",
        "server/src/domains/profile/social-actions.routes.ts",
        "server/src/domains/profile/social-actions.controller.ts",
        "server/src/domains/profile/signature.service.ts",
        "server/src/domains/profile/signature.routes.ts",
        "server/src/domains/profile/referrals.service.ts",
        "server/src/domains/profile/profile.service.ts",
        "server/src/domains/profile/profile.routes.ts",
        "server/src/domains/profile/profile-stats.service.ts",
        "server/src/domains/profile/profile-stats.routes.ts",
        "server/src/domains/profile/profile-stats.controller.ts",
        "server/src/domains/paths/paths.routes.ts",
        "server/src/domains/notifications/notification.service.ts",
        "server/src/domains/notifications/notification.routes.ts",
        "server/src/domains/notifications/notification-generator.service.ts",
        "server/src/domains/notifications/event-notification-listener.ts",
        "server/src/domains/missions/missions.service.ts",
        "server/src/domains/missions/missions.routes.ts",
        "server/src/domains/missions/missions.controller.ts",
        "server/src/domains/missions/missions.admin.routes.ts",
        "server/src/domains/missions/missions.admin.controller.ts",
        "server/src/domains/messaging/message.routes.ts",
        "server/src/domains/gamification/mission.routes.ts",
        "server/src/domains/gamification/mission.controller.ts",
        "server/src/domains/gamification/leveling.service.ts",
        "server/src/domains/gamification/leveling.routes.ts",
        "server/src/domains/gamification/leveling.controller.ts",
        "server/src/domains/gamification/index.ts",
        "server/src/domains/gamification/gamification.routes.ts",
        "server/src/domains/gamification/analytics.service.ts",
        "server/src/domains/gamification/analytics.routes.ts",
        "server/src/domains/gamification/analytics.controller.ts",
        "server/src/domains/gamification/admin.routes.ts",
        "server/src/domains/gamification/admin.controller.ts",
        "server/src/domains/gamification/achievement.service.ts",
        "server/src/domains/gamification/achievement.routes.ts",
        "server/src/domains/gamification/achievement.controller.ts",
        "server/src/domains/forum/forum.service.ts",
        "server/src/domains/forum/forum.service.test.ts",
        "server/src/domains/forum/forum.routes.ts",
        "server/src/domains/forum/forum.controller.ts",
        "server/src/domains/feature-gates/feature-gates.service.ts",
        "server/src/domains/feature-gates/feature-gates.routes.ts",
        "server/src/domains/feature-gates/feature-gates.controller.ts",
        "server/src/domains/editor/editor.routes.ts",
        "server/src/domains/engagement/engagement.service.ts",
        "server/src/domains/dictionary/dictionary.service.ts",
        "server/src/domains/dictionary/dictionary.routes.ts",
        "server/src/domains/cosmetics/frameEquip.service.ts",
        "server/src/domains/cosmetics/avatarFrameStore.service.ts",
        "server/src/domains/ccpayment-webhook/ccpayment-webhook.service.ts",
        "server/src/domains/ccpayment-webhook/ccpayment-webhook.routes.ts",
        "server/src/domains/ccpayment-webhook/ccpayment-webhook.controller.ts",
        "server/src/domains/auth/index.ts",
        "server/src/domains/auth/auth.routes.ts",
        "server/src/domains/advertising/user-promotion.service.ts",
        "server/src/domains/advertising/user-promotion.routes.ts",
        "server/src/domains/advertising/campaign-management.service.ts",
        "server/src/domains/advertising/ad.routes.ts",
        "server/src/domains/advertising/ad.controller.ts",
        "server/src/domains/advertising/ad-serving.service.ts",
        "server/src/domains/advertising/ad-configuration.service.ts",
        "server/src/domains/advertising/ad-admin.controller.ts",
        "server/src/domains/admin/admin.validation.ts",
        "server/src/domains/admin/admin.service.ts",
        "server/src/domains/admin/admin.routes.ts",
        "server/src/domains/admin/admin.response.ts",
        "server/src/domains/admin/admin.middleware.ts",
        "server/src/domains/admin/admin.errors.ts",
        "server/src/domains/admin/admin.controller.ts",
        "server/src/core/utils/error-response.util.ts",
        "server/src/core/services/user.service.ts",
        "server/src/core/services/rate-limit.service.ts",
        "server/src/core/repository/repository-factory.ts",
        "server/src/core/repository/interfaces.ts",
        "server/src/core/repository/index.ts",
        "server/src/core/repository/base-repository.ts",
        "server/src/core/monitoring/query-performance.ts",
        "server/src/core/monitoring/health-check.ts",
        "server/src/core/middleware/security.middleware.ts",
        "server/src/core/events/achievement-events.service.ts",
        "server/src/core/config/environment.ts",
        "server/src/core/audit/audit-logger.ts",
        "server/src/routes/api/user/frames.ts",
        "server/src/routes/api/store/avatar-frames.ts",
        "server/src/domains/wallet/middleware/webhook.middleware.ts",
        "server/src/domains/wallet/middleware/types.ts",
        "server/src/domains/wallet/middleware/security.middleware.ts",
        "server/src/domains/wallet/middleware/index.ts",
        "server/src/domains/wallet/services/ccpayment-deposit.service.ts",
        "server/src/domains/wallet/services/ccpayment-balance.service.ts",
        "server/src/domains/wallet/services/ccpayment-api.service.ts",
        "server/src/domains/xp/events/xp.events.ts",
        "server/src/domains/shoutbox/services/shoutbox.service.ts",
        "server/src/domains/shoutbox/services/room.service.ts",
        "server/src/domains/shoutbox/services/queue.service.ts",
        "server/src/domains/shoutbox/services/performance.service.ts",
        "server/src/domains/shoutbox/services/history.service.ts",
        "server/src/domains/shoutbox/services/cache.service.ts",
        "server/src/domains/share/services/xShareService.ts",
        "server/src/domains/share/routes/xShareRoutes.ts",
        "server/src/domains/gamification/achievements/index.ts",
        "server/src/domains/gamification/achievements/achievement.routes.ts",
        "server/src/domains/gamification/achievements/achievement.controller.ts",
        "server/src/domains/gamification/achievements/achievement-processor.service.ts",
        "server/src/domains/gamification/achievements/achievement-admin.service.ts",
        "server/src/domains/forum/services/thread.service.ts",
        "server/src/domains/forum/services/thread.service.batch-optimization.ts",
        "server/src/domains/forum/services/structure.service.ts",
        "server/src/domains/forum/services/post.service.ts",
        "server/src/domains/forum/services/permissions.service.ts",
        "server/src/domains/forum/services/config.service.ts",
        "server/src/domains/forum/services/category.service.ts",
        "server/src/domains/forum/services/cache.service.ts",
        "server/src/domains/forum/rules/rules.routes.ts",
        "server/src/domains/forum/routes/thread.routes.ts",
        "server/src/domains/forum/routes/post.routes.ts",
        "server/src/domains/forum/routes/content.routes.ts",
        "server/src/domains/forum/routes/category.routes.ts",
        "server/src/domains/forum/routes/bookmark.routes.ts",
        "server/src/domains/engagement/vault/vault.service.ts",
        "server/src/domains/engagement/vault/vault.routes.ts",
        "server/src/domains/engagement/vault/vault.controller.ts",
        "server/src/domains/engagement/tip/tip.service.ts",
        "server/src/domains/engagement/tip/tip.routes.ts",
        "server/src/domains/engagement/tip/tip.controller.ts",
        "server/src/domains/engagement/rain/rain.service.ts",
        "server/src/domains/engagement/rain/rain.routes.ts",
        "server/src/domains/engagement/rain/rain.controller.ts",
        "server/src/domains/engagement/airdrop/airdrop.service.ts",
        "server/src/domains/engagement/airdrop/airdrop.routes.ts",
        "server/src/domains/engagement/airdrop/airdrop.controller.ts",
        "server/src/domains/economy/services/rewardService.ts",
        "server/src/domains/economy/services/cloutService.ts",
        "server/src/domains/collectibles/stickers/stickers.validators.ts",
        "server/src/domains/collectibles/stickers/stickers.service.ts",
        "server/src/domains/collectibles/stickers/stickers.routes.ts",
        "server/src/domains/collectibles/stickers/stickers.controller.ts",
        "server/src/domains/auth/services/xAuthService.ts",
        "server/src/domains/auth/services/auth.service.ts",
        "server/src/domains/auth/controllers/auth.controller.ts",
        "server/src/domains/auth/middleware/auth.middleware.ts",
        "server/src/domains/auth/routes/xAuthRoutes.ts",
        "server/src/domains/admin/shared/index.ts",
        "server/src/domains/admin/shared/admin-query-utils.ts",
        "server/src/domains/admin/shared/admin-operation-utils.ts",
        "server/src/domains/admin/shared/admin-error-boundaries.ts",
        "server/src/domains/admin/shared/admin-cache.service.ts",
        "server/src/domains/admin/sub-domains/index.ts",
        "server/src/domains/activity/services/event-logger.service.ts",
        "server/src/domains/activity/services/event-log.service.ts",
        "server/src/domains/activity/routes/index.ts",
        "server/src/domains/activity/routes/event-log.routes.ts",
        "server/src/domains/activity/controllers/event-log.controller.ts",
        "server/src/core/repository/__tests__/user-repository.test.ts",
        "server/src/core/routes/api/status.ts",
        "server/src/core/routes/api/index.ts",
        "server/src/core/repository/repositories/user-repository.ts",
        "server/src/core/repository/repositories/transaction-repository.ts",
        "server/src/domains/gamification/achievements/templates/achievement-templates.ts",
        "server/src/domains/gamification/achievements/evaluators/degen-evaluators.ts",
        "server/src/domains/forum/sub-domains/reports/reports.validators.ts",
        "server/src/domains/forum/sub-domains/reports/reports.service.ts",
        "server/src/domains/forum/sub-domains/reports/reports.routes.ts",
        "server/src/domains/forum/sub-domains/reports/reports.controller.ts",
        "server/src/domains/admin/sub-domains/xp/xp.validators.ts",
        "server/src/domains/admin/sub-domains/xp/xp.service.ts",
        "server/src/domains/admin/sub-domains/xp/xp.routes.ts",
        "server/src/domains/admin/sub-domains/xp/xp.controller.ts",
        "server/src/domains/admin/sub-domains/xp/xp.clout.service.ts",
        "server/src/domains/admin/sub-domains/xp/xp-actions.controller.ts",
        "server/src/domains/admin/sub-domains/wallet/wallet.validators.ts",
        "server/src/domains/admin/sub-domains/wallet/wallet.routes.ts",
        "server/src/domains/admin/sub-domains/wallet/wallet.controller.ts",
        "server/src/domains/admin/sub-domains/users/users.service.ts",
        "server/src/domains/admin/sub-domains/users/users.routes.ts",
        "server/src/domains/admin/sub-domains/users/users.controller.ts",
        "server/src/domains/admin/sub-domains/users/inventory.admin.routes.ts",
        "server/src/domains/admin/sub-domains/users/inventory.admin.controller.ts",
        "server/src/domains/admin/sub-domains/users/bulk-operations.service.ts",
        "server/src/domains/admin/sub-domains/users/bulk-operations.controller.ts",
        "server/src/domains/admin/sub-domains/user-groups/user-groups.validators.ts",
        "server/src/domains/admin/sub-domains/user-groups/user-groups.service.ts",
        "server/src/domains/admin/sub-domains/user-groups/user-groups.routes.ts",
        "server/src/domains/admin/sub-domains/user-groups/user-groups.controller.ts",
        "server/src/domains/admin/sub-domains/ui-config/uiThemes.service.ts",
        "server/src/domains/admin/sub-domains/ui-config/ui-config.validators.ts",
        "server/src/domains/admin/sub-domains/ui-config/ui-config.types.ts",
        "server/src/domains/admin/sub-domains/ui-config/ui-config.service.ts",
        "server/src/domains/admin/sub-domains/ui-config/ui-config.routes.ts",
        "server/src/domains/admin/sub-domains/ui-config/ui-config.controller.ts",
        "server/src/domains/admin/sub-domains/treasury/treasury.validators.ts",
        "server/src/domains/admin/sub-domains/treasury/treasury.service.ts",
        "server/src/domains/admin/sub-domains/treasury/treasury.routes.ts",
        "server/src/domains/admin/sub-domains/treasury/treasury.controller.ts",
        "server/src/domains/admin/sub-domains/titles/titles.validators.ts",
        "server/src/domains/admin/sub-domains/titles/titles.service.ts",
        "server/src/domains/admin/sub-domains/titles/titles.routes.ts",
        "server/src/domains/admin/sub-domains/titles/titles.controller.ts",
        "server/src/domains/admin/sub-domains/subscriptions/subscription.admin.routes.ts",
        "server/src/domains/admin/sub-domains/subscriptions/subscription.admin.controller.ts",
        "server/src/domains/admin/sub-domains/social/social.service.ts",
        "server/src/domains/admin/sub-domains/social/social.routes.ts",
        "server/src/domains/admin/sub-domains/social/social.controller.ts",
        "server/src/domains/admin/sub-domains/shop/shopCategory.service.ts",
        "server/src/domains/admin/sub-domains/shop/shopCategory.routes.ts",
        "server/src/domains/admin/sub-domains/shop/shop.admin.routes.ts",
        "server/src/domains/admin/sub-domains/shop/shop.admin.controller.ts",
        "server/src/domains/admin/sub-domains/shop/rarity.service.ts",
        "server/src/domains/admin/sub-domains/shop/rarity.routes.ts",
        "server/src/domains/admin/sub-domains/settings/settings.validators.ts",
        "server/src/domains/admin/sub-domains/settings/settings.service.refactored.ts",
        "server/src/domains/admin/sub-domains/settings/settings.routes.ts",
        "server/src/domains/admin/sub-domains/settings/settings.controller.ts",
        "server/src/domains/admin/sub-domains/roles/roles.validators.ts",
        "server/src/domains/admin/sub-domains/roles/roles.service.ts",
        "server/src/domains/admin/sub-domains/roles/roles.routes.ts",
        "server/src/domains/admin/sub-domains/roles/roles.controller.ts",
        "server/src/domains/admin/sub-domains/permissions/permissions.service.ts",
        "server/src/domains/admin/sub-domains/permissions/permissions.routes.ts",
        "server/src/domains/admin/sub-domains/permissions/permissions.controller.ts",
        "server/src/domains/admin/sub-domains/referrals/referrals.validators.ts",
        "server/src/domains/admin/sub-domains/referrals/referrals.service.ts",
        "server/src/domains/admin/sub-domains/referrals/referrals.routes.ts",
        "server/src/domains/admin/sub-domains/referrals/referrals.controller.ts",
        "server/src/domains/admin/sub-domains/moderator-notes/moderator-notes.routes.ts",
        "server/src/domains/admin/sub-domains/forumPrefix/forumPrefix.service.ts",
        "server/src/domains/admin/sub-domains/forum/forum.validators.ts",
        "server/src/domains/admin/sub-domains/forum/forum.service.ts",
        "server/src/domains/admin/sub-domains/forum/forum.routes.ts",
        "server/src/domains/admin/sub-domains/forum/forum.controller.ts",
        "server/src/domains/admin/sub-domains/emojis/emojis.validators.ts",
        "server/src/domains/admin/sub-domains/emojis/emojis.service.ts",
        "server/src/domains/admin/sub-domains/emojis/emojis.routes.ts",
        "server/src/domains/admin/sub-domains/emojis/emojis.controller.ts",
        "server/src/domains/admin/sub-domains/economy/economy.routes.ts",
        "server/src/domains/admin/sub-domains/economy/economy.controller.ts",
        "server/src/domains/admin/sub-domains/email-templates/email-templates.service.ts",
        "server/src/domains/admin/sub-domains/email-templates/email-templates.routes.ts",
        "server/src/domains/admin/sub-domains/email-templates/email-templates.controller.ts",
        "server/src/domains/admin/sub-domains/dgt-packages/dgt-packages.service.ts",
        "server/src/domains/admin/sub-domains/dgt-packages/dgt-packages.routes.ts",
        "server/src/domains/admin/sub-domains/dgt-packages/dgt-packages.controller.ts",
        "server/src/domains/admin/sub-domains/clout/clout.routes.ts",
        "server/src/domains/admin/sub-domains/clout/clout.controller.ts",
        "server/src/domains/admin/sub-domains/database/query.service.ts",
        "server/src/domains/admin/sub-domains/database/query.controller.ts",
        "server/src/domains/admin/sub-domains/database/database.service.ts",
        "server/src/domains/admin/sub-domains/database/database.routes.ts",
        "server/src/domains/admin/sub-domains/database/database.controller.ts",
        "server/src/domains/admin/sub-domains/database/bulk-operations.controller.ts",
        "server/src/domains/admin/sub-domains/dev/seeding.routes.ts",
        "server/src/domains/admin/sub-domains/cache/cache.routes.ts",
        "server/src/domains/admin/sub-domains/cache/cache.controller.ts",
        "server/src/domains/admin/sub-domains/brand-config/brand.service.ts",
        "server/src/domains/admin/sub-domains/brand-config/brand.routes.ts",
        "server/src/domains/admin/sub-domains/brand-config/brand.controller.ts",
        "server/src/domains/admin/sub-domains/backup-restore/schedule.service.ts",
        "server/src/domains/admin/sub-domains/backup-restore/restore.service.ts",
        "server/src/domains/admin/sub-domains/backup-restore/backup.service.ts",
        "server/src/domains/admin/sub-domains/backup-restore/backup-restore.routes.ts",
        "server/src/domains/admin/sub-domains/backup-restore/backup-restore.controller.ts",
        "server/src/domains/admin/sub-domains/avatar-frames/avatar-frames.service.ts",
        "server/src/domains/admin/sub-domains/avatar-frames/avatar-frames.routes.ts",
        "server/src/domains/admin/sub-domains/avatar-frames/avatar-frames.controller.ts",
        "server/src/domains/admin/sub-domains/reports/reports.validators.ts",
        "server/src/domains/admin/sub-domains/reports/reports.service.ts",
        "server/src/domains/admin/sub-domains/reports/reports.routes.ts",
        "server/src/domains/admin/sub-domains/reports/reports.controller.ts",
        "server/src/domains/admin/sub-domains/announcements/index.ts",
        "server/src/domains/admin/sub-domains/announcements/announcements.routes.ts",
        "server/src/domains/admin/sub-domains/analytics/system-analytics.validators.ts",
        "server/src/domains/admin/sub-domains/analytics/system-analytics.service.ts",
        "server/src/domains/admin/sub-domains/analytics/system-analytics.controller.ts",
        "server/src/domains/admin/sub-domains/analytics/analytics.validators.ts",
        "server/src/domains/admin/sub-domains/analytics/analytics.service.ts",
        "server/src/domains/admin/sub-domains/analytics/analytics.routes.ts",
        "server/src/domains/admin/sub-domains/analytics/analytics.controller.ts",
        "server/src/domains/admin/sub-domains/airdrop/airdrop.service.ts",
        "server/src/domains/admin/sub-domains/airdrop/airdrop.routes.ts",
        "server/src/domains/admin/sub-domains/airdrop/airdrop.controller.ts",
        "server/src/domains/admin/sub-domains/animation-packs/animation-packs.service.ts",
        "server/src/domains/admin/sub-domains/animation-packs/animation-packs.routes.ts",
        "server/src/domains/admin/sub-domains/animation-packs/animation-packs.controller.ts",
        "server/src/domains/admin/sub-domains/settings/services/settings-validation.service.ts",
        "server/src/domains/admin/sub-domains/settings/services/settings-query.service.ts",
        "server/src/domains/admin/sub-domains/settings/services/settings-group.service.ts",
        "server/src/domains/admin/sub-domains/settings/services/settings-command.service.ts",
        "server/src/domains/admin/sub-domains/settings/services/index.ts",
        "server/src/domains/admin/sub-domains/announcements/services/announcements.service.ts",
        "server/src/domains/admin/sub-domains/announcements/controllers/announcements.controller.ts",
        "server/src/domains/admin/sub-domains/analytics/routes/stats.routes.ts",
        "server/src/domains/admin/sub-domains/analytics/services/platformStats.service.ts",
        "server/src/domains/admin/sub-domains/analytics/engagement/tipping-analytics.service.ts",
        "server/src/domains/admin/sub-domains/analytics/engagement/tipping-analytics.routes.ts",
        "server/src/domains/admin/sub-domains/analytics/engagement/tipping-analytics.controller.ts",
        "server/src/domains/admin/sub-domains/analytics/engagement/rain-analytics.service.ts",
        "server/src/domains/admin/sub-domains/analytics/engagement/rain-analytics.routes.ts",
        "server/src/domains/admin/sub-domains/analytics/engagement/rain-analytics.controller.ts"
      ],
      "issues": [
        {
          "file": "server/src/middleware/mission-progress.ts",
          "line": 55,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/middleware/authenticate.ts",
          "line": 12,
          "column": 4,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/xp/xp.service.ts",
          "line": 431,
          "column": 39,
          "pattern": "userId: number",
          "context": "// private async updateActionLimits(userId: number, action: XP_ACTION): Promise<void> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/subscriptions/subscription.service.ts",
          "line": 29,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/social/mentions.types.ts",
          "line": 4,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/social/mentions.types.ts",
          "line": 20,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/social/follows.types.ts",
          "line": 36,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/social/follows.types.ts",
          "line": 46,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/shoutbox/shoutbox.routes.ts",
          "line": 36,
          "column": 34,
          "pattern": "userId: number",
          "context": "async function userHasRoomAccess(userId: number, roomId: RoomId): Promise<boolean> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/shoutbox.routes.ts",
          "line": 203,
          "column": 21,
          "pattern": "parseInt(req.params.id)",
          "context": "const messageId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/shoutbox/shoutbox.routes.ts",
          "line": 266,
          "column": 27,
          "pattern": "parseInt(req.params.id)",
          "context": "const messageIdForLog = parseInt(req.params.id); // Ensure messageId is available for logging",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/shoutbox/shoutbox.routes.ts",
          "line": 559,
          "column": 21,
          "pattern": "parseInt(req.params.id)",
          "context": "const messageId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/shoutbox/shoutbox.routes.ts",
          "line": 635,
          "column": 27,
          "pattern": "parseInt(req.params.id)",
          "context": "const messageIdForLog = parseInt(req.params.id); // Ensure messageId is available",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/shop/shop.routes.ts",
          "line": 133,
          "column": 60,
          "pattern": "id: number",
          "context": "const userId = (userService.getUserFromRequest(req) as { id: number }).id;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/shop/shop.routes.ts",
          "line": 253,
          "column": 60,
          "pattern": "id: number",
          "context": "const userId = (userService.getUserFromRequest(req) as { id: number }).id;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/preferences/preferences.service.ts",
          "line": 28,
          "column": 41,
          "pattern": "userId: number",
          "context": "export const getAllPreferences = async (userId: number) => {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/preferences/preferences.service.ts",
          "line": 84,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/preferences/preferences.service.ts",
          "line": 141,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/preferences/preferences.service.ts",
          "line": 215,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/preferences/preferences.service.ts",
          "line": 281,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/preferences/preferences.service.ts",
          "line": 344,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/preferences/preferences.service.ts",
          "line": 390,
          "column": 48,
          "pattern": "userId: number",
          "context": "export const createDefaultPreferences = async (userId: number) => {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/profile/signature.service.ts",
          "line": 14,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/profile/signature.service.ts",
          "line": 22,
          "column": 32,
          "pattern": "userId: number",
          "context": "static async getUserSignature(userId: number) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/profile/signature.service.ts",
          "line": 118,
          "column": 37,
          "pattern": "userId: number",
          "context": "static async getUserSignatureItems(userId: number) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/profile/signature.service.ts",
          "line": 130,
          "column": 37,
          "pattern": "userId: number",
          "context": "static async purchaseSignatureItem(userId: number, itemId: ItemId) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/profile/signature.service.ts",
          "line": 198,
          "column": 37,
          "pattern": "userId: number",
          "context": "static async activateSignatureItem(userId: number, itemId: ItemId) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/profile/referrals.service.ts",
          "line": 15,
          "column": 40,
          "pattern": "userId: number",
          "context": "export async function getUserReferrals(userId: number) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/profile/referrals.service.ts",
          "line": 42,
          "column": 43,
          "pattern": "userId: number",
          "context": "export async function getUserReferralLink(userId: number) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/profile/profile.service.ts",
          "line": 18,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number; // User ID is a number in the database",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/profile/profile.service.ts",
          "line": 27,
          "column": 38,
          "pattern": "userId: number",
          "context": "export async function getUserProfile(userId: number) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/missions/missions.service.ts",
          "line": 73,
          "column": 19,
          "pattern": "id: number",
          "context": "async getMission(id: number): Promise<Mission | null> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/missions/missions.service.ts",
          "line": 124,
          "column": 22,
          "pattern": "id: number",
          "context": "async updateMission(id: number, data: Partial<Mission>): Promise<Mission | null> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/missions/missions.service.ts",
          "line": 15,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/missions/missions.service.ts",
          "line": 142,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/missions/missions.service.ts",
          "line": 189,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/missions/missions.service.ts",
          "line": 426,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/gamification/mission.controller.ts",
          "line": 350,
          "column": 22,
          "pattern": "Number(req.params.id)",
          "context": "const missionId = Number(req.params.id);",
          "severity": "high",
          "suggestedType": "remove Number(), use branded type"
        },
        {
          "file": "server/src/domains/gamification/mission.controller.ts",
          "line": 419,
          "column": 22,
          "pattern": "Number(req.params.id)",
          "context": "const missionId = Number(req.params.id);",
          "severity": "high",
          "suggestedType": "remove Number(), use branded type"
        },
        {
          "file": "server/src/domains/gamification/achievement.service.ts",
          "line": 28,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/gamification/achievement.service.ts",
          "line": 639,
          "column": 4,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/gamification/achievement.controller.ts",
          "line": 449,
          "column": 26,
          "pattern": "Number(req.params.id)",
          "context": "const achievementId = Number(req.params.id);",
          "severity": "high",
          "suggestedType": "remove Number(), use branded type"
        },
        {
          "file": "server/src/domains/feature-gates/feature-gates.service.ts",
          "line": 125,
          "column": 27,
          "pattern": "userId: number",
          "context": "async checkFeatureAccess(userId: number, featureId: string): Promise<UserFeatureAccess> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/feature-gates/feature-gates.service.ts",
          "line": 195,
          "column": 30,
          "pattern": "userId: number",
          "context": "async checkAllFeatureAccess(userId: number): Promise<UserFeatureAccess[]> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/engagement/engagement.service.ts",
          "line": 43,
          "column": 4,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/engagement/engagement.service.ts",
          "line": 124,
          "column": 31,
          "pattern": "userId: number",
          "context": "async getUserEngagementStats(userId: number) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/dictionary/dictionary.routes.ts",
          "line": 75,
          "column": 4,
          "pattern": "Number(req.params.id)",
          "context": "Number(req.params.id),",
          "severity": "high",
          "suggestedType": "remove Number(), use branded type"
        },
        {
          "file": "server/src/domains/dictionary/dictionary.routes.ts",
          "line": 90,
          "column": 4,
          "pattern": "Number(req.params.id)",
          "context": "Number(req.params.id),",
          "severity": "high",
          "suggestedType": "remove Number(), use branded type"
        },
        {
          "file": "server/src/domains/cosmetics/avatarFrameStore.service.ts",
          "line": 7,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/auth/auth.routes.ts",
          "line": 119,
          "column": 34,
          "pattern": "id: number",
          "context": "passport.deserializeUser(async (id: number | string, done) => {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/services/user.service.ts",
          "line": 14,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/services/user.service.ts",
          "line": 70,
          "column": 20,
          "pattern": "userId: number",
          "context": "async getUserById(userId: number): Promise<UserProfile | null> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/services/user.service.ts",
          "line": 190,
          "column": 21,
          "pattern": "userId: number",
          "context": "async isActiveUser(userId: number): Promise<boolean> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/services/user.service.ts",
          "line": 208,
          "column": 25,
          "pattern": "userId: number",
          "context": "async updateLastActive(userId: number): Promise<void> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 14,
          "column": 11,
          "pattern": "id: number",
          "context": "findById(id: number | string): Promise<T | null>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 18,
          "column": 9,
          "pattern": "id: number",
          "context": "update(id: number | string, data: Partial<T>): Promise<T>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 19,
          "column": 9,
          "pattern": "id: number",
          "context": "delete(id: number | string): Promise<void>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 20,
          "column": 9,
          "pattern": "id: number",
          "context": "exists(id: number | string): Promise<boolean>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 29,
          "column": 18,
          "pattern": "id: number",
          "context": "updateLastLogin(id: number): Promise<void>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 30,
          "column": 14,
          "pattern": "id: number",
          "context": "incrementXP(id: number, amount: number): Promise<User>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 52,
          "column": 21,
          "pattern": "id: number",
          "context": "incrementViewCount(id: number): Promise<void>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 53,
          "column": 18,
          "pattern": "id: number",
          "context": "updatePostCount(id: number): Promise<void>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 54,
          "column": 15,
          "pattern": "id: number",
          "context": "markAsSolved(id: number, solvingPostId?: number): Promise<Thread>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 62,
          "column": 21,
          "pattern": "id: number",
          "context": "incrementLikeCount(id: number): Promise<void>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 63,
          "column": 21,
          "pattern": "id: number",
          "context": "decrementLikeCount(id: number): Promise<void>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 64,
          "column": 17,
          "pattern": "id: number",
          "context": "updateTipCount(id: number, amount: number): Promise<void>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 69,
          "column": 15,
          "pattern": "userId: number",
          "context": "findByUserId(userId: number, options?: QueryOptions): Promise<PaginatedResult<Transaction>>;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 72,
          "column": 17,
          "pattern": "userId: number",
          "context": "getTotalByUser(userId: number, type?: string): Promise<number>;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 73,
          "column": 19,
          "pattern": "userId: number",
          "context": "getBalanceByUser(userId: number): Promise<number>;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 78,
          "column": 15,
          "pattern": "userId: number",
          "context": "findByUserId(userId: number): Promise<any>;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 79,
          "column": 10,
          "pattern": "userId: number",
          "context": "awardXP(userId: number, amount: number, reason: string): Promise<any>;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 81,
          "column": 14,
          "pattern": "userId: number",
          "context": "getUserRank(userId: number): Promise<number>;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/repository/interfaces.ts",
          "line": 59,
          "column": 17,
          "pattern": "threadId: number",
          "context": "findByThreadId(threadId: number, options?: QueryOptions): Promise<PaginatedResult<Post>>;",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "server/src/core/repository/base-repository.ts",
          "line": 69,
          "column": 17,
          "pattern": "id: number",
          "context": "async findById(id: number | string): Promise<T | null> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/base-repository.ts",
          "line": 201,
          "column": 15,
          "pattern": "id: number",
          "context": "async update(id: number | string, data: Partial<T>): Promise<T> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/base-repository.ts",
          "line": 233,
          "column": 15,
          "pattern": "id: number",
          "context": "async delete(id: number | string): Promise<void> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/base-repository.ts",
          "line": 251,
          "column": 15,
          "pattern": "id: number",
          "context": "async exists(id: number | string): Promise<boolean> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/audit/audit-logger.ts",
          "line": 157,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number | undefined,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/audit/audit-logger.ts",
          "line": 189,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/audit/audit-logger.ts",
          "line": 219,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/audit/audit-logger.ts",
          "line": 274,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/shoutbox.service.ts",
          "line": 30,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/room.service.ts",
          "line": 29,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/shoutbox/services/room.service.ts",
          "line": 491,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/room.service.ts",
          "line": 555,
          "column": 33,
          "pattern": "userId: number",
          "context": "static async getUserIgnoreList(userId: number, roomId?: RoomId): Promise<number[]> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/room.service.ts",
          "line": 582,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/room.service.ts",
          "line": 628,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/queue.service.ts",
          "line": 18,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/performance.service.ts",
          "line": 281,
          "column": 4,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/shoutbox/services/performance.service.ts",
          "line": 211,
          "column": 4,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/history.service.ts",
          "line": 47,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/shoutbox/services/history.service.ts",
          "line": 48,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number | null;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 23,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 53,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 24,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number | null;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 39,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 122,
          "column": 26,
          "pattern": "userId: number",
          "context": "static cacheUserSession(userId: number, session: UserSessionCache): void {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 130,
          "column": 30,
          "pattern": "userId: number",
          "context": "static getCachedUserSession(userId: number): UserSessionCache | null {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 135,
          "column": 28,
          "pattern": "userId: number",
          "context": "static updateUserLastSeen(userId: number): void {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 146,
          "column": 31,
          "pattern": "userId: number",
          "context": "static invalidateUserSession(userId: number): void {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 156,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 163,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 221,
          "column": 39,
          "pattern": "userId: number",
          "context": "static addUserToRoom(roomId: RoomId, userId: number): void {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 232,
          "column": 44,
          "pattern": "userId: number",
          "context": "static removeUserFromRoom(roomId: RoomId, userId: number): void {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 246,
          "column": 44,
          "pattern": "userId: number",
          "context": "static setTypingIndicator(roomId: RoomId, userId: number, username: string): void {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/shoutbox/services/cache.service.ts",
          "line": 259,
          "column": 47,
          "pattern": "userId: number",
          "context": "static removeTypingIndicator(roomId: RoomId, userId: number): void {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/share/services/xShareService.ts",
          "line": 11,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/engagement/vault/vault.service.ts",
          "line": 25,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/engagement/vault/vault.service.ts",
          "line": 274,
          "column": 26,
          "pattern": "userId: number",
          "context": "async getUserVaultLocks(userId: number): Promise<any[]> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/engagement/vault/vault.service.ts",
          "line": 298,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/engagement/vault/vault.controller.ts",
          "line": 97,
          "column": 23,
          "pattern": "parseInt(req.params.id)",
          "context": "const vaultLockId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/engagement/tip/tip.service.ts",
          "line": 78,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/engagement/tip/tip.service.ts",
          "line": 292,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/engagement/rain/rain.service.ts",
          "line": 63,
          "column": 23,
          "pattern": "id: number",
          "context": "recipients: Array<{ id: number; username: string }>;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/engagement/rain/rain.service.ts",
          "line": 372,
          "column": 31,
          "pattern": "userId: number",
          "context": "private async checkCooldowns(userId: number, commandType: 'tip' | 'rain'): Promise<void> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/engagement/rain/rain.service.ts",
          "line": 467,
          "column": 38,
          "pattern": "userId: number",
          "context": "private async updateLastCommandTime(userId: number, commandType: 'tip' | 'rain'): Promise<void> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/engagement/rain/rain.service.ts",
          "line": 520,
          "column": 27,
          "pattern": "userId: number",
          "context": "async updateRainSettings(userId: number, settings: any) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/engagement/airdrop/airdrop.service.ts",
          "line": 36,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/engagement/airdrop/airdrop.controller.ts",
          "line": 158,
          "column": 21,
          "pattern": "parseInt(req.params.id)",
          "context": "const airdropId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/economy/services/rewardService.ts",
          "line": 19,
          "column": 41,
          "pattern": "userId: number",
          "context": "export async function awardXShareReward(userId: number) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/economy/services/rewardService.ts",
          "line": 35,
          "column": 44,
          "pattern": "userId: number",
          "context": "export async function awardXReferralReward(userId: number) {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/collectibles/stickers/stickers.service.ts",
          "line": 163,
          "column": 19,
          "pattern": "id: number",
          "context": "async getSticker(id: number): Promise<Sticker & { packName?: string }> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/collectibles/stickers/stickers.service.ts",
          "line": 277,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number,",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/collectibles/stickers/stickers.service.ts",
          "line": 344,
          "column": 22,
          "pattern": "id: number",
          "context": "async deleteSticker(id: number, adminId: string): Promise<{ message: string }> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/collectibles/stickers/stickers.service.ts",
          "line": 490,
          "column": 23,
          "pattern": "id: number",
          "context": "async getStickerPack(id: number): Promise<StickerPack> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/collectibles/stickers/stickers.service.ts",
          "line": 535,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number,",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/collectibles/stickers/stickers.service.ts",
          "line": 566,
          "column": 26,
          "pattern": "id: number",
          "context": "async deleteStickerPack(id: number, adminId: string): Promise<{ message: string }> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/auth/services/auth.service.ts",
          "line": 99,
          "column": 66,
          "pattern": "userId: number",
          "context": "export async function verifyEmailToken(token: string): Promise<{ userId: number } | false> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/auth/services/auth.service.ts",
          "line": 121,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/repository/repositories/user-repository.ts",
          "line": 82,
          "column": 24,
          "pattern": "id: number",
          "context": "async updateLastLogin(id: number): Promise<void> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/repositories/user-repository.ts",
          "line": 105,
          "column": 20,
          "pattern": "id: number",
          "context": "async incrementXP(id: number, amount: number): Promise<User> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/repositories/user-repository.ts",
          "line": 244,
          "column": 15,
          "pattern": "id: number",
          "context": "async update(id: number | string, data: Partial<User>): Promise<User> {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/core/repository/repositories/transaction-repository.ts",
          "line": 32,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/repository/repositories/transaction-repository.ts",
          "line": 141,
          "column": 23,
          "pattern": "userId: number",
          "context": "async getTotalByUser(userId: number, type?: string): Promise<number> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/repository/repositories/transaction-repository.ts",
          "line": 179,
          "column": 25,
          "pattern": "userId: number",
          "context": "async getBalanceByUser(userId: number): Promise<number> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/core/repository/repositories/transaction-repository.ts",
          "line": 272,
          "column": 21,
          "pattern": "userId: number",
          "context": "async getUserStats(userId: number): Promise<{",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/admin/sub-domains/xp/xp.service.ts",
          "line": 224,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number,",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/admin/sub-domains/users/bulk-operations.service.ts",
          "line": 24,
          "column": 18,
          "pattern": "userId: number",
          "context": "errors: Array<{ userId: number; error: string }>;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/admin/sub-domains/user-groups/user-groups.controller.ts",
          "line": 31,
          "column": 20,
          "pattern": "parseInt(req.params.id)",
          "context": "const groupId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/user-groups/user-groups.controller.ts",
          "line": 69,
          "column": 20,
          "pattern": "parseInt(req.params.id)",
          "context": "const groupId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/user-groups/user-groups.controller.ts",
          "line": 95,
          "column": 20,
          "pattern": "parseInt(req.params.id)",
          "context": "const groupId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/user-groups/user-groups.controller.ts",
          "line": 115,
          "column": 20,
          "pattern": "parseInt(req.params.id)",
          "context": "const groupId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/treasury/treasury.service.ts",
          "line": 236,
          "column": 5,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/admin/sub-domains/titles/titles.service.ts",
          "line": 83,
          "column": 15,
          "pattern": "id: number",
          "context": "async update(id: number, data: UpdateTitleInput) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/titles/titles.service.ts",
          "line": 103,
          "column": 15,
          "pattern": "id: number",
          "context": "async delete(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/shop/shopCategory.service.ts",
          "line": 34,
          "column": 15,
          "pattern": "id: number",
          "context": "async update(id: number, data: Partial<CategoryInput>) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/shop/shopCategory.service.ts",
          "line": 49,
          "column": 15,
          "pattern": "id: number",
          "context": "async delete(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/shop/shopCategory.routes.ts",
          "line": 26,
          "column": 14,
          "pattern": "parseInt(req.params.id)",
          "context": "const id = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/shop/shopCategory.routes.ts",
          "line": 35,
          "column": 14,
          "pattern": "parseInt(req.params.id)",
          "context": "const id = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/shop/rarity.service.ts",
          "line": 29,
          "column": 15,
          "pattern": "id: number",
          "context": "async update(id: number, data: Partial<RarityInput>) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/shop/rarity.service.ts",
          "line": 40,
          "column": 15,
          "pattern": "id: number",
          "context": "async delete(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/shop/rarity.routes.ts",
          "line": 26,
          "column": 14,
          "pattern": "parseInt(req.params.id)",
          "context": "const id = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/shop/rarity.routes.ts",
          "line": 35,
          "column": 14,
          "pattern": "parseInt(req.params.id)",
          "context": "const id = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/referrals/referrals.service.ts",
          "line": 57,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/admin/sub-domains/moderator-notes/moderator-notes.routes.ts",
          "line": 105,
          "column": 18,
          "pattern": "parseInt(req.params.id)",
          "context": "const noteId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forumPrefix/forumPrefix.service.ts",
          "line": 16,
          "column": 21,
          "pattern": "id: number",
          "context": "async updatePrefix(id: number, data: UpdatePrefixInput) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forumPrefix/forumPrefix.service.ts",
          "line": 46,
          "column": 21,
          "pattern": "id: number",
          "context": "async deletePrefix(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.service.ts",
          "line": 57,
          "column": 24,
          "pattern": "id: number",
          "context": "async getCategoryById(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.service.ts",
          "line": 130,
          "column": 23,
          "pattern": "id: number",
          "context": "async updateCategory(id: number, data: CategoryInput) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.service.ts",
          "line": 197,
          "column": 23,
          "pattern": "id: number",
          "context": "async deleteCategory(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.service.ts",
          "line": 362,
          "column": 18,
          "pattern": "id: number",
          "context": "async updateTag(id: number, data: TagInput) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.service.ts",
          "line": 413,
          "column": 18,
          "pattern": "id: number",
          "context": "async deleteTag(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.service.ts",
          "line": 503,
          "column": 22,
          "pattern": "id: number",
          "context": "async getEntityById(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.service.ts",
          "line": 519,
          "column": 21,
          "pattern": "id: number",
          "context": "async updateEntity(id: number, data: any) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.service.ts",
          "line": 532,
          "column": 21,
          "pattern": "id: number",
          "context": "async deleteEntity(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.service.ts",
          "line": 435,
          "column": 23,
          "pattern": "threadId: number",
          "context": "async moderateThread(threadId: number, data: ModerateThreadInput) {",
          "severity": "critical",
          "suggestedType": "ThreadId"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.routes.ts",
          "line": 71,
          "column": 14,
          "pattern": "parseInt(req.params.id)",
          "context": "const id = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.routes.ts",
          "line": 80,
          "column": 14,
          "pattern": "parseInt(req.params.id)",
          "context": "const id = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.controller.ts",
          "line": 42,
          "column": 23,
          "pattern": "parseInt(req.params.id)",
          "context": "const categoryId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.controller.ts",
          "line": 81,
          "column": 23,
          "pattern": "parseInt(req.params.id)",
          "context": "const categoryId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.controller.ts",
          "line": 107,
          "column": 23,
          "pattern": "parseInt(req.params.id)",
          "context": "const categoryId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.controller.ts",
          "line": 197,
          "column": 18,
          "pattern": "parseInt(req.params.id)",
          "context": "const tagId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.controller.ts",
          "line": 217,
          "column": 18,
          "pattern": "parseInt(req.params.id)",
          "context": "const tagId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.controller.ts",
          "line": 235,
          "column": 21,
          "pattern": "parseInt(req.params.id)",
          "context": "const threadId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.controller.ts",
          "line": 286,
          "column": 21,
          "pattern": "parseInt(req.params.id)",
          "context": "const entityId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.controller.ts",
          "line": 324,
          "column": 21,
          "pattern": "parseInt(req.params.id)",
          "context": "const entityId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/forum/forum.controller.ts",
          "line": 352,
          "column": 21,
          "pattern": "parseInt(req.params.id)",
          "context": "const entityId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/emojis/emojis.service.ts",
          "line": 177,
          "column": 16,
          "pattern": "id: number",
          "context": "async getById(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/emojis/emojis.service.ts",
          "line": 282,
          "column": 15,
          "pattern": "id: number",
          "context": "async update(id: number, emojiData: UpdateEmojiData) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/emojis/emojis.service.ts",
          "line": 344,
          "column": 15,
          "pattern": "id: number",
          "context": "async delete(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/email-templates/email-templates.service.ts",
          "line": 175,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number,",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/email-templates/email-templates.service.ts",
          "line": 241,
          "column": 23,
          "pattern": "id: number",
          "context": "async deleteTemplate(id: number, adminId: string) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/dgt-packages/dgt-packages.service.ts",
          "line": 35,
          "column": 15,
          "pattern": "id: number",
          "context": "async update(id: number, data: Partial<DgtPackageInput>) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/dgt-packages/dgt-packages.service.ts",
          "line": 47,
          "column": 15,
          "pattern": "id: number",
          "context": "async delete(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/clout/clout.controller.ts",
          "line": 24,
          "column": 14,
          "pattern": "Number(req.params.id)",
          "context": "const id = Number(req.params.id);",
          "severity": "high",
          "suggestedType": "remove Number(), use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/clout/clout.controller.ts",
          "line": 74,
          "column": 14,
          "pattern": "Number(req.params.id)",
          "context": "const id = Number(req.params.id);",
          "severity": "high",
          "suggestedType": "remove Number(), use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/clout/clout.controller.ts",
          "line": 95,
          "column": 14,
          "pattern": "Number(req.params.id)",
          "context": "const id = Number(req.params.id);",
          "severity": "high",
          "suggestedType": "remove Number(), use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/clout/clout.controller.ts",
          "line": 105,
          "column": 14,
          "pattern": "Number(req.params.id)",
          "context": "const id = Number(req.params.id);",
          "severity": "high",
          "suggestedType": "remove Number(), use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/database/query.service.ts",
          "line": 96,
          "column": 2,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/admin/sub-domains/database/query.service.ts",
          "line": 108,
          "column": 36,
          "pattern": "userId: number",
          "context": "async executeQuery(query: string, userId: number): Promise<QueryResult> {",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/admin/sub-domains/backup-restore/schedule.service.ts",
          "line": 100,
          "column": 23,
          "pattern": "id: number",
          "context": "async updateSchedule(id: number, data: UpdateScheduleInput, adminId: string) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/backup-restore/schedule.service.ts",
          "line": 158,
          "column": 23,
          "pattern": "id: number",
          "context": "async deleteSchedule(id: number, adminId: string) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/backup-restore/schedule.service.ts",
          "line": 255,
          "column": 20,
          "pattern": "id: number",
          "context": "async getSchedule(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/backup-restore/schedule.service.ts",
          "line": 298,
          "column": 24,
          "pattern": "id: number",
          "context": "async triggerSchedule(id: number, adminId: string) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/backup-restore/restore.service.ts",
          "line": 634,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number,",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/backup-restore/backup.service.ts",
          "line": 224,
          "column": 18,
          "pattern": "id: number",
          "context": "async getBackup(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/backup-restore/backup.service.ts",
          "line": 255,
          "column": 21,
          "pattern": "id: number",
          "context": "async deleteBackup(id: number, adminId: string) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/backup-restore/backup.service.ts",
          "line": 305,
          "column": 20,
          "pattern": "id: number",
          "context": "getBackupProgress(id: number): BackupProgress | null {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/backup-restore/backup.service.ts",
          "line": 550,
          "column": 3,
          "pattern": "id: number",
          "context": "id: number,",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/avatar-frames/avatar-frames.service.ts",
          "line": 31,
          "column": 21,
          "pattern": "id: number",
          "context": "async getFrameById(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/avatar-frames/avatar-frames.service.ts",
          "line": 61,
          "column": 20,
          "pattern": "id: number",
          "context": "async updateFrame(id: number, data: UpdateFrameData) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/avatar-frames/avatar-frames.service.ts",
          "line": 81,
          "column": 20,
          "pattern": "id: number",
          "context": "async deleteFrame(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/avatar-frames/avatar-frames.service.ts",
          "line": 111,
          "column": 27,
          "pattern": "id: number",
          "context": "async getFrameUsageCount(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/avatar-frames/avatar-frames.controller.ts",
          "line": 35,
          "column": 20,
          "pattern": "parseInt(req.params.id)",
          "context": "const frameId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/avatar-frames/avatar-frames.controller.ts",
          "line": 92,
          "column": 20,
          "pattern": "parseInt(req.params.id)",
          "context": "const frameId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/avatar-frames/avatar-frames.controller.ts",
          "line": 132,
          "column": 20,
          "pattern": "parseInt(req.params.id)",
          "context": "const frameId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/reports/reports.controller.ts",
          "line": 39,
          "column": 21,
          "pattern": "parseInt(req.params.id)",
          "context": "const reportId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/reports/reports.controller.ts",
          "line": 56,
          "column": 21,
          "pattern": "parseInt(req.params.id)",
          "context": "const reportId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/reports/reports.controller.ts",
          "line": 86,
          "column": 21,
          "pattern": "parseInt(req.params.id)",
          "context": "const reportId = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/animation-packs/animation-packs.service.ts",
          "line": 53,
          "column": 15,
          "pattern": "id: number",
          "context": "async update(id: number, data: PackInput) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/animation-packs/animation-packs.service.ts",
          "line": 70,
          "column": 15,
          "pattern": "id: number",
          "context": "async delete(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/animation-packs/animation-packs.controller.ts",
          "line": 24,
          "column": 14,
          "pattern": "Number(req.params.id)",
          "context": "const id = Number(req.params.id);",
          "severity": "high",
          "suggestedType": "remove Number(), use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/animation-packs/animation-packs.controller.ts",
          "line": 34,
          "column": 14,
          "pattern": "Number(req.params.id)",
          "context": "const id = Number(req.params.id);",
          "severity": "high",
          "suggestedType": "remove Number(), use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/announcements/services/announcements.service.ts",
          "line": 105,
          "column": 43,
          "pattern": "id: number",
          "context": "export async function getAnnouncementById(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/announcements/services/announcements.service.ts",
          "line": 123,
          "column": 42,
          "pattern": "id: number",
          "context": "export async function updateAnnouncement(id: number, updateData: any) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/announcements/services/announcements.service.ts",
          "line": 142,
          "column": 46,
          "pattern": "id: number",
          "context": "export async function deactivateAnnouncement(id: number) {",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/announcements/controllers/announcements.controller.ts",
          "line": 57,
          "column": 14,
          "pattern": "parseInt(req.params.id)",
          "context": "const id = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/announcements/controllers/announcements.controller.ts",
          "line": 106,
          "column": 14,
          "pattern": "parseInt(req.params.id)",
          "context": "const id = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/announcements/controllers/announcements.controller.ts",
          "line": 133,
          "column": 14,
          "pattern": "parseInt(req.params.id)",
          "context": "const id = parseInt(req.params.id);",
          "severity": "high",
          "suggestedType": "remove parseInt, use branded type"
        },
        {
          "file": "server/src/domains/admin/sub-domains/analytics/engagement/tipping-analytics.service.ts",
          "line": 29,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/admin/sub-domains/analytics/engagement/tipping-analytics.service.ts",
          "line": 38,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        },
        {
          "file": "server/src/domains/admin/sub-domains/analytics/engagement/rain-analytics.service.ts",
          "line": 29,
          "column": 3,
          "pattern": "userId: number",
          "context": "userId: number;",
          "severity": "critical",
          "suggestedType": "UserId"
        }
      ],
      "priority": 12
    },
    "database": {
      "files": [
        "db/index.ts",
        "db/types/utils.ts",
        "db/types/user.types.ts",
        "db/types/system.types.ts",
        "db/types/index.ts",
        "db/types/id.types.ts",
        "db/types/forum.types.ts",
        "db/types/emoji.types.ts",
        "db/types/brand.types.ts",
        "db/types/announcement.types.ts",
        "db/schema/index.ts",
        "db/schema/wallet/withdrawal-records.ts",
        "db/schema/wallet/webhook-events.ts",
        "db/schema/wallet/swap-records.ts",
        "db/schema/wallet/supported-tokens.ts",
        "db/schema/wallet/internal-transfers.ts",
        "db/schema/wallet/deposit-records.ts",
        "db/schema/wallet/crypto-wallets.ts",
        "db/schema/wallet/ccpayment-users.ts",
        "db/schema/user/xShares.ts",
        "db/schema/user/verificationTokens.ts",
        "db/schema/user/users.ts",
        "db/schema/user/userRoles.ts",
        "db/schema/user/userOwnedFrames.ts",
        "db/schema/user/userGroups.ts",
        "db/schema/user/user-social-preferences.ts",
        "db/schema/user/subscriptions.ts",
        "db/schema/user/settingsHistory.ts",
        "db/schema/user/sessions.ts",
        "db/schema/user/roles.ts",
        "db/schema/user/rolePermissions.ts",
        "db/schema/user/relationships.ts",
        "db/schema/user/preferences.ts",
        "db/schema/user/permissions.ts",
        "db/schema/user/passwordResetTokens.ts",
        "db/schema/user/featurePermissions.ts",
        "db/schema/user/bans.ts",
        "db/schema/user/avatarFrames.ts",
        "db/schema/system/userReferrals.ts",
        "db/schema/system/userAbuseFlags.ts",
        "db/schema/system/referralSources.ts",
        "db/schema/system/rateLimits.ts",
        "db/schema/system/profileAnalytics.ts",
        "db/schema/system/notifications.ts",
        "db/schema/system/mentionsIndex.ts",
        "db/schema/system/event_logs.ts",
        "db/schema/system/economyConfigOverrides.ts",
        "db/schema/system/cooldownState.ts",
        "db/schema/system/analyticsEvents.ts",
        "db/schema/system/airdrop-records.ts",
        "db/schema/system/activityFeed.ts",
        "db/schema/social/user-follows.ts",
        "db/schema/social/mentions.ts",
        "db/schema/social/friends.ts",
        "db/schema/shop/userSignatureItems.ts",
        "db/schema/shop/userInventory.ts",
        "db/schema/shop/signatureItems.ts",
        "db/schema/shop/rarities.ts",
        "db/schema/shop/products.ts",
        "db/schema/shop/productMedia.ts",
        "db/schema/shop/productCategories.ts",
        "db/schema/shop/orders.ts",
        "db/schema/shop/orderItems.ts",
        "db/schema/shop/inventoryTransactions.ts",
        "db/schema/shop/cosmeticCategories.ts",
        "db/schema/shop/animationPacks.ts",
        "db/schema/shop/animationPackItems.ts",
        "db/schema/migrations/performance-indices.ts",
        "db/schema/messaging/shoutboxMessages.ts",
        "db/schema/messaging/onlineUsers.ts",
        "db/schema/messaging/messages.ts",
        "db/schema/messaging/messageReads.ts",
        "db/schema/messaging/directMessages.ts",
        "db/schema/messaging/conversations.ts",
        "db/schema/messaging/conversationParticipants.ts",
        "db/schema/messaging/chatRooms.ts",
        "db/schema/gamification/userMissionProgress.ts",
        "db/schema/gamification/userAchievements.ts",
        "db/schema/gamification/platformStats.ts",
        "db/schema/gamification/missions.ts",
        "db/schema/gamification/leaderboards.ts",
        "db/schema/gamification/achievements.ts",
        "db/schema/gamification/achievementEvents.ts",
        "db/schema/forum/userRuleAgreements.ts",
        "db/schema/forum/userEmojiPacks.ts",
        "db/schema/forum/threads.ts",
        "db/schema/forum/threadTags.ts",
        "db/schema/forum/threadFeaturePermissions.ts",
        "db/schema/forum/threadDrafts.ts",
        "db/schema/forum/threadBookmarks.ts",
        "db/schema/forum/tags.ts",
        "db/schema/forum/structure.ts",
        "db/schema/forum/rules.ts",
        "db/schema/forum/prefixes.ts",
        "db/schema/forum/posts.ts",
        "db/schema/forum/postReactions.ts",
        "db/schema/forum/postLikes.ts",
        "db/schema/forum/postDrafts.ts",
        "db/schema/forum/polls.ts",
        "db/schema/forum/pollVotes.ts",
        "db/schema/forum/pollOptions.ts",
        "db/schema/forum/emojiPacks.ts",
        "db/schema/forum/emojiPackItems.ts",
        "db/schema/forum/customEmojis.ts",
        "db/schema/economy/xpLogs.ts",
        "db/schema/economy/xpCloutSettings.ts",
        "db/schema/economy/xpAdjustmentLogs.ts",
        "db/schema/economy/xpActionSettings.ts",
        "db/schema/economy/withdrawalRequests.ts",
        "db/schema/economy/wallets.ts",
        "db/schema/economy/vaults.ts",
        "db/schema/economy/userTitles.ts",
        "db/schema/economy/userCommands.ts",
        "db/schema/economy/userCloutLog.ts",
        "db/schema/economy/userBadges.ts",
        "db/schema/economy/treasurySettings.ts",
        "db/schema/economy/transactions.ts",
        "db/schema/economy/titles.ts",
        "db/schema/economy/settings.ts",
        "db/schema/economy/rainEvents.ts",
        "db/schema/economy/postTips.ts",
        "db/schema/economy/levels.ts",
        "db/schema/economy/dgtPurchaseOrders.ts",
        "db/schema/economy/dgtPackages.ts",
        "db/schema/economy/cloutAchievements.ts",
        "db/schema/economy/badges.ts",
        "db/schema/economy/airdropSettings.ts",
        "db/schema/economy/airdropRecords.ts",
        "db/schema/dictionary/upvotes.ts",
        "db/schema/dictionary/entries.ts",
        "db/schema/core/enums.ts",
        "db/schema/collectibles/stickers.ts",
        "db/schema/advertising/user-promotions.ts",
        "db/schema/advertising/targeting.ts",
        "db/schema/advertising/placements.ts",
        "db/schema/advertising/performance.ts",
        "db/schema/advertising/payments.ts",
        "db/schema/advertising/campaigns.ts",
        "db/schema/admin/uiThemes.ts",
        "db/schema/admin/uiConfig.ts",
        "db/schema/admin/themes.ts",
        "db/schema/admin/templates.ts",
        "db/schema/admin/siteSettings.ts",
        "db/schema/admin/shoutboxConfig.ts",
        "db/schema/admin/seoMetadata.ts",
        "db/schema/admin/scheduledTasks.ts",
        "db/schema/admin/reports.ts",
        "db/schema/admin/moderator-notes.ts",
        "db/schema/admin/moderationActions.ts",
        "db/schema/admin/mediaLibrary.ts",
        "db/schema/admin/featureFlags.ts",
        "db/schema/admin/emailTemplates.ts",
        "db/schema/admin/brandConfig.ts",
        "db/schema/admin/backups.ts",
        "db/schema/admin/auditLogs.ts",
        "db/schema/admin/announcements.ts"
      ],
      "issues": [
        {
          "file": "db/types/forum.types.ts",
          "line": 50,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        },
        {
          "file": "db/types/announcement.types.ts",
          "line": 2,
          "column": 2,
          "pattern": "id: number",
          "context": "id: number;",
          "severity": "critical",
          "suggestedType": "check entity context for correct branded type"
        }
      ],
      "priority": 13
    }
  },
  "summary": {
    "critical": 612,
    "high": 48,
    "medium": 0
  }
}
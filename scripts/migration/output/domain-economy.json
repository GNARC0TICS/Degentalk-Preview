{
  "name": "economy",
  "files": [
    {
      "path": "shared/wallet.config.ts",
      "domain": "economy",
      "layer": "other",
      "size": 6580,
      "lines": 287,
      "complexity": 2,
      "dependencies": [],
      "exports": [
        "WalletFeatureGate",
        "WalletConfig",
        "walletConfig",
        "SupportedToken",
        "WALLET_FEATURE_GATES",
        "WalletFeatureChecker",
        "WALLET_FEATURE_SETS"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "shared/economy/shop-items.ts",
      "domain": "economy",
      "subdomain": "shop-items.ts",
      "layer": "other",
      "size": 1194,
      "lines": 63,
      "complexity": 1,
      "dependencies": [],
      "exports": [
        "ShopItem",
        "shopItems"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "shared/economy/reward-calculator.ts",
      "domain": "economy",
      "subdomain": "reward-calculator.ts",
      "layer": "other",
      "size": 2812,
      "lines": 91,
      "complexity": 2,
      "dependencies": [],
      "exports": [
        "getLevelForXp",
        "getProgressWithinLevel",
        "calculateTipXp",
        "applyDailyXpCap",
        "XPAction",
        "XPContext",
        "calculateXp",
        "getXpForLevel "
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "shared/economy/rain-tip-config.ts",
      "domain": "economy",
      "layer": "other",
      "size": 195,
      "lines": 14,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "rainTipConfig"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "shared/economy/index.ts",
      "domain": "economy",
      "subdomain": "index.ts",
      "layer": "other",
      "size": 187,
      "lines": 6,
      "complexity": 0,
      "dependencies": [],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "shared/economy/economy.config.ts",
      "domain": "economy",
      "subdomain": "economy.config.ts",
      "layer": "other",
      "size": 9065,
      "lines": 293,
      "complexity": 2,
      "dependencies": [
        "zod",
        "@degentalk/db/types"
      ],
      "exports": [
        "EconomyConfigSchema",
        "economyConfig",
        "EconomyConfig",
        "getEconomyConfig",
        "getXpForLevel",
        "MultiplierStrategy",
        "sanitizeMultiplier",
        "getSafeMultiplier"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "ForumId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.4
    },
    {
      "path": "shared/economy/clout-calculator.ts",
      "domain": "economy",
      "subdomain": "clout-calculator.ts",
      "layer": "other",
      "size": 3248,
      "lines": 112,
      "complexity": 2,
      "dependencies": [],
      "exports": [
        "CLOUT_TIERS",
        "CloutTier",
        "getTierForClout",
        "getCloutForTier",
        "getNextTierInfo",
        "calculateCloutTierImpact",
        "getAllCloutTiers"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "server/utils/walletEngine.ts",
      "domain": "economy",
      "layer": "utils",
      "size": 20685,
      "lines": 776,
      "complexity": 10,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "WalletEngine"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 13,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 25,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 59,
          "context": "static async getUserWallet(userId: number): Promise<UserWallet | null> {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 101,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 162,
          "context": "userId: number",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 193,
          "context": "static async purchaseDgtUnlock(userId: number, unlockId: number): Promise<DgtPurchaseResult> {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 541,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 622,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 4.3
    },
    {
      "path": "server/utils/wallet-utils.ts",
      "domain": "economy",
      "layer": "utils",
      "size": 6785,
      "lines": 240,
      "complexity": 6,
      "dependencies": [
        "drizzle-orm",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "formatDgtAmount",
        "parseDgtAmount"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.2
    },
    {
      "path": "server/utils/dgt-wallet-integration.ts",
      "domain": "economy",
      "layer": "utils",
      "size": 8551,
      "lines": 352,
      "complexity": 5,
      "dependencies": [
        "drizzle-orm",
        "stripe"
      ],
      "exports": [
        "DgtWalletIntegration"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 74,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 163,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 220,
          "context": "static async getUserDgtPurchaseHistory(userId: number, limit = 20, offset = 0) {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 2.8
    },
    {
      "path": "server/utils/dgt-treasury-init.ts",
      "domain": "economy",
      "layer": "utils",
      "size": 3595,
      "lines": 105,
      "complexity": 1,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "server/services/tip-service-ccpayment.ts",
      "domain": "economy",
      "layer": "services",
      "size": 12356,
      "lines": 479,
      "complexity": 7,
      "dependencies": [
        "@schema",
        "drizzle-orm",
        "drizzle-orm"
      ],
      "exports": [
        "TipService",
        "createTipService",
        "tipService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 217,
          "context": "recipient: { id: number; username: string };",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 391,
          "context": "private async checkCooldowns(userId: number, commandType: 'tip' | 'rain'): Promise<void> {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 440,
          "context": "private async updateLastCommandTime(userId: number, commandType: 'tip' | 'rain'): Promise<void> {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 1.7000000000000002
    },
    {
      "path": "server/services/ccpayment-client.ts",
      "domain": "economy",
      "layer": "services",
      "size": 6611,
      "lines": 244,
      "complexity": 4,
      "dependencies": [
        "axios",
        "crypto"
      ],
      "exports": [
        "ccpaymentClient"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 2.3
    },
    {
      "path": "server/migrations/add-dgt-purchase-orders-table.ts",
      "domain": "economy",
      "layer": "other",
      "size": 2899,
      "lines": 84,
      "complexity": 1,
      "dependencies": [
        "drizzle-orm/node-postgres",
        "drizzle-orm/node-postgres/migrator",
        "pg",
        "drizzle-orm",
        "dotenv"
      ],
      "exports": [
        "runMigration "
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "server/migrations/add-dgt-packages-table.ts",
      "domain": "economy",
      "layer": "other",
      "size": 2940,
      "lines": 99,
      "complexity": 2,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "scripts/templates/transaction-domain-template.ts",
      "domain": "economy",
      "layer": "other",
      "size": 35610,
      "lines": 1109,
      "complexity": 10,
      "dependencies": [
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types"
      ],
      "exports": [
        "transactionRoutesTemplate",
        "transactionControllerTemplate",
        "TransactionController",
        "transactionController",
        "transactionServiceTemplate",
        "TransactionQueryParams",
        "TransactionStatsPeriod",
        "TransactionStats",
        "TransactionService",
        "transactionService",
        "transactionValidatorsTemplate",
        "transactionQuerySchema",
        "validateTransactionQuery",
        "transactionErrorCodesTemplate",
        "transactionTestTemplate",
        "createTransactionsDomainScript",
        "formatDateTimeForDb",
        "formatDateForDisplay",
        "transactionQuerySchema\n"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 326,
          "context": "async getTransactionHistory(userId: number, params: TransactionQueryParams) {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 449,
          "context": "async getTransactionById(userId: number, transactionId: number) {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 517,
          "context": "async getTransactionStats(userId: number, period: 'day' | 'week' | 'month' | 'year' = 'month') {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 628,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 197,
          "context": "const transactionId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "HeatEventId"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 2.7
    },
    {
      "path": "scripts/db/seed-dev-wallet.ts",
      "domain": "economy",
      "layer": "other",
      "size": 7566,
      "lines": 195,
      "complexity": 2,
      "dependencies": [
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "HeatEventId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.4
    },
    {
      "path": "scripts/dev/setup-fresh-wallet-test.ts",
      "domain": "economy",
      "layer": "other",
      "size": 3546,
      "lines": 129,
      "complexity": 2,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "bcrypt"
      ],
      "exports": [
        "setupFreshWalletTest "
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.4
    },
    {
      "path": "lib/wallet/testUtils.ts",
      "domain": "economy",
      "subdomain": "testUtils.ts",
      "layer": "other",
      "size": 814,
      "lines": 25,
      "complexity": 1,
      "dependencies": [],
      "exports": [
        "logDevEvent"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "shared/types/core/economy.types.ts",
      "domain": "economy",
      "layer": "types",
      "size": 7340,
      "lines": 307,
      "complexity": 2,
      "dependencies": [
        "@db/types/id.types",
        "@db/schema/core/enums"
      ],
      "exports": [
        "DGTToken",
        "Wallet",
        "WalletFeatures",
        "WalletLimits",
        "Transaction",
        "TransactionReference",
        "TransactionMetadata",
        "PendingTransaction",
        "Tip",
        "Purchase",
        "PurchaseItem",
        "Withdrawal",
        "EconomyStats",
        "WalletHolder",
        "CreateTransactionRequest",
        "WithdrawRequest",
        "TipRequest",
        "PurchaseRequest",
        "WalletHistoryParams",
        "isWallet"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "UserId",
          "WalletId",
          "TransactionId",
          "ProductId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "shared/types/config/economy.schema.ts",
      "domain": "economy",
      "layer": "types",
      "size": 9623,
      "lines": 271,
      "complexity": 1,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "CurrencyConfigSchema",
        "FeeConfigSchema",
        "WalletLimitsSchema",
        "DistributionConfigSchema",
        "StakingConfigSchema",
        "ShopPricingSchema",
        "EconomyConfigSchema",
        "EconomyConfig",
        "CurrencyConfig",
        "FeeConfig",
        "WalletLimits",
        "DistributionConfig",
        "StakingConfig",
        "ShopPricing",
        "validateEconomyConfig",
        "validatePartialEconomyConfig"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "shared/lib/wallet/testUtils.ts",
      "domain": "economy",
      "subdomain": "testUtils.ts",
      "layer": "utils",
      "size": 856,
      "lines": 27,
      "complexity": 1,
      "dependencies": [
        "@db/types"
      ],
      "exports": [
        "logDevEvent"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "UserId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "server/test/wallet/dgt-service.test.ts",
      "domain": "economy",
      "subdomain": "dgt-service.test.ts",
      "layer": "other",
      "size": 6054,
      "lines": 243,
      "complexity": 3,
      "dependencies": [
        "vitest",
        "@db",
        "drizzle-orm"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.1
    },
    {
      "path": "server/test/engagement/tip.test.ts",
      "domain": "economy",
      "layer": "other",
      "size": 3424,
      "lines": 153,
      "complexity": 2,
      "dependencies": [
        "vitest",
        "@db"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "server/test/ccpayment-webhook/webhook.test.ts",
      "domain": "economy",
      "subdomain": "webhook.test.ts",
      "layer": "other",
      "size": 5755,
      "lines": 232,
      "complexity": 2,
      "dependencies": [
        "vitest",
        "@db"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "server/src/utils/economy-loader.ts",
      "domain": "economy",
      "layer": "utils",
      "size": 1161,
      "lines": 33,
      "complexity": 2,
      "dependencies": [
        "@shared/economy/economy.config",
        "@schema",
        "@db"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.4
    },
    {
      "path": "server/src/core/wallet-validators.ts",
      "domain": "economy",
      "layer": "other",
      "size": 1171,
      "lines": 43,
      "complexity": 1,
      "dependencies": [
        "express"
      ],
      "exports": [
        "validateWalletTransaction",
        "validateWalletAddress",
        "validateTransactionAmount"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.8999999999999999
    },
    {
      "path": "server/migrations/archive/run-tip-rain.ts",
      "domain": "economy",
      "layer": "other",
      "size": 681,
      "lines": 23,
      "complexity": 1,
      "dependencies": [
        "dotenv"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "db/schema/wallet/withdrawal-records.ts",
      "domain": "economy",
      "subdomain": "withdrawal-records.ts",
      "layer": "other",
      "size": 2372,
      "lines": 60,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "withdrawalRecords",
        "WithdrawalRecord",
        "InsertWithdrawalRecord"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/wallet/webhook-events.ts",
      "domain": "economy",
      "subdomain": "webhook-events.ts",
      "layer": "other",
      "size": 2031,
      "lines": 57,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "webhookEvents",
        "WebhookEvent",
        "InsertWebhookEvent"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/wallet/swap-records.ts",
      "domain": "economy",
      "subdomain": "swap-records.ts",
      "layer": "other",
      "size": 2142,
      "lines": 61,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "swapRecords",
        "SwapRecord",
        "InsertSwapRecord"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/wallet/supported-tokens.ts",
      "domain": "economy",
      "subdomain": "supported-tokens.ts",
      "layer": "other",
      "size": 2255,
      "lines": 62,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "supportedTokens",
        "SupportedToken",
        "InsertSupportedToken"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/wallet/internal-transfers.ts",
      "domain": "economy",
      "subdomain": "internal-transfers.ts",
      "layer": "other",
      "size": 1956,
      "lines": 54,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "internalTransfers",
        "InternalTransfer",
        "InsertInternalTransfer"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/wallet/deposit-records.ts",
      "domain": "economy",
      "subdomain": "deposit-records.ts",
      "layer": "other",
      "size": 2402,
      "lines": 64,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "depositRecords",
        "DepositRecord",
        "InsertDepositRecord"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/wallet/crypto-wallets.ts",
      "domain": "economy",
      "subdomain": "crypto-wallets.ts",
      "layer": "other",
      "size": 1378,
      "lines": 45,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "cryptoWallets",
        "CryptoWallet",
        "InsertCryptoWallet"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/system/economyConfigOverrides.ts",
      "domain": "economy",
      "layer": "other",
      "size": 773,
      "lines": 17,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm/pg-core",
        "drizzle-orm"
      ],
      "exports": [
        "economyConfigOverrides",
        "EconomyConfigOverride",
        "NewEconomyConfigOverride"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.5
    },
    {
      "path": "db/schema/economy/xpLogs.ts",
      "domain": "economy",
      "subdomain": "xpLogs.ts",
      "layer": "other",
      "size": 894,
      "lines": 36,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "xpLogs",
        "XpLog",
        "InsertXpLog"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/economy/xpAdjustmentLogs.ts",
      "domain": "economy",
      "subdomain": "xpAdjustmentLogs.ts",
      "layer": "other",
      "size": 1001,
      "lines": 26,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm/pg-core",
        "drizzle-orm"
      ],
      "exports": [
        "xpAdjustmentLogs",
        "XpAdjustmentLog",
        "InsertXpAdjustmentLog"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/economy/withdrawalRequests.ts",
      "domain": "economy",
      "subdomain": "withdrawalRequests.ts",
      "layer": "other",
      "size": 2138,
      "lines": 67,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm",
        "drizzle-zod",
        "zod"
      ],
      "exports": [
        "withdrawalRequests",
        "insertWithdrawalRequestSchema",
        "WithdrawalRequest",
        "InsertWithdrawalRequest"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/economy/wallets.ts",
      "domain": "economy",
      "layer": "other",
      "size": 1645,
      "lines": 44,
      "complexity": 1,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "wallets",
        "Wallet",
        "InsertWallet"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "db/schema/economy/vaults.ts",
      "domain": "economy",
      "subdomain": "vaults.ts",
      "layer": "other",
      "size": 3027,
      "lines": 103,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm",
        "drizzle-zod",
        "zod"
      ],
      "exports": [
        "vaults",
        "insertVaultSchema",
        "Vault",
        "InsertVault"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/economy/transactions.ts",
      "domain": "economy",
      "layer": "other",
      "size": 2266,
      "lines": 57,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "transactions",
        "Transaction",
        "InsertTransaction"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/economy/titles.ts",
      "domain": "economy",
      "subdomain": "titles.ts",
      "layer": "other",
      "size": 2180,
      "lines": 64,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm",
        "drizzle-zod"
      ],
      "exports": [
        "titles",
        "insertTitleSchema",
        "Title",
        "InsertTitle"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/economy/rainEvents.ts",
      "domain": "economy",
      "subdomain": "rainEvents.ts",
      "layer": "other",
      "size": 1065,
      "lines": 36,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "rainEvents",
        "RainEvent",
        "InsertRainEvent"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/economy/levels.ts",
      "domain": "economy",
      "subdomain": "levels.ts",
      "layer": "other",
      "size": 1743,
      "lines": 40,
      "complexity": 1,
      "dependencies": [
        "drizzle-orm/pg-core",
        "drizzle-zod"
      ],
      "exports": [
        "levels",
        "insertLevelSchema",
        "Level",
        "InsertLevel"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "db/schema/economy/dgtPurchaseOrders.ts",
      "domain": "economy",
      "layer": "other",
      "size": 1986,
      "lines": 61,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm",
        "drizzle-zod",
        "zod"
      ],
      "exports": [
        "dgtPurchaseOrders",
        "insertDgtPurchaseOrderSchema",
        "DgtPurchaseOrder",
        "InsertDgtPurchaseOrder"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/economy/dgtPackages.ts",
      "domain": "economy",
      "layer": "other",
      "size": 1841,
      "lines": 63,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm",
        "drizzle-zod",
        "zod"
      ],
      "exports": [
        "dgtPackages",
        "insertDgtPackageSchema",
        "DgtPackage",
        "InsertDgtPackage"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/economy/cloutAchievements.ts",
      "domain": "economy",
      "subdomain": "cloutAchievements.ts",
      "layer": "other",
      "size": 1161,
      "lines": 36,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "cloutAchievements",
        "CloutAchievement",
        "InsertCloutAchievement"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/economy/badges.ts",
      "domain": "economy",
      "subdomain": "badges.ts",
      "layer": "other",
      "size": 657,
      "lines": 18,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm/pg-core",
        "drizzle-orm",
        "drizzle-zod"
      ],
      "exports": [
        "badges",
        "insertBadgeSchema",
        "Badge",
        "InsertBadge"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/economy/airdropRecords.ts",
      "domain": "economy",
      "subdomain": "airdropRecords.ts",
      "layer": "other",
      "size": 581,
      "lines": 14,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm/pg-core"
      ],
      "exports": [
        "airdropRecords",
        "AirdropRecord",
        "InsertAirdropRecord"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/shop/inventoryTransactions.ts",
      "domain": "economy",
      "layer": "other",
      "size": 1790,
      "lines": 47,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "inventoryTransactions",
        "InventoryTransaction",
        "InsertInventoryTransaction"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/types/wallet.ts",
      "domain": "economy",
      "layer": "types",
      "size": 1106,
      "lines": 62,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "Transaction",
        "TransactionHistoryParams",
        "DepositAddress",
        "WalletBalances"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/types/payment.types.ts",
      "domain": "economy",
      "layer": "types",
      "size": 3591,
      "lines": 177,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "SupportedCurrency",
        "CCPaymentResponse",
        "DepositRequest",
        "DepositResponse",
        "WithdrawalRequest",
        "WithdrawalResponse",
        "SwapRequest",
        "SwapResponse",
        "CryptoBalance",
        "WalletBalances",
        "Transaction",
        "TransactionMetadata",
        "CCPaymentWebhook",
        "PaymentConfig",
        "PaymentError",
        "DepositAddress",
        "ExchangeRate"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 20,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 39,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 56,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 90,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 0.9
    },
    {
      "path": "db/schema/advertising/payments.ts",
      "domain": "economy",
      "layer": "other",
      "size": 5137,
      "lines": 161,
      "complexity": 1,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "paymentStatusEnum",
        "cryptoCurrencyEnum",
        "cryptoPayments",
        "adGovernanceProposals",
        "adGovernanceVotes",
        "CryptoPayment",
        "InsertCryptoPayment",
        "AdGovernanceProposal",
        "AdGovernanceVote"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/payments/index.ts",
      "domain": "economy",
      "subdomain": "index.ts",
      "layer": "other",
      "size": 1172,
      "lines": 55,
      "complexity": 1,
      "dependencies": [],
      "exports": [
        "PaymentProviders",
        "getDefaultProvider",
        "getSupportedCurrencies"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/pages/wallet.tsx",
      "domain": "economy",
      "layer": "pages",
      "size": 4547,
      "lines": 117,
      "complexity": 0,
      "dependencies": [
        "react",
        "@/hooks/use-wallet",
        "@/components/economy/wallet/wallet-balance-display",
        "@/components/economy/wallet/transaction-history",
        "@/components/economy/wallet/deposit-button",
        "@/components/economy/wallet/withdraw-button",
        "@/components/economy/wallet/buy-dgt-button",
        "@/components/economy/wallet/dgt-transfer",
        "wouter"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/hooks/useDgtPurchase.ts",
      "domain": "economy",
      "layer": "hooks",
      "size": 5001,
      "lines": 188,
      "complexity": 4,
      "dependencies": [
        "react",
        "@/hooks/use-toast",
        "@/lib/queryClient",
        "@tanstack/react-query",
        "axios",
        "sonner"
      ],
      "exports": [
        "useDgtPurchase"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.3
    },
    {
      "path": "client/src/hooks/use-wallet.ts",
      "domain": "economy",
      "layer": "hooks",
      "size": 5378,
      "lines": 168,
      "complexity": 2,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/features/wallet/services/wallet-api.service",
        "@/lib/queryClient",
        "@/hooks/use-toast"
      ],
      "exports": [
        "useWallet"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "WalletBalance",
          "CryptoBalance",
          "Transaction",
          "DepositAddress"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "client/src/hooks/use-tip.ts",
      "domain": "economy",
      "layer": "hooks",
      "size": 2686,
      "lines": 114,
      "complexity": 2,
      "dependencies": [
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/hooks/use-toast",
        "@db/types"
      ],
      "exports": [
        "TipParams",
        "useTip"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 21,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "TipId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2
    },
    {
      "path": "client/src/hooks/use-pending-transactions.ts",
      "domain": "economy",
      "layer": "hooks",
      "size": 2929,
      "lines": 102,
      "complexity": 2,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/contexts/wallet-context",
        "@/types/wallet"
      ],
      "exports": [
        "PendingTransaction",
        "usePendingTransactions"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Transaction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "client/src/hooks/use-dgt-packages.ts",
      "domain": "economy",
      "layer": "hooks",
      "size": 524,
      "lines": 23,
      "complexity": 1,
      "dependencies": [
        "@tanstack/react-query",
        "@/lib/queryClient"
      ],
      "exports": [
        "DgtPackage",
        "useDgtPackages"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 5,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.8
    },
    {
      "path": "client/src/contexts/wallet-context.tsx",
      "domain": "economy",
      "layer": "other",
      "size": 5061,
      "lines": 174,
      "complexity": 2,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/types/wallet",
        "@/types/wallet"
      ],
      "exports": [
        "WalletProvider",
        "useWalletContext",
        "useWalletOperations"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Transaction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "archive/legacy/wallet/wallet-refactor-migration.ts",
      "domain": "economy",
      "subdomain": "wallet-refactor-migration.ts",
      "layer": "other",
      "size": 4884,
      "lines": 142,
      "complexity": 4,
      "dependencies": [
        "dotenv",
        "@db",
        "fs",
        "path",
        "@core/logger",
        "drizzle-orm"
      ],
      "exports": [
        "migrateWalletRefactor "
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.8
    },
    {
      "path": "archive/legacy/wallet/migrate-wallet-imports.ts",
      "domain": "economy",
      "subdomain": "migrate-wallet-imports.ts",
      "layer": "other",
      "size": 3233,
      "lines": 115,
      "complexity": 2,
      "dependencies": [
        "@db/types",
        "fs",
        "path",
        "glob"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "AdminId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "archive/legacy/wallet/migrate-wallet-components.ts",
      "domain": "economy",
      "subdomain": "migrate-wallet-components.ts",
      "layer": "other",
      "size": 4241,
      "lines": 139,
      "complexity": 2,
      "dependencies": [
        "@db/types",
        "fs",
        "path",
        "glob"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "AdminId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "client/src/types/compat/economy.ts",
      "domain": "economy",
      "layer": "types",
      "size": 229,
      "lines": 14,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "InsertXpCloutSettings",
        "InsertXpActionSetting"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/payments/shared/index.ts",
      "domain": "economy",
      "subdomain": "shared",
      "layer": "other",
      "size": 2350,
      "lines": 103,
      "complexity": 1,
      "dependencies": [],
      "exports": [
        "TransactionType",
        "TransactionStatus",
        "Transaction",
        "PaymentProvider",
        "formatCurrency",
        "calculateFee"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 23,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.8
    },
    {
      "path": "client/src/payments/ccpayment/withdraw.ts",
      "domain": "economy",
      "subdomain": "ccpayment",
      "layer": "other",
      "size": 4170,
      "lines": 177,
      "complexity": 3,
      "dependencies": [],
      "exports": [
        "CreateWithdrawalParams",
        "WithdrawalResponse"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 15,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 118,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.3
    },
    {
      "path": "client/src/payments/ccpayment/utils.ts",
      "domain": "economy",
      "subdomain": "ccpayment",
      "layer": "other",
      "size": 3182,
      "lines": 123,
      "complexity": 2,
      "dependencies": [
        "crypto"
      ],
      "exports": [
        "createSignature",
        "verifyWebhookSignature",
        "formatTransactionStatus",
        "generateOrderId"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "client/src/payments/ccpayment/types.ts",
      "domain": "economy",
      "subdomain": "ccpayment",
      "layer": "other",
      "size": 1349,
      "lines": 79,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "CCPaymentConfig",
        "DepositRequest",
        "WithdrawalRequest",
        "TransactionStatus",
        "CCPaymentWebhookEvent",
        "SupportedCurrency"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/payments/ccpayment/swap.ts",
      "domain": "economy",
      "subdomain": "ccpayment",
      "layer": "other",
      "size": 2426,
      "lines": 129,
      "complexity": 2,
      "dependencies": [],
      "exports": [
        "CreateSwapParams",
        "SwapResponse"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 14,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2
    },
    {
      "path": "client/src/payments/ccpayment/index.ts",
      "domain": "economy",
      "subdomain": "ccpayment",
      "layer": "other",
      "size": 1007,
      "lines": 48,
      "complexity": 1,
      "dependencies": [],
      "exports": [
        "CCPaymentClient",
        "ccpaymentClient",
        "createDeposit",
        "checkDepositStatus",
        "type CreateDepositParams",
        "type DepositResponse",
        "createWithdrawal",
        "checkWithdrawalStatus",
        "validateWithdrawal",
        "type CreateWithdrawalParams",
        "type WithdrawalResponse",
        "createSwap",
        "getExchangeRates",
        "type CreateSwapParams",
        "type SwapResponse",
        "createSignature",
        "verifyWebhookSignature",
        "formatTransactionStatus",
        "generateOrderId",
        "type CCPaymentConfig"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/payments/ccpayment/deposit.ts",
      "domain": "economy",
      "subdomain": "ccpayment",
      "layer": "other",
      "size": 2556,
      "lines": 99,
      "complexity": 2,
      "dependencies": [],
      "exports": [
        "CreateDepositParams",
        "DepositResponse"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 15,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2
    },
    {
      "path": "client/src/payments/ccpayment/ccpayment-client.ts",
      "domain": "economy",
      "subdomain": "ccpayment",
      "layer": "other",
      "size": 4221,
      "lines": 145,
      "complexity": 3,
      "dependencies": [
        "axios"
      ],
      "exports": [
        "CCPaymentClient",
        "ccpaymentClient"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.1
    },
    {
      "path": "client/src/pages/shop-management/dgt-purchase.tsx",
      "domain": "economy",
      "layer": "pages",
      "size": 11170,
      "lines": 376,
      "complexity": 3,
      "dependencies": [
        "react",
        "@/hooks/useDgtPurchase",
        "@/components/payment/StripeElementsWrapper",
        "@/components/payment/PaymentForm",
        "@/hooks/use-toast",
        "wouter",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "wouter",
        "@/layout/primitives"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.1
    },
    {
      "path": "client/src/pages/admin/dgt-packages.tsx",
      "domain": "economy",
      "layer": "pages",
      "size": 19025,
      "lines": 644,
      "complexity": 3,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/hooks/use-toast",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/checkbox",
        "@/components/admin/layout/AdminPageShell"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.3
    },
    {
      "path": "client/src/components/ui/tooltip.tsx",
      "domain": "economy",
      "layer": "components",
      "size": 1140,
      "lines": 29,
      "complexity": 0,
      "dependencies": [
        "react",
        "@radix-ui/react-tooltip",
        "@/lib/utils"
      ],
      "exports": [
        "Tooltip",
        "TooltipTrigger",
        "TooltipContent",
        "TooltipProvider"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/components/ui/tooltip-utils.tsx",
      "domain": "economy",
      "layer": "components",
      "size": 2454,
      "lines": 102,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/tooltip"
      ],
      "exports": [
        "SafeTooltip",
        "ButtonTooltip"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.8999999999999999
    },
    {
      "path": "client/src/components/sidebar/wallet-summary-widget.tsx",
      "domain": "economy",
      "layer": "components",
      "size": 4958,
      "lines": 153,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/payment/StripeElementsWrapper.tsx",
      "domain": "economy",
      "subdomain": "StripeElementsWrapper.tsx",
      "layer": "components",
      "size": 2314,
      "lines": 80,
      "complexity": 1,
      "dependencies": [
        "react",
        "@stripe/stripe-js",
        "@stripe/react-stripe-js"
      ],
      "exports": [
        "StripeElementsWrapper"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/payment/PaymentForm.tsx",
      "domain": "economy",
      "subdomain": "PaymentForm.tsx",
      "layer": "components",
      "size": 4786,
      "lines": 161,
      "complexity": 2,
      "dependencies": [
        "react",
        "@stripe/react-stripe-js",
        "@/hooks/use-toast",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/checkbox",
        "@/components/ui/label",
        "@/components/ui/dialog"
      ],
      "exports": [
        "PaymentForm"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/components/header/WalletButton.tsx",
      "domain": "economy",
      "layer": "components",
      "size": 686,
      "lines": 29,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/icons/iconRenderer",
        "@/components/ui/button"
      ],
      "exports": [
        "WalletButton"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/economy/wallet-display.tsx",
      "domain": "economy",
      "layer": "components",
      "size": 4527,
      "lines": 135,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/lib/utils",
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "WalletDisplay"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "server/src/domains/economy/services/rewardService.ts",
      "domain": "economy",
      "subdomain": "services",
      "layer": "services",
      "size": 1589,
      "lines": 50,
      "complexity": 2,
      "dependencies": [
        "@server/src/core/db",
        "@schema/economy/settings",
        "drizzle-orm",
        "@server/src/core/logger"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 19,
          "context": "export async function awardXShareReward(userId: number) {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 35,
          "context": "export async function awardXReferralReward(userId: number) {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 0.6000000000000001
    },
    {
      "path": "server/src/domains/economy/services/cloutService.ts",
      "domain": "economy",
      "subdomain": "services",
      "layer": "services",
      "size": 3089,
      "lines": 97,
      "complexity": 3,
      "dependencies": [
        "@server/src/core/db",
        "@schema",
        "@schema",
        "drizzle-orm",
        "@server/src/core/logger"
      ],
      "exports": [
        "CloutService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 0.8
    },
    {
      "path": "server/src/core/repository/repositories/transaction-repository.ts",
      "domain": "economy",
      "layer": "other",
      "size": 9166,
      "lines": 351,
      "complexity": 5,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@schema",
        "@server/src/core/logger"
      ],
      "exports": [
        "TransactionRepository"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 32,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 141,
          "context": "async getTotalByUser(userId: number, type?: string): Promise<number> {",
          "suggestedFix": "UserId",
          "confidence": 1
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 179,
          "context": "async getBalanceByUser(userId: number): Promise<number> {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 272,
          "context": "async getUserStats(userId: number): Promise<{",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "ITransactionRepository"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 2.4
    },
    {
      "path": "client/src/pages/admin/wallets/index.tsx",
      "domain": "economy",
      "subdomain": "index.tsx",
      "layer": "pages",
      "size": 13592,
      "lines": 430,
      "complexity": 3,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/components/ui/button",
        "@/hooks/use-toast",
        "@/lib/formatters",
        "@/components/ui/badge",
        "@/components/ui/skeleton",
        "@/components/admin/layout/AdminPageShell",
        "@/components/admin/layout/AdminPageShell",
        "@/components/admin/common/AdminDataTable",
        "@/components/admin/layout/EntityTable",
        "@/components/admin/forms/wallets/ManualDgtAdjustmentDialog",
        "@/components/admin/wallet/mock-webhook-trigger"
      ],
      "exports": [
        "TopUser",
        "Transaction"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "TabConfig"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.1
    },
    {
      "path": "client/src/pages/admin/transactions/index.tsx",
      "domain": "economy",
      "subdomain": "index.tsx",
      "layer": "pages",
      "size": 4991,
      "lines": 168,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "date-fns",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/skeleton"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/pages/admin/config/economy.tsx",
      "domain": "economy",
      "layer": "pages",
      "size": 7506,
      "lines": 275,
      "complexity": 2,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/textarea",
        "@/components/ui/button",
        "@/components/ui/card",
        "lucide-react",
        "@/hooks/use-toast",
        "@/components/admin/layout/AdminPageShell",
        "@/components/ui/alert",
        "@/lib/queryClient"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "client/src/features/admin/services/economyConfigService.ts",
      "domain": "economy",
      "layer": "services",
      "size": 981,
      "lines": 37,
      "complexity": 1,
      "dependencies": [
        "@/lib/adminApi",
        "@tanstack/react-query"
      ],
      "exports": [
        "useEconomyConfig",
        "useUpdateEconomyConfig",
        "useResetEconomyConfig"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 1.7
    },
    {
      "path": "client/src/features/wallet/services/wallet-api.service.ts",
      "domain": "economy",
      "subdomain": "services",
      "layer": "services",
      "size": 2477,
      "lines": 119,
      "complexity": 2,
      "dependencies": [
        "@/lib/queryClient"
      ],
      "exports": [
        "WalletBalance",
        "TransactionItem",
        "WalletConfig",
        "DgtPackage",
        "WalletApiService",
        "walletApiService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 1.9
    },
    {
      "path": "client/src/components/economy/xp/XPProgressBar.tsx",
      "domain": "economy",
      "subdomain": "xp",
      "layer": "components",
      "size": 6187,
      "lines": 203,
      "complexity": 3,
      "dependencies": [
        "@/lib/utils",
        "@/components/ui/progress",
        "@/lib/utils",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "XPProgressBar"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.1
    },
    {
      "path": "client/src/components/economy/xp/XPHistoryLog.tsx",
      "domain": "economy",
      "subdomain": "xp",
      "layer": "components",
      "size": 4560,
      "lines": 150,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/lib/utils",
        "@/hooks/useXP",
        "date-fns",
        "lucide-react",
        "@/components/ui/scroll-area",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "XPHistoryLog"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": [
          "XpAdjustmentEntry"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "client/src/components/economy/xp/TitleSelector.tsx",
      "domain": "economy",
      "subdomain": "xp",
      "layer": "components",
      "size": 7666,
      "lines": 265,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/lib/utils",
        "@/hooks/useXP",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/tooltip",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "TitleSelector"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "UserTitle"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/components/economy/xp/LevelUpNotification.tsx",
      "domain": "economy",
      "subdomain": "xp",
      "layer": "components",
      "size": 7596,
      "lines": 256,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/lib/utils",
        "framer-motion",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "LevelUpNotification"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/components/economy/xp/LevelBadge.tsx",
      "domain": "economy",
      "subdomain": "xp",
      "layer": "components",
      "size": 4553,
      "lines": 166,
      "complexity": 3,
      "dependencies": [
        "react",
        "@/lib/utils",
        "lucide-react",
        "@/components/ui/tooltip"
      ],
      "exports": [
        "LevelVisualConfig",
        "LevelBadge"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.1
    },
    {
      "path": "client/src/components/economy/wallet/withdraw-button.tsx",
      "domain": "economy",
      "subdomain": "withdraw-button.tsx",
      "layer": "components",
      "size": 13658,
      "lines": 445,
      "complexity": 3,
      "dependencies": [
        "react",
        "lucide-react",
        "@tanstack/react-query",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/hooks/use-toast",
        "@/hooks/use-wallet",
        "@/features/wallet/services/wallet-api.service"
      ],
      "exports": [
        "WithdrawButtonProps",
        "WithdrawButton"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.3000000000000001
    },
    {
      "path": "client/src/components/economy/wallet/wallet-balance-display.tsx",
      "domain": "economy",
      "subdomain": "wallet-balance-display.tsx",
      "layer": "components",
      "size": 6138,
      "lines": 194,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/lib/utils",
        "@/features/wallet/services/wallet-api.service"
      ],
      "exports": [
        "WalletBalanceDisplayProps",
        "WalletBalanceDisplay"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "WalletBalance"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "client/src/components/economy/wallet/wallet-address-display.tsx",
      "domain": "economy",
      "subdomain": "wallet-address-display.tsx",
      "layer": "components",
      "size": 7639,
      "lines": 227,
      "complexity": 1,
      "dependencies": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "WalletAddressDisplayProps",
        "WalletAddressDisplay"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/economy/wallet/transaction-history.tsx",
      "domain": "economy",
      "subdomain": "transaction-history.tsx",
      "layer": "components",
      "size": 9555,
      "lines": 305,
      "complexity": 3,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/skeleton",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "@/components/ui/button",
        "@/features/wallet/services/wallet-api.service"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Transaction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.1
    },
    {
      "path": "client/src/components/economy/wallet/tip-button.tsx",
      "domain": "economy",
      "subdomain": "tip-button.tsx",
      "layer": "components",
      "size": 5150,
      "lines": 194,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/slider",
        "@/hooks/use-toast",
        "@/hooks/use-tip",
        "@/hooks/use-wallet",
        "@hookform/resolvers/zod",
        "react-hook-form",
        "lucide-react",
        "zod"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "client/src/components/economy/wallet/rain-button.tsx",
      "domain": "economy",
      "subdomain": "rain-button.tsx",
      "layer": "components",
      "size": 8070,
      "lines": 292,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/slider",
        "@/hooks/use-toast",
        "@/hooks/use-rain",
        "@/hooks/use-wallet",
        "@hookform/resolvers/zod",
        "react-hook-form",
        "zod"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.4
    },
    {
      "path": "client/src/components/economy/wallet/dgt-transfer.tsx",
      "domain": "economy",
      "subdomain": "dgt-transfer.tsx",
      "layer": "components",
      "size": 10016,
      "lines": 329,
      "complexity": 2,
      "dependencies": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/hooks/use-toast",
        "@/hooks/use-wallet"
      ],
      "exports": [
        "DgtTransfer"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.10000000000000003
    },
    {
      "path": "client/src/components/economy/wallet/deposit-button.tsx",
      "domain": "economy",
      "subdomain": "deposit-button.tsx",
      "layer": "components",
      "size": 9257,
      "lines": 288,
      "complexity": 2,
      "dependencies": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/hooks/use-toast",
        "@/hooks/use-wallet"
      ],
      "exports": [
        "DepositButtonProps",
        "DepositButton"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.10000000000000003
    },
    {
      "path": "client/src/components/economy/wallet/buy-dgt-button.tsx",
      "domain": "economy",
      "subdomain": "buy-dgt-button.tsx",
      "layer": "components",
      "size": 136,
      "lines": 7,
      "complexity": 0,
      "dependencies": [
        "react"
      ],
      "exports": [
        "BuyDgtButton"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/components/economy/wallet/animated-balance.tsx",
      "domain": "economy",
      "subdomain": "animated-balance.tsx",
      "layer": "components",
      "size": 1490,
      "lines": 64,
      "complexity": 1,
      "dependencies": [
        "react"
      ],
      "exports": [
        "AnimatedBalance"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "client/src/components/economy/wallet/WalletSheet.tsx",
      "domain": "economy",
      "subdomain": "WalletSheet.tsx",
      "layer": "components",
      "size": 19115,
      "lines": 491,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/hooks/use-wallet",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "WalletSheet"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "client/src/components/economy/wallet/TransactionSheet.tsx",
      "domain": "economy",
      "subdomain": "TransactionSheet.tsx",
      "layer": "components",
      "size": 8408,
      "lines": 228,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/components/ui/sheet",
        "@/components/ui/button",
        "lucide-react",
        "@/components/ui/scroll-area",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/hooks/use-wallet"
      ],
      "exports": [
        "TransactionSheet"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/components/economy/wallet/PackagesGrid.tsx",
      "domain": "economy",
      "subdomain": "PackagesGrid.tsx",
      "layer": "components",
      "size": 1144,
      "lines": 39,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/hooks/use-dgt-packages",
        "@/features/wallet/services/wallet-api.service",
        "lucide-react"
      ],
      "exports": [
        "PackagesGrid"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/economy/wallet/DgtPackageCard.tsx",
      "domain": "economy",
      "subdomain": "DgtPackageCard.tsx",
      "layer": "components",
      "size": 1472,
      "lines": 46,
      "complexity": 0,
      "dependencies": [
        "react",
        "@/hooks/use-dgt-packages",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "DgtPackageCard"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "DgtPackage"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/components/economy/shoutbox/enhanced-shoutbox-widget.tsx",
      "domain": "economy",
      "subdomain": "shoutbox",
      "layer": "components",
      "size": 19742,
      "lines": 698,
      "complexity": 5,
      "dependencies": [
        "react",
        "@/hooks/use-auth",
        "@tanstack/react-query",
        "react-hot-toast",
        "@/lib/utils",
        "date-fns",
        "@/lib/queryClient",
        "@db/types"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 40,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 50,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 62,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 266,
          "context": "mutationFn: async ({ userId, ignore }: { userId: number; ignore: boolean }) => {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "RoomId",
          "GroupId",
          "MessageId"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 2.9
    },
    {
      "path": "client/src/components/economy/badges/BadgeShowcase.tsx",
      "domain": "economy",
      "subdomain": "badges",
      "layer": "components",
      "size": 6430,
      "lines": 215,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/lib/utils",
        "@/hooks/useXP",
        "@/components/ui/tooltip",
        "@/components/ui/card",
        "@/components/ui/badge",
        "date-fns"
      ],
      "exports": [
        "BadgeShowcase"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "UserBadge"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/wallet/mock-webhook-trigger.tsx",
      "domain": "economy",
      "subdomain": "mock-webhook-trigger.tsx",
      "layer": "components",
      "size": 6233,
      "lines": 226,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/hooks/use-toast",
        "@tanstack/react-query",
        "@/lib/queryClient"
      ],
      "exports": [
        "MockWebhookTrigger"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.0999999999999999
    },
    {
      "path": "client/src/features/admin/components/dashboard/TippingAnalyticsCard.tsx",
      "domain": "economy",
      "layer": "components",
      "size": 11035,
      "lines": 352,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/tabs",
        "@/components/ui/skeleton",
        "date-fns",
        "@/lib/queryClient"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 65,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 72,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/components/admin/forms/wallets/ManualDgtAdjustmentDialog.tsx",
      "domain": "economy",
      "subdomain": "ManualDgtAdjustmentDialog.tsx",
      "layer": "components",
      "size": 5070,
      "lines": 178,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/hooks/use-toast"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    }
  ],
  "totalIssues": 42,
  "avgComplexity": 1.6347826086956523,
  "migrationEffort": 116.30000000000003,
  "dependencies": [
    "@degentalk/db/types",
    "@schema",
    "@db/types",
    "@db",
    "@db/types/id.types",
    "@db/schema/core/enums",
    "@shared/economy/economy.config",
    "@/hooks/use-wallet",
    "@/components/economy/wallet/wallet-balance-display",
    "@/components/economy/wallet/transaction-history",
    "@/components/economy/wallet/deposit-button",
    "@/components/economy/wallet/withdraw-button",
    "@/components/economy/wallet/buy-dgt-button",
    "@/components/economy/wallet/dgt-transfer",
    "@/hooks/use-toast",
    "@/lib/queryClient",
    "@tanstack/react-query",
    "@/features/wallet/services/wallet-api.service",
    "@/contexts/wallet-context",
    "@/types/wallet",
    "@core/logger",
    "@/hooks/useDgtPurchase",
    "@/components/payment/StripeElementsWrapper",
    "@/components/payment/PaymentForm",
    "@/components/ui/button",
    "@/components/ui/card",
    "@/components/ui/tabs",
    "@/components/ui/badge",
    "@/layout/primitives",
    "@/components/ui/input",
    "@/components/ui/textarea",
    "@/components/ui/switch",
    "@/components/ui/label",
    "@/components/ui/checkbox",
    "@/components/admin/layout/AdminPageShell",
    "@radix-ui/react-tooltip",
    "@/lib/utils",
    "@/components/ui/tooltip",
    "@stripe/stripe-js",
    "@stripe/react-stripe-js",
    "@/components/ui/dialog",
    "@/components/icons/iconRenderer",
    "@server/src/core/db",
    "@schema/economy/settings",
    "@server/src/core/logger",
    "@/lib/formatters",
    "@/components/ui/skeleton",
    "@/components/admin/common/AdminDataTable",
    "@/components/admin/layout/EntityTable",
    "@/components/admin/forms/wallets/ManualDgtAdjustmentDialog",
    "@/components/admin/wallet/mock-webhook-trigger",
    "@/components/ui/alert",
    "@/lib/adminApi",
    "@/components/ui/progress",
    "@/hooks/useXP",
    "@/components/ui/scroll-area",
    "@/components/ui/slider",
    "@/hooks/use-tip",
    "@hookform/resolvers/zod",
    "@/hooks/use-rain",
    "@/components/ui/separator",
    "@/components/ui/sheet",
    "@/hooks/use-dgt-packages",
    "@/hooks/use-auth"
  ],
  "dependents": [
    "gamification",
    "xp",
    "engagement",
    "user-management",
    "other",
    "moderation",
    "forum-core",
    "admin"
  ],
  "criticalPath": true,
  "riskAssessment": {
    "runtime": "high",
    "testing": "high",
    "integration": "high"
  },
  "migrationStrategy": {
    "priority": 1,
    "approach": "parallel",
    "estimatedDays": 24,
    "blockers": [
      "Dependencies from: gamification, xp, engagement, user-management, other, moderation, forum-core, admin"
    ],
    "prerequisites": []
  }
}
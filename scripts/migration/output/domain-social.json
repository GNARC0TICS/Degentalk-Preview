{
  "name": "social",
  "files": [
    {
      "path": "scripts/migration/fix-shoutbox-message-id.ts",
      "domain": "social",
      "layer": "other",
      "size": 1148,
      "lines": 41,
      "complexity": 1,
      "dependencies": [
        "drizzle-orm",
        "chalk"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "scripts/db/seed-dev-subscriptions.ts",
      "domain": "social",
      "layer": "other",
      "size": 5960,
      "lines": 144,
      "complexity": 2,
      "dependencies": [
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "HeatEventId"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.4
    },
    {
      "path": "server/src/cron/subscription-management.ts",
      "domain": "social",
      "layer": "other",
      "size": 3578,
      "lines": 115,
      "complexity": 4,
      "dependencies": [
        "node-cron"
      ],
      "exports": [
        "initializeSubscriptionJobs"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1.3
    },
    {
      "path": "db/schema/system/notifications.ts",
      "domain": "social",
      "layer": "other",
      "size": 1454,
      "lines": 44,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "notifications",
        "Notification",
        "InsertNotification"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/social/friends.ts",
      "domain": "social",
      "layer": "other",
      "size": 4235,
      "lines": 119,
      "complexity": 1,
      "dependencies": [],
      "exports": [
        "friendshipStatusEnum",
        "friendships",
        "userFriendPreferences",
        "friendGroups",
        "friendGroupMembers"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "db/schema/messaging/shoutboxMessages.ts",
      "domain": "social",
      "layer": "other",
      "size": 1690,
      "lines": 55,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm",
        "drizzle-zod",
        "zod"
      ],
      "exports": [
        "shoutboxMessages",
        "insertShoutboxMessageSchema",
        "ShoutboxMessage",
        "InsertShoutboxMessage"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/messaging/messages.ts",
      "domain": "social",
      "layer": "other",
      "size": 1736,
      "lines": 51,
      "complexity": 1,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "messages",
        "Message"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "db/schema/messaging/messageReads.ts",
      "domain": "social",
      "layer": "other",
      "size": 880,
      "lines": 27,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm/pg-core",
        "drizzle-orm"
      ],
      "exports": [
        "messageReads",
        "MessageRead"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/messaging/directMessages.ts",
      "domain": "social",
      "layer": "other",
      "size": 1783,
      "lines": 54,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm",
        "drizzle-zod",
        "zod"
      ],
      "exports": [
        "directMessages",
        "insertDirectMessageSchema",
        "DirectMessage",
        "InsertDirectMessage"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.1
    },
    {
      "path": "client/src/types/notifications.ts",
      "domain": "social",
      "layer": "types",
      "size": 521,
      "lines": 28,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "Notification",
        "NotificationData",
        "NotificationsParams"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 5,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 6,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.7
    },
    {
      "path": "client/src/hooks/useFriends.ts",
      "domain": "social",
      "layer": "hooks",
      "size": 2264,
      "lines": 74,
      "complexity": 2,
      "dependencies": [
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/hooks/use-auth.tsx"
      ],
      "exports": [
        "FriendUserLite",
        "useFriends"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/hooks/use-rain-notifications.ts",
      "domain": "social",
      "layer": "hooks",
      "size": 3073,
      "lines": 105,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/components/shoutbox/shoutbox-rain-notification",
        "@/hooks/use-auth"
      ],
      "exports": [
        "useRainNotifications"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1.9
    },
    {
      "path": "client/src/hooks/use-notifications.ts",
      "domain": "social",
      "layer": "hooks",
      "size": 1186,
      "lines": 44,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/hooks/use-toast",
        "@/types/notifications",
        "@/core/api"
      ],
      "exports": [
        "useNotifications"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Notification"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/hooks/use-messages.tsx",
      "domain": "social",
      "layer": "hooks",
      "size": 3836,
      "lines": 158,
      "complexity": 2,
      "dependencies": [
        "@tanstack/react-query"
      ],
      "exports": [
        "Message",
        "Conversation",
        "SendMessagePayload",
        "useMessages"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 4,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 3
    },
    {
      "path": "server/src/domains/social/whale-watch.service.ts",
      "domain": "social",
      "subdomain": "whale-watch.service.ts",
      "layer": "other",
      "size": 8150,
      "lines": 308,
      "complexity": 4,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "FollowUser",
        "FollowCounts",
        "WhaleWatchService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.1
    },
    {
      "path": "server/src/domains/social/whale-watch.routes.ts",
      "domain": "social",
      "subdomain": "whale-watch.routes.ts",
      "layer": "routes",
      "size": 6292,
      "lines": 231,
      "complexity": 5,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod",
        "@server/src/core/logger"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.2
    },
    {
      "path": "server/src/domains/social/social.routes.ts",
      "domain": "social",
      "subdomain": "social.routes.ts",
      "layer": "routes",
      "size": 389,
      "lines": 14,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [
        "router as socialRoutes "
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/social/relationships.routes.ts",
      "domain": "social",
      "subdomain": "relationships.routes.ts",
      "layer": "routes",
      "size": 6662,
      "lines": 235,
      "complexity": 4,
      "dependencies": [
        "express",
        "express",
        "@db",
        "@schema",
        "drizzle-orm",
        "@server/src/utils/auth"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "server/src/domains/social/mentions.types.ts",
      "domain": "social",
      "subdomain": "mentions.types.ts",
      "layer": "other",
      "size": 1086,
      "lines": 52,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "MentionType",
        "MentionRecord",
        "UserMentionPreferences",
        "MentionUser",
        "ProcessMentionsRequest"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 4,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 20,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "server/src/domains/social/mentions.service.ts",
      "domain": "social",
      "subdomain": "mentions.service.ts",
      "layer": "other",
      "size": 7638,
      "lines": 296,
      "complexity": 5,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "MentionsService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "MentionType"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.2
    },
    {
      "path": "server/src/domains/social/mentions.routes.ts",
      "domain": "social",
      "subdomain": "mentions.routes.ts",
      "layer": "routes",
      "size": 4290,
      "lines": 148,
      "complexity": 3,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod"
      ],
      "exports": [
        "router as mentionsRoutes "
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.6000000000000001
    },
    {
      "path": "server/src/domains/social/friends.service.ts",
      "domain": "social",
      "subdomain": "friends.service.ts",
      "layer": "other",
      "size": 13446,
      "lines": 522,
      "complexity": 6,
      "dependencies": [
        "@db",
        "drizzle-orm",
        "@/db/types"
      ],
      "exports": [
        "FriendsService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "RequestId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.2
    },
    {
      "path": "server/src/domains/social/friends.routes.ts",
      "domain": "social",
      "subdomain": "friends.routes.ts",
      "layer": "routes",
      "size": 9697,
      "lines": 334,
      "complexity": 7,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod"
      ],
      "exports": [
        "router as friendsRoutes "
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.6000000000000001
    },
    {
      "path": "server/src/domains/social/follows.types.ts",
      "domain": "social",
      "subdomain": "follows.types.ts",
      "layer": "other",
      "size": 1901,
      "lines": 93,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "FollowNotificationSettings",
        "UserStats",
        "FollowUser",
        "FollowRelationship",
        "FollowRequest",
        "FollowCounts",
        "FollowPreferences",
        "WhaleActivity",
        "FollowingActivityFeed"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 36,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 46,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.7
    },
    {
      "path": "server/src/domains/social/follows.service.ts",
      "domain": "social",
      "subdomain": "follows.service.ts",
      "layer": "other",
      "size": 10585,
      "lines": 418,
      "complexity": 5,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@/db/types"
      ],
      "exports": [
        "FollowsService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "FollowNotificationSettings",
          "UserStats"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.2
    },
    {
      "path": "server/src/domains/social/follows.routes.ts",
      "domain": "social",
      "subdomain": "follows.routes.ts",
      "layer": "routes",
      "size": 9852,
      "lines": 354,
      "complexity": 7,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod"
      ],
      "exports": [
        "router as followsRoutes "
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.6000000000000001
    },
    {
      "path": "client/src/components/social/FriendsManager.tsx",
      "domain": "social",
      "layer": "components",
      "size": 23999,
      "lines": 795,
      "complexity": 3,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/components/ui/skeleton",
        "date-fns",
        "wouter",
        "@/lib/utils",
        "@/hooks/use-toast",
        "@db/types"
      ],
      "exports": [
        "FriendsManager"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 55,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 66,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "RequestId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 4.3
    },
    {
      "path": "client/src/components/ui/enhanced-notifications.tsx",
      "domain": "social",
      "layer": "components",
      "size": 11035,
      "lines": 424,
      "complexity": 1,
      "dependencies": [
        "react",
        "framer-motion",
        "framer-motion",
        "@/lib/utils",
        "@/hooks/useMediaQuery"
      ],
      "exports": [
        "NotificationType",
        "NotificationData",
        "useNotifications",
        "NotificationProvider",
        "useNotificationHelpers"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "PanInfo"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 1.7
    },
    {
      "path": "client/src/components/shoutbox/shoutbox-rain-notification.tsx",
      "domain": "social",
      "layer": "components",
      "size": 4133,
      "lines": 142,
      "complexity": 1,
      "dependencies": [
        "react",
        "framer-motion",
        "lucide-react",
        "@/components/ui/card"
      ],
      "exports": [
        "RainNotificationProps",
        "ShoutboxRainNotification",
        "RainNotification",
        "RainNotifications"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/shoutbox/shoutbox-message-styles.tsx",
      "domain": "social",
      "layer": "components",
      "size": 3780,
      "lines": 133,
      "complexity": 2,
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "ShoutboxMessageStyleProps",
        "StyledShoutboxMessage",
        "detectMessageType"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/components/preferences/notification-preferences.tsx",
      "domain": "social",
      "layer": "components",
      "size": 4965,
      "lines": 158,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/types/compat/user",
        "@/components/ui/button",
        "@/hooks/preferences/useUserSettings",
        "@/hooks/preferences/useUpdateUserSettings"
      ],
      "exports": [
        "NotificationPreferences"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "User"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/notifications/NotificationPanel.tsx",
      "domain": "social",
      "subdomain": "NotificationPanel.tsx",
      "layer": "components",
      "size": 3406,
      "lines": 117,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/ui/scroll-area",
        "@/lib/utils",
        "date-fns",
        "@/hooks/use-notifications"
      ],
      "exports": [
        "NotificationPanel"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/messages/WhispersInbox.tsx",
      "domain": "social",
      "subdomain": "WhispersInbox.tsx",
      "layer": "components",
      "size": 12899,
      "lines": 393,
      "complexity": 3,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/ui/avatar",
        "@/components/ui/scroll-area",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/hooks/use-messages",
        "@/hooks/use-async-button",
        "@/lib/utils",
        "lucide-react",
        "@/hooks/use-toast",
        "@tanstack/react-query"
      ],
      "exports": [
        "WhispersInbox"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1.1
    },
    {
      "path": "client/src/components/messages/WhisperModal.tsx",
      "domain": "social",
      "subdomain": "WhisperModal.tsx",
      "layer": "components",
      "size": 7549,
      "lines": 256,
      "complexity": 3,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/avatar",
        "@/hooks/use-messages",
        "@/hooks/use-async-button",
        "lucide-react",
        "@tanstack/react-query",
        "@/hooks/use-toast",
        "@/lib/utils"
      ],
      "exports": [
        "WhisperModal"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1.1
    },
    {
      "path": "client/src/components/messages/WhisperButton.tsx",
      "domain": "social",
      "subdomain": "WhisperButton.tsx",
      "layer": "components",
      "size": 1991,
      "lines": 76,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/ui/button",
        "@/components/messages/icons/MessageSquareWave",
        "@/components/ui/badge",
        "@/hooks/use-messages",
        "@tanstack/react-query"
      ],
      "exports": [
        "WhisperButton"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "ButtonProps"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/header/NotificationButton.tsx",
      "domain": "social",
      "layer": "components",
      "size": 2571,
      "lines": 101,
      "complexity": 1,
      "dependencies": [
        "react",
        "framer-motion",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/popover",
        "@/components/notifications/NotificationPanel",
        "@/components/icons/iconRenderer"
      ],
      "exports": [
        "NotificationButton"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/messages/icons/MessageSquareWave.tsx",
      "domain": "social",
      "subdomain": "icons",
      "layer": "components",
      "size": 721,
      "lines": 31,
      "complexity": 0,
      "dependencies": [
        "react"
      ],
      "exports": [
        "MessageSquareWave"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    }
  ],
  "totalIssues": 9,
  "avgComplexity": 2.135135135135135,
  "migrationEffort": 37.10000000000001,
  "dependencies": [
    "@db/types",
    "@tanstack/react-query",
    "@/lib/queryClient",
    "@/hooks/use-auth.tsx",
    "@/components/shoutbox/shoutbox-rain-notification",
    "@/hooks/use-auth",
    "@/hooks/use-toast",
    "@/types/notifications",
    "@/core/api",
    "@db",
    "@schema",
    "@server/src/core/services/user.service",
    "@server/src/core/logger",
    "@server/src/utils/auth",
    "@/db/types",
    "@/components/ui/card",
    "@/components/ui/button",
    "@/components/ui/input",
    "@/components/ui/textarea",
    "@/components/ui/badge",
    "@/components/ui/avatar",
    "@/components/ui/tabs",
    "@/components/ui/scroll-area",
    "@/components/ui/skeleton",
    "@/lib/utils",
    "@/hooks/useMediaQuery",
    "@/types/compat/user",
    "@/hooks/preferences/useUserSettings",
    "@/hooks/preferences/useUpdateUserSettings",
    "@/hooks/use-notifications",
    "@/hooks/use-messages",
    "@/hooks/use-async-button",
    "@/components/messages/icons/MessageSquareWave",
    "@/components/ui/popover",
    "@/components/notifications/NotificationPanel",
    "@/components/icons/iconRenderer"
  ],
  "dependents": [
    "other",
    "moderation",
    "user-management",
    "admin"
  ],
  "criticalPath": true,
  "riskAssessment": {
    "runtime": "medium",
    "testing": "low",
    "integration": "high"
  },
  "migrationStrategy": {
    "priority": 2,
    "approach": "atomic",
    "estimatedDays": 8,
    "blockers": [
      "Dependencies from: other, moderation, user-management, admin"
    ],
    "prerequisites": []
  }
}
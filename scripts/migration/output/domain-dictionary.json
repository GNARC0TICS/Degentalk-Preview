{
  "name": "dictionary",
  "files": [
    {
      "path": "server/src/domains/dictionary/dictionary.service.ts",
      "domain": "dictionary",
      "subdomain": "dictionary.service.ts",
      "layer": "other",
      "size": 5304,
      "lines": 197,
      "complexity": 4,
      "dependencies": [
        "@db",
        "drizzle-orm",
        "@schema",
        "slugify",
        "@/db/types"
      ],
      "exports": [
        "DictionaryStatus",
        "DictionaryService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "EntryId"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 1.7999999999999998
    },
    {
      "path": "server/src/domains/dictionary/dictionary.routes.ts",
      "domain": "dictionary",
      "subdomain": "dictionary.routes.ts",
      "layer": "routes",
      "size": 3130,
      "lines": 101,
      "complexity": 3,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@schema",
        "express-rate-limit"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "conversion",
          "pattern": "Number(req.params.id)",
          "line": 75,
          "context": "Number(req.params.id),",
          "suggestedFix": "remove Number(), use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "Number(req.params.id)",
          "line": 90,
          "context": "Number(req.params.id),",
          "suggestedFix": "remove Number(), use branded type",
          "confidence": 0.5
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7999999999999998
    }
  ],
  "totalIssues": 2,
  "avgComplexity": 3.5,
  "migrationEffort": 3.5999999999999996,
  "dependencies": [
    "@db",
    "@schema",
    "@/db/types",
    "@server/src/core/services/user.service"
  ],
  "dependents": [
    "other",
    "moderation"
  ],
  "criticalPath": false,
  "riskAssessment": {
    "runtime": "medium",
    "testing": "low",
    "integration": "medium"
  },
  "migrationStrategy": {
    "priority": 3,
    "approach": "atomic",
    "estimatedDays": 1,
    "blockers": [
      "Dependencies from: other, moderation"
    ],
    "prerequisites": []
  }
}
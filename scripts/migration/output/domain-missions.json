{
  "name": "missions",
  "files": [
    {
      "path": "server/src/domains/missions/missions.service.ts",
      "domain": "missions",
      "subdomain": "missions.service.ts",
      "layer": "other",
      "size": 15752,
      "lines": 637,
      "complexity": 10,
      "dependencies": [
        "@db",
        "drizzle-orm",
        "date-fns"
      ],
      "exports": [
        "MissionsService",
        "missionsService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 73,
          "context": "async getMission(id: number): Promise<Mission | null> {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 124,
          "context": "async updateMission(id: number, data: Partial<Mission>): Promise<Mission | null> {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 15,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 142,
          "context": "userId: number",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 189,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 426,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 4.8
    },
    {
      "path": "server/src/domains/missions/missions.routes.ts",
      "domain": "missions",
      "subdomain": "missions.routes.ts",
      "layer": "routes",
      "size": 1239,
      "lines": 26,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/missions/missions.controller.ts",
      "domain": "missions",
      "subdomain": "missions.controller.ts",
      "layer": "controllers",
      "size": 6249,
      "lines": 234,
      "complexity": 6,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express"
      ],
      "exports": [
        "getAllMissions",
        "getActiveMissions",
        "getUserMissionProgress",
        "getUserMissionProgressById",
        "createMission",
        "updateMission",
        "claimMissionReward",
        "initializeDefaultMissions",
        "resetDailyMissions",
        "resetWeeklyMissions"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7000000000000002
    },
    {
      "path": "server/src/domains/missions/missions.admin.routes.ts",
      "domain": "missions",
      "subdomain": "missions.admin.routes.ts",
      "layer": "routes",
      "size": 1338,
      "lines": 40,
      "complexity": 0,
      "dependencies": [
        "express",
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/missions/missions.admin.controller.ts",
      "domain": "missions",
      "subdomain": "missions.admin.controller.ts",
      "layer": "controllers",
      "size": 1702,
      "lines": 54,
      "complexity": 2,
      "dependencies": [
        "express"
      ],
      "exports": [
        "getMissionAuditLog"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.4
    }
  ],
  "totalIssues": 6,
  "avgComplexity": 3.6,
  "migrationEffort": 7.9,
  "dependencies": [
    "@db",
    "@server/src/core/services/user.service"
  ],
  "dependents": [
    "cosmetics"
  ],
  "criticalPath": false,
  "riskAssessment": {
    "runtime": "high",
    "testing": "low",
    "integration": "low"
  },
  "migrationStrategy": {
    "priority": 3,
    "approach": "atomic",
    "estimatedDays": 2,
    "blockers": [
      "Dependencies from: cosmetics"
    ],
    "prerequisites": []
  }
}
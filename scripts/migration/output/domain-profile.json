{
  "name": "profile",
  "files": [
    {
      "path": "server/src/domains/profile/social-actions.service.ts",
      "domain": "profile",
      "subdomain": "social-actions.service.ts",
      "layer": "other",
      "size": 10865,
      "lines": 458,
      "complexity": 6,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "RelationshipType",
        "RelationshipStatus",
        "SocialActionResult",
        "SocialActionsService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.2
    },
    {
      "path": "server/src/domains/profile/social-actions.routes.ts",
      "domain": "profile",
      "subdomain": "social-actions.routes.ts",
      "layer": "routes",
      "size": 3416,
      "lines": 107,
      "complexity": 1,
      "dependencies": [
        "express"
      ],
      "exports": [
        "router as socialActionsRoutes "
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "server/src/domains/profile/social-actions.controller.ts",
      "domain": "profile",
      "subdomain": "social-actions.controller.ts",
      "layer": "controllers",
      "size": 6408,
      "lines": 259,
      "complexity": 5,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod"
      ],
      "exports": [
        "SocialActionsController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1
    },
    {
      "path": "server/src/domains/profile/signature.service.ts",
      "domain": "profile",
      "subdomain": "signature.service.ts",
      "layer": "other",
      "size": 6339,
      "lines": 228,
      "complexity": 4,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@shared/signature/SignatureTierConfig",
        "@/db/types"
      ],
      "exports": [
        "SignatureService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 14,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 22,
          "context": "static async getUserSignature(userId: number) {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 118,
          "context": "static async getUserSignatureItems(userId: number) {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 130,
          "context": "static async purchaseSignatureItem(userId: number, itemId: ItemId) {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 198,
          "context": "static async activateSignatureItem(userId: number, itemId: ItemId) {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "ItemId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.3
    },
    {
      "path": "server/src/domains/profile/signature.routes.ts",
      "domain": "profile",
      "subdomain": "signature.routes.ts",
      "layer": "routes",
      "size": 5154,
      "lines": 195,
      "complexity": 4,
      "dependencies": [
        "express",
        "express",
        "zod",
        "@server/src/utils/auth"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1
    },
    {
      "path": "server/src/domains/profile/referrals.service.ts",
      "domain": "profile",
      "subdomain": "referrals.service.ts",
      "layer": "other",
      "size": 1448,
      "lines": 63,
      "complexity": 2,
      "dependencies": [
        "drizzle-orm",
        "@schema/user/users"
      ],
      "exports": [
        "referralsService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 15,
          "context": "export async function getUserReferrals(userId: number) {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 42,
          "context": "export async function getUserReferralLink(userId: number) {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.6000000000000001
    },
    {
      "path": "server/src/domains/profile/profile.service.ts",
      "domain": "profile",
      "subdomain": "profile.service.ts",
      "layer": "other",
      "size": 9093,
      "lines": 271,
      "complexity": 4,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@server/src/core/logger"
      ],
      "exports": [
        "PROFILE_UPDATED_EVENT",
        "ProfileMediaUpdateParams",
        "profileService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 18,
          "context": "userId: number; // User ID is a number in the database",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 27,
          "context": "export async function getUserProfile(userId: number) {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2
    },
    {
      "path": "server/src/domains/profile/profile.routes.ts",
      "domain": "profile",
      "subdomain": "profile.routes.ts",
      "layer": "routes",
      "size": 6744,
      "lines": 227,
      "complexity": 3,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "express",
        "@db",
        "drizzle-orm"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.6000000000000001
    },
    {
      "path": "server/src/domains/profile/profile-stats.service.ts",
      "domain": "profile",
      "subdomain": "profile-stats.service.ts",
      "layer": "other",
      "size": 9773,
      "lines": 380,
      "complexity": 3,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "ExtendedProfileStats",
        "ProfileStatsService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.6000000000000001
    },
    {
      "path": "server/src/domains/profile/profile-stats.routes.ts",
      "domain": "profile",
      "subdomain": "profile-stats.routes.ts",
      "layer": "routes",
      "size": 2407,
      "lines": 71,
      "complexity": 1,
      "dependencies": [
        "express"
      ],
      "exports": [
        "router as profileStatsRoutes",
        "analyticsRouter"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "server/src/domains/profile/profile-stats.controller.ts",
      "domain": "profile",
      "subdomain": "profile-stats.controller.ts",
      "layer": "controllers",
      "size": 6331,
      "lines": 214,
      "complexity": 5,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod"
      ],
      "exports": [
        "ProfileStatsController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.2
    }
  ],
  "totalIssues": 9,
  "avgComplexity": 3.4545454545454546,
  "migrationEffort": 11.399999999999999,
  "dependencies": [
    "@server/src/core/services/user.service",
    "@db",
    "@schema",
    "@shared/signature/SignatureTierConfig",
    "@/db/types",
    "@server/src/utils/auth",
    "@schema/user/users",
    "@server/src/core/logger"
  ],
  "dependents": [
    "user-management",
    "other",
    "forum-core"
  ],
  "criticalPath": false,
  "riskAssessment": {
    "runtime": "medium",
    "testing": "low",
    "integration": "medium"
  },
  "migrationStrategy": {
    "priority": 3,
    "approach": "atomic",
    "estimatedDays": 3,
    "blockers": [
      "Dependencies from: user-management, other, forum-core"
    ],
    "prerequisites": []
  }
}
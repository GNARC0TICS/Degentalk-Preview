{
  "name": "preferences",
  "files": [
    {
      "path": "server/src/domains/preferences/preferences.validators.ts",
      "domain": "preferences",
      "subdomain": "preferences.validators.ts",
      "layer": "other",
      "size": 2769,
      "lines": 74,
      "complexity": 0,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "profileSettingsSchema",
        "accountSettingsSchema",
        "notificationSettingsSchema",
        "passwordChangeSchema",
        "ProfileSettingsInput",
        "AccountSettingsInput",
        "NotificationSettingsInput",
        "PasswordChangeInput",
        "displayPreferencesSchema",
        "DisplayPreferencesInput"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1
    },
    {
      "path": "server/src/domains/preferences/preferences.service.ts",
      "domain": "preferences",
      "subdomain": "preferences.service.ts",
      "layer": "other",
      "size": 11581,
      "lines": 450,
      "complexity": 5,
      "dependencies": [
        "@db",
        "drizzle-orm",
        "bcrypt"
      ],
      "exports": [
        "getAllPreferences",
        "updateProfilePreferences",
        "updateAccountPreferences",
        "updateNotificationPreferences",
        "updateDisplayPreferences",
        "changePassword",
        "createDefaultPreferences"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 28,
          "context": "export const getAllPreferences = async (userId: number) => {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 84,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 141,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 215,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 281,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 344,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 390,
          "context": "export const createDefaultPreferences = async (userId: number) => {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "ProfileSettingsInput",
          "AccountSettingsInput",
          "NotificationSettingsInput",
          "PasswordChangeInput",
          "DisplayPreferencesInput"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7000000000000002
    },
    {
      "path": "server/src/domains/preferences/preferences.routes.ts",
      "domain": "preferences",
      "subdomain": "preferences.routes.ts",
      "layer": "routes",
      "size": 15535,
      "lines": 503,
      "complexity": 10,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "express",
        "express",
        "@db",
        "@schema",
        "drizzle-orm",
        "drizzle-orm",
        "zod",
        "ws",
        "@server/src/utils/auth"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 3
    }
  ],
  "totalIssues": 7,
  "avgComplexity": 5,
  "migrationEffort": 5.7,
  "dependencies": [
    "@db",
    "@server/src/core/services/user.service",
    "@schema",
    "@server/src/utils/auth"
  ],
  "dependents": [
    "other",
    "user-management",
    "social"
  ],
  "criticalPath": false,
  "riskAssessment": {
    "runtime": "medium",
    "testing": "low",
    "integration": "medium"
  },
  "migrationStrategy": {
    "priority": 3,
    "approach": "atomic",
    "estimatedDays": 2,
    "blockers": [
      "Dependencies from: other, user-management, social"
    ],
    "prerequisites": []
  }
}
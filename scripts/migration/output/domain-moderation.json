{
  "name": "moderation",
  "files": [
    {
      "path": "shared/validators/admin.ts",
      "domain": "moderation",
      "layer": "other",
      "size": 4711,
      "lines": 172,
      "complexity": 1,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "AdminPaginationQuery",
        "AdminUserUpdateSchema",
        "AdminCategoryUpdateSchema",
        "AdminThreadPrefixUpdateSchema",
        "AdminFeatureFlagUpdateSchema",
        "AdminUserBody",
        "AdminUserGroupBody",
        "AdminPaginatedResponse",
        "ToggleFeatureFlagSchema",
        "RoleCreateInput",
        "RoleUpdateInput",
        "BulkUserRoleAssignment",
        "TitleCreateInput",
        "PermissionUpdateInput",
        "XpActionCreateSchema",
        "XpActionCreateInput",
        "XpActionUpdateSchema",
        "XpActionUpdateInput",
        "PermissionGroupCreateSchema",
        "PermissionGroupCreateInput"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "shared/lib/admin-module-registry.ts",
      "domain": "moderation",
      "layer": "utils",
      "size": 7861,
      "lines": 316,
      "complexity": 5,
      "dependencies": [],
      "exports": [
        "ModuleRegistryOptions",
        "AdminModuleRegistry",
        "adminModuleRegistry"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "shared/config/admin.config.ts",
      "domain": "moderation",
      "layer": "other",
      "size": 15231,
      "lines": 604,
      "complexity": 4,
      "dependencies": [
        "react",
        "react"
      ],
      "exports": [
        "ModuleSettings",
        "AdminModule",
        "AdminConfig",
        "ADMIN_PERMISSIONS",
        "AdminPermission",
        "adminConfig",
        "getAdminModuleById",
        "getAllAdminModules",
        "AdminModuleV2",
        "adminModulesV2",
        "generateSidebarLinks",
        "generateAdminRouteGroups",
        "permissionToModuleMap"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "ComponentType",
          "LazyExoticComponent"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.3
    },
    {
      "path": "scripts/refactor/rbac-codemod.ts",
      "domain": "moderation",
      "layer": "other",
      "size": 2902,
      "lines": 77,
      "complexity": 2,
      "dependencies": [
        "@db/types",
        "ts-morph",
        "fast-glob",
        "fs",
        "path"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "AdminId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "scripts/refactor/fix-broken-admin-imports.ts",
      "domain": "moderation",
      "layer": "other",
      "size": 8068,
      "lines": 131,
      "complexity": 2,
      "dependencies": [
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "HeatEventId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "scripts/refactor/fix-admin-double-layout.ts",
      "domain": "moderation",
      "layer": "other",
      "size": 2787,
      "lines": 88,
      "complexity": 2,
      "dependencies": [
        "fs/promises",
        "path",
        "glob"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "scripts/admin/validate-admin-controllers.ts",
      "domain": "moderation",
      "subdomain": "validate-admin-controllers.ts",
      "layer": "other",
      "size": 5819,
      "lines": 190,
      "complexity": 4,
      "dependencies": [
        "@db/types",
        "fs",
        "path"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "AdminId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "scripts/admin/query-performance-audit.ts",
      "domain": "moderation",
      "subdomain": "query-performance-audit.ts",
      "layer": "other",
      "size": 13660,
      "lines": 370,
      "complexity": 3,
      "dependencies": [
        "@db/types",
        "fs",
        "path"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "AdminId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.6000000000000001
    },
    {
      "path": "lib/moderation/applyModerationAction.ts",
      "domain": "moderation",
      "subdomain": "applyModerationAction.ts",
      "layer": "other",
      "size": 1464,
      "lines": 64,
      "complexity": 1,
      "dependencies": [
        "@server/src/lib/db",
        "drizzle-orm",
        "@schema"
      ],
      "exports": [
        "VisibilityStatus"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "tests/e2e/reports/test-analytics-reporter.ts",
      "domain": "moderation",
      "subdomain": "test-analytics-reporter.ts",
      "layer": "other",
      "size": 21984,
      "lines": 709,
      "complexity": 10,
      "dependencies": [
        "@playwright/test/reporter",
        "fs",
        "path"
      ],
      "exports": [
        "TestAnalytics",
        "UserJourneyMetric",
        "CrossDomainMetric",
        "PerformanceMetric",
        "ValidationResult",
        "ConsistencyResult",
        "IntegrityResult",
        "FailurePattern",
        "TestAnalyticsReporter"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 3.5
    },
    {
      "path": "shared/lib/moderation/applyModerationAction.ts",
      "domain": "moderation",
      "subdomain": "applyModerationAction.ts",
      "layer": "utils",
      "size": 1567,
      "lines": 66,
      "complexity": 1,
      "dependencies": [
        "@db/types",
        "@server/src/lib/db",
        "drizzle-orm",
        "@schema",
        "@/db/types"
      ],
      "exports": [
        "VisibilityStatus"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "AdminId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "db/schema/admin/uiThemes.ts",
      "domain": "moderation",
      "subdomain": "uiThemes.ts",
      "layer": "other",
      "size": 2321,
      "lines": 74,
      "complexity": 2,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "uiThemes",
        "UiTheme",
        "NewUiTheme"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.4
    },
    {
      "path": "db/schema/admin/uiConfig.ts",
      "domain": "moderation",
      "subdomain": "uiConfig.ts",
      "layer": "other",
      "size": 4559,
      "lines": 124,
      "complexity": 1,
      "dependencies": [
        "drizzle-orm/pg-core"
      ],
      "exports": [
        "uiQuotes",
        "uiCollections",
        "uiCollectionQuotes",
        "uiAnalytics",
        "UiQuote",
        "NewUiQuote",
        "UiCollection",
        "NewUiCollection",
        "UiCollectionQuote",
        "NewUiCollectionQuote",
        "UiAnalytic",
        "NewUiAnalytic"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "db/schema/admin/themes.ts",
      "domain": "moderation",
      "subdomain": "themes.ts",
      "layer": "other",
      "size": 957,
      "lines": 32,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "adminThemes",
        "AdminTheme"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/admin/templates.ts",
      "domain": "moderation",
      "subdomain": "templates.ts",
      "layer": "other",
      "size": 1034,
      "lines": 23,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm/pg-core",
        "drizzle-orm"
      ],
      "exports": [
        "siteTemplates",
        "SiteTemplate"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/admin/shoutboxConfig.ts",
      "domain": "moderation",
      "subdomain": "shoutboxConfig.ts",
      "layer": "other",
      "size": 9528,
      "lines": 263,
      "complexity": 1,
      "dependencies": [
        "@paralleldrive/cuid2",
        "drizzle-orm"
      ],
      "exports": [
        "shoutboxConfig",
        "shoutboxBannedWords",
        "shoutboxUserIgnores",
        "shoutboxEmojiPermissions",
        "shoutboxAnalytics",
        "ShoutboxConfig",
        "NewShoutboxConfig",
        "ShoutboxBannedWord",
        "ShoutboxUserIgnore",
        "ShoutboxEmojiPermission",
        "ShoutboxAnalyticsEvent"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "db/schema/admin/seoMetadata.ts",
      "domain": "moderation",
      "subdomain": "seoMetadata.ts",
      "layer": "other",
      "size": 1012,
      "lines": 22,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm/pg-core",
        "drizzle-orm"
      ],
      "exports": [
        "seoMetadata",
        "SeoMetadata"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/admin/scheduledTasks.ts",
      "domain": "moderation",
      "subdomain": "scheduledTasks.ts",
      "layer": "other",
      "size": 1300,
      "lines": 35,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "scheduledTasks",
        "ScheduledTask"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/admin/reports.ts",
      "domain": "moderation",
      "subdomain": "reports.ts",
      "layer": "other",
      "size": 1232,
      "lines": 25,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm/pg-core",
        "drizzle-orm"
      ],
      "exports": [
        "reportedContent",
        "ReportedContent"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/admin/moderator-notes.ts",
      "domain": "moderation",
      "subdomain": "moderator-notes.ts",
      "layer": "other",
      "size": 1097,
      "lines": 37,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm/pg-core"
      ],
      "exports": [
        "moderatorNoteTypeEnum",
        "moderatorNotes",
        "selectModeratorNoteSchema",
        "insertModeratorNoteSchema"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/admin/moderationActions.ts",
      "domain": "moderation",
      "subdomain": "moderationActions.ts",
      "layer": "other",
      "size": 1119,
      "lines": 31,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "contentModerationActions",
        "ContentModerationAction"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "db/schema/admin/mediaLibrary.ts",
      "domain": "moderation",
      "subdomain": "mediaLibrary.ts",
      "layer": "other",
      "size": 1908,
      "lines": 50,
      "complexity": 1,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "mediaLibrary",
        "MediaLibrary"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "db/schema/admin/featureFlags.ts",
      "domain": "moderation",
      "subdomain": "featureFlags.ts",
      "layer": "other",
      "size": 1771,
      "lines": 41,
      "complexity": 1,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "featureFlags",
        "FeatureFlag"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "db/schema/admin/emailTemplates.ts",
      "domain": "moderation",
      "subdomain": "emailTemplates.ts",
      "layer": "other",
      "size": 3410,
      "lines": 95,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "emailTemplates",
        "emailTemplateVersions",
        "emailTemplateLogs",
        "EmailTemplate",
        "NewEmailTemplate",
        "EmailTemplateVersion",
        "EmailTemplateLog"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/admin/brandConfig.ts",
      "domain": "moderation",
      "subdomain": "brandConfig.ts",
      "layer": "other",
      "size": 1600,
      "lines": 46,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm/pg-core"
      ],
      "exports": [
        "brandConfigurations",
        "BrandConfiguration",
        "NewBrandConfiguration"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/admin/backups.ts",
      "domain": "moderation",
      "subdomain": "backups.ts",
      "layer": "other",
      "size": 10424,
      "lines": 245,
      "complexity": 1,
      "dependencies": [],
      "exports": [
        "adminBackups",
        "backupSchedules",
        "restoreOperations",
        "backupSettings",
        "AdminBackup",
        "NewAdminBackup",
        "BackupSchedule",
        "NewBackupSchedule",
        "RestoreOperation",
        "NewRestoreOperation",
        "BackupSettings",
        "NewBackupSettings"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "db/schema/admin/auditLogs.ts",
      "domain": "moderation",
      "subdomain": "auditLogs.ts",
      "layer": "other",
      "size": 1570,
      "lines": 42,
      "complexity": 1,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "auditLogs",
        "AuditLog"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "db/schema/admin/announcements.ts",
      "domain": "moderation",
      "subdomain": "announcements.ts",
      "layer": "other",
      "size": 2047,
      "lines": 59,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm",
        "drizzle-zod",
        "zod"
      ],
      "exports": [
        "announcements",
        "insertAnnouncementSchema",
        "Announcement",
        "InsertAnnouncement"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "client/src/types/admin.types.ts",
      "domain": "moderation",
      "layer": "types",
      "size": 3786,
      "lines": 189,
      "complexity": 1,
      "dependencies": [],
      "exports": [
        "User",
        "UserFormData",
        "Role",
        "Permission",
        "EconomyConfig",
        "LevelData",
        "LevelUnlocks",
        "Achievement",
        "AchievementRequirement",
        "AchievementReward",
        "AdminApiResponse",
        "AdminModule",
        "ModuleSettings",
        "BulkOperationRequest",
        "BulkOperationResult",
        "AdminActivityLog"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 82,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 2.8
    },
    {
      "path": "client/src/lib/roles.ts",
      "domain": "moderation",
      "layer": "utils",
      "size": 1608,
      "lines": 59,
      "complexity": 1,
      "dependencies": [],
      "exports": [
        "Role",
        "roleHierarchy",
        "hasRoleAtLeast",
        "isRole",
        "canModerateShoutbox",
        "canAccessAdminPanel",
        "isAdmin",
        "isSuperAdmin",
        "isModerator",
        "isAdminOrModerator",
        "getUserPermissions",
        "hasRoleOrHigher"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "client/src/lib/adminApi.ts",
      "domain": "moderation",
      "layer": "utils",
      "size": 1185,
      "lines": 42,
      "complexity": 1,
      "dependencies": [],
      "exports": [
        "AdminApi",
        "adminApi"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "client/src/lib/admin-vault-service.ts",
      "domain": "moderation",
      "layer": "utils",
      "size": 7988,
      "lines": 295,
      "complexity": 7,
      "dependencies": [],
      "exports": [
        "MockVaultAdminService",
        "vaultAdminService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "ItemCategory",
          "ItemRarity",
          "UnlockMethod",
          "SeasonType",
          "VaultEvent",
          "AdminActionLog",
          "ItemHistory",
          "VaultAdminService"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9000000000000001
    },
    {
      "path": "client/src/lib/admin-utils.ts",
      "domain": "moderation",
      "layer": "utils",
      "size": 2154,
      "lines": 93,
      "complexity": 1,
      "dependencies": [
        "@shared/config/admin.config"
      ],
      "exports": [
        "AdminStatusType",
        "StatusPalette",
        "getStatusPalette",
        "getModuleStatus",
        "getModuleStatusInfo"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "AdminModule"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/lib/admin-route.tsx",
      "domain": "moderation",
      "layer": "utils",
      "size": 1747,
      "lines": 56,
      "complexity": 2,
      "dependencies": [
        "wouter",
        "@/hooks/use-auth",
        "lucide-react"
      ],
      "exports": [
        "AdminRoute"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "client/src/hooks/use-purchase-modal.tsx",
      "domain": "moderation",
      "layer": "hooks",
      "size": 3748,
      "lines": 145,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/lib/queryClient",
        "@/hooks/use-auth"
      ],
      "exports": [
        "PurchaseModalProvider",
        "usePurchaseModal"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "ShopItem"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/hooks/use-admin-modules.ts",
      "domain": "moderation",
      "layer": "hooks",
      "size": 3845,
      "lines": 145,
      "complexity": 3,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@shared/lib/admin-module-registry",
        "@/hooks/use-auth",
        "@shared/config/admin.config"
      ],
      "exports": [
        "UseAdminModulesReturn",
        "useAdminModules",
        "useAdminPermission",
        "useAdminModule",
        "useAdminNavigation"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "AdminModule"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.1
    },
    {
      "path": "client/src/contexts/AdminSidebarContext.tsx",
      "domain": "moderation",
      "layer": "other",
      "size": 1596,
      "lines": 58,
      "complexity": 1,
      "dependencies": [
        "react",
        "react"
      ],
      "exports": [
        "AdminSidebarProvider",
        "useAdminSidebar"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "ReactNode"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/__tests__/admin-modules.test.ts",
      "domain": "moderation",
      "layer": "other",
      "size": 10853,
      "lines": 356,
      "complexity": 1,
      "dependencies": [
        "vitest",
        "@shared/lib/admin-module-registry",
        "@shared/config/admin.config"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.8999999999999999
    },
    {
      "path": "archive/legacy/codemods/wrap-with-asyncHandler.ts",
      "domain": "moderation",
      "subdomain": "wrap-with-asyncHandler.ts",
      "layer": "other",
      "size": 6332,
      "lines": 126,
      "complexity": 2,
      "dependencies": [
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": [
          "HeatEventId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.0999999999999999
    },
    {
      "path": "archive/legacy/codemods/update-schema-to-uuid.ts",
      "domain": "moderation",
      "subdomain": "update-schema-to-uuid.ts",
      "layer": "other",
      "size": 7095,
      "lines": 208,
      "complexity": 5,
      "dependencies": [
        "ts-morph",
        "node:path",
        "node:fs",
        "node:url",
        "minimist"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.2
    },
    {
      "path": "archive/legacy/codemods/replace-degentalk-case.ts",
      "domain": "moderation",
      "subdomain": "replace-degentalk-case.ts",
      "layer": "other",
      "size": 2173,
      "lines": 69,
      "complexity": 2,
      "dependencies": [
        "@db/types",
        "fs/promises",
        "path",
        "url",
        "fast-glob"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "AdminId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "archive/legacy/codemods/generate-id-codemod-plan.ts",
      "domain": "moderation",
      "subdomain": "generate-id-codemod-plan.ts",
      "layer": "other",
      "size": 1361,
      "lines": 43,
      "complexity": 1,
      "dependencies": [
        "@db/types",
        "node:fs",
        "node:path",
        "chalk",
        "node:url"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "AdminId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "archive/legacy/codemods/fix-typescript-uuid-types.ts",
      "domain": "moderation",
      "subdomain": "fix-typescript-uuid-types.ts",
      "layer": "other",
      "size": 13230,
      "lines": 426,
      "complexity": 8,
      "dependencies": [
        "ts-morph",
        "fs/promises",
        "path"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 129,
          "context": "// Handle patterns like userId: number, threadId?: number",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 1.9000000000000001
    },
    {
      "path": "archive/legacy/codemods/fix-typescript-uuid-types-safe.ts",
      "domain": "moderation",
      "subdomain": "fix-typescript-uuid-types-safe.ts",
      "layer": "other",
      "size": 8444,
      "lines": 295,
      "complexity": 5,
      "dependencies": [
        "ts-morph",
        "fs",
        "path",
        "minimist"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.2
    },
    {
      "path": "archive/legacy/codemods/apply-id-codemod.ts",
      "domain": "moderation",
      "subdomain": "apply-id-codemod.ts",
      "layer": "other",
      "size": 9226,
      "lines": 146,
      "complexity": 2,
      "dependencies": [
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "HeatEventId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "archive/legacy/codemods/apply-id-codemod-tsmorph.ts",
      "domain": "moderation",
      "subdomain": "apply-id-codemod-tsmorph.ts",
      "layer": "other",
      "size": 5059,
      "lines": 146,
      "complexity": 3,
      "dependencies": [
        "ts-morph",
        "node:path",
        "node:fs",
        "node:url",
        "minimist",
        "ts-morph"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": [
          "ImportDeclarationStructure"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.3
    },
    {
      "path": "client/src/pages/mod/shoutbox.tsx",
      "domain": "moderation",
      "subdomain": "shoutbox.tsx",
      "layer": "pages",
      "size": 152,
      "lines": 6,
      "complexity": 0,
      "dependencies": [
        "react"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/pages/mod/reports.tsx",
      "domain": "moderation",
      "subdomain": "reports.tsx",
      "layer": "pages",
      "size": 21265,
      "lines": 685,
      "complexity": 3,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/tabs",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/checkbox",
        "@/components/ui/separator",
        "@/components/ui/alert",
        "sonner",
        "@/lib/queryClient",
        "@/types/core.types",
        "@db/types"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 59,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 126,
          "context": "async getReport(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 133,
          "context": "async resolveReport(id: number, data: { action: string; reason?: string; banDuration?: string }) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 141,
          "context": "async dismissReport(id: number, reason: string) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 196,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 212,
          "context": "mutationFn: ({ id, reason }: { id: number; reason: string }) =>",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "ApiErrorData"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 3.7
    },
    {
      "path": "client/src/pages/mod/index.tsx",
      "domain": "moderation",
      "subdomain": "index.tsx",
      "layer": "pages",
      "size": 11600,
      "lines": 358,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/avatar"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/pages/mod/activity.tsx",
      "domain": "moderation",
      "subdomain": "activity.tsx",
      "layer": "pages",
      "size": 19141,
      "lines": 609,
      "complexity": 3,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/separator",
        "@/components/ui/alert",
        "sonner",
        "@/lib/queryClient",
        "@db/types"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 54,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 153,
          "context": "async getActivityDetails(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "ReportId",
          "ContentId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.3
    },
    {
      "path": "client/src/pages/admin/ui-config.tsx",
      "domain": "moderation",
      "subdomain": "ui-config.tsx",
      "layer": "pages",
      "size": 19511,
      "lines": 749,
      "complexity": 3,
      "dependencies": [
        "react",
        "@/hooks/use-toast",
        "@/components/admin/protected-admin-route",
        "@/hooks/use-admin-modules",
        "@/components/admin/VisualJsonTabs",
        "@/hooks/useJsonConfig",
        "@/schemas/uiQuotes.schema"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.6000000000000001
    },
    {
      "path": "client/src/pages/admin/treasury.tsx",
      "domain": "moderation",
      "subdomain": "treasury.tsx",
      "layer": "pages",
      "size": 22101,
      "lines": 670,
      "complexity": 4,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "lucide-react",
        "@/hooks/use-toast",
        "@/lib/queryClient",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/types/wallet",
        "@/components/admin/layout/AdminPageShell",
        "@db/types"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 44,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 45,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": true,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": [
          "Transaction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "client/src/pages/admin/tags.tsx",
      "domain": "moderation",
      "subdomain": "tags.tsx",
      "layer": "pages",
      "size": 16547,
      "lines": 560,
      "complexity": 3,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/textarea",
        "lucide-react",
        "@hookform/resolvers/zod",
        "react-hook-form",
        "zod",
        "@/types/compat/forum",
        "@/components/ui/alert",
        "@/components/admin/layout/AdminPageShell"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 122,
          "context": "mutationFn: async (data: z.infer<typeof tagSchema> & { id: number }) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.5
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 147,
          "context": "mutationFn: async (id: number) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "ForumTag"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 3.8
    },
    {
      "path": "client/src/pages/admin/system-analytics.tsx",
      "domain": "moderation",
      "subdomain": "system-analytics.tsx",
      "layer": "pages",
      "size": 12328,
      "lines": 385,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/admin/layout/AdminPageShell",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/skeleton",
        "@/components/ui/alert",
        "@/features/admin/components/analytics/SystemOverviewCard",
        "@/features/admin/components/analytics/SystemHealthCard",
        "@/features/admin/components/analytics/RealtimeMetricsCard",
        "@/features/admin/components/analytics/CacheAnalyticsCard",
        "@/features/admin/components/analytics/PerformanceHeatmapCard",
        "@/features/admin/components/analytics/DatabaseStatsCard",
        "@/features/admin/components/analytics/APIMetricsCard",
        "@/features/admin/components/analytics/SystemAlertsCard"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/pages/admin/social-config.tsx",
      "domain": "moderation",
      "subdomain": "social-config.tsx",
      "layer": "pages",
      "size": 34329,
      "lines": 1095,
      "complexity": 3,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/hooks/use-toast",
        "@/components/ui/checkbox",
        "@/config/social.config"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "SocialConfig"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.1
    },
    {
      "path": "client/src/pages/admin/shoutbox.tsx",
      "domain": "moderation",
      "subdomain": "shoutbox.tsx",
      "layer": "pages",
      "size": 23597,
      "lines": 729,
      "complexity": 4,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "react-hot-toast",
        "@db/types"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 68,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "RoomId",
          "GroupId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 4.4
    },
    {
      "path": "client/src/pages/admin/roles.tsx",
      "domain": "moderation",
      "subdomain": "roles.tsx",
      "layer": "pages",
      "size": 5950,
      "lines": 194,
      "complexity": 2,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/auth",
        "@hookform/resolvers/zod",
        "react-hook-form",
        "@/hooks/use-toast",
        "@/lib/queryClient",
        "@/hooks/useCrudMutation",
        "lucide-react",
        "@/components/admin/layout/AdminPageShell",
        "@/components/admin/common/AdminDataTable",
        "@/components/admin/forms/roles/RoleFormDialog",
        "@/components/admin/forms/roles/RoleFormDialog",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 21,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "RoleFormValues"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.5
    },
    {
      "path": "client/src/pages/admin/prefixes.tsx",
      "domain": "moderation",
      "subdomain": "prefixes.tsx",
      "layer": "pages",
      "size": 24160,
      "lines": 742,
      "complexity": 3,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/switch",
        "@/components/ui/badge",
        "lucide-react",
        "@hookform/resolvers/zod",
        "react-hook-form",
        "zod",
        "@/types/compat/forum",
        "@/components/admin/layout/AdminPageShell"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 156,
          "context": "mutationFn: async (data: z.infer<typeof prefixSchema> & { id: number }) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.5
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 181,
          "context": "mutationFn: async (id: number) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 201,
          "context": "mutationFn: async ({ id, direction }: { id: number; direction: 'up' | 'down' }) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 237,
          "context": "const handleReorderPrefix = (id: number, direction: 'up' | 'down') => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "ThreadPrefix"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 3
    },
    {
      "path": "client/src/pages/admin/live-database.tsx",
      "domain": "moderation",
      "subdomain": "live-database.tsx",
      "layer": "pages",
      "size": 26944,
      "lines": 902,
      "complexity": 5,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/components/admin/layout/AdminPageShell",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "sonner",
        "@/lib/utils"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2
    },
    {
      "path": "client/src/pages/admin/index.tsx",
      "domain": "moderation",
      "subdomain": "index.tsx",
      "layer": "pages",
      "size": 486,
      "lines": 21,
      "complexity": 1,
      "dependencies": [
        "@/components/admin/AdminDashboard",
        "@/components/auth"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/pages/admin/feature-flags.tsx",
      "domain": "moderation",
      "subdomain": "feature-flags.tsx",
      "layer": "pages",
      "size": 4678,
      "lines": 150,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/table",
        "lucide-react",
        "@/components/admin/protected-admin-route",
        "@/hooks/use-admin-modules",
        "@/components/admin/VisualJsonTabs",
        "@/hooks/useJsonConfig",
        "@/components/admin/form-controls",
        "@/components/ui/slider",
        "@/components/ui/input"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "client/src/pages/admin/emojis.tsx",
      "domain": "moderation",
      "subdomain": "emojis.tsx",
      "layer": "pages",
      "size": 25704,
      "lines": 841,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/switch",
        "@hookform/resolvers/zod",
        "react-hook-form",
        "zod",
        "lucide-react",
        "@/hooks/use-toast",
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/components/admin/layout/AdminPageShell",
        "@/components/admin/media/MediaLibraryModal",
        "@/features/admin/services/media-api.service",
        "@/components/media/MediaAsset"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 68,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 141,
          "context": "mutationFn: ({ id, emoji }: { id: number; emoji: EmojiFormValues }) =>",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 174,
          "context": "mutationFn: (id: number) =>",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 3.7
    },
    {
      "path": "client/src/pages/admin/database-config.tsx",
      "domain": "moderation",
      "subdomain": "database-config.tsx",
      "layer": "pages",
      "size": 15836,
      "lines": 482,
      "complexity": 3,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "lucide-react",
        "@/components/auth",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/separator",
        "@/components/admin/layout/AdminPageShell",
        "sonner"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.6000000000000001
    },
    {
      "path": "client/src/pages/admin/categories.tsx",
      "domain": "moderation",
      "subdomain": "categories.tsx",
      "layer": "pages",
      "size": 25821,
      "lines": 819,
      "complexity": 3,
      "dependencies": [
        "react",
        "@/lib/format-date",
        "@tanstack/react-query",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "react-hook-form",
        "@hookform/resolvers/zod",
        "zod",
        "@/components/ui/badge",
        "wouter",
        "@/components/admin/layout/AdminPageShell",
        "@/lib/api-request"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 89,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 146,
          "context": "mutationFn: async (data: z.infer<typeof categorySchema> & { id: number }) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.5
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 161,
          "context": "mutationFn: async (id: number) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 175,
          "context": "mutationFn: async ({ id, direction }: { id: number; direction: 'up' | 'down' }) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 206,
          "context": "const handleReorderCategory = (id: number, direction: 'up' | 'down') => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 4.1
    },
    {
      "path": "client/src/pages/admin/brand-config.tsx",
      "domain": "moderation",
      "subdomain": "brand-config.tsx",
      "layer": "pages",
      "size": 1185,
      "lines": 40,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui",
        "@/components/admin/VisualJsonTabs",
        "@/hooks/useJsonConfig",
        "@/schemas/brand.schema"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "client/src/pages/admin/airdrop.tsx",
      "domain": "moderation",
      "subdomain": "airdrop.tsx",
      "layer": "pages",
      "size": 6215,
      "lines": 215,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/hooks/use-toast",
        "@/lib/queryClient",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "lucide-react"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 29,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 3.3
    },
    {
      "path": "client/src/pages/admin/admin-layout.tsx",
      "domain": "moderation",
      "subdomain": "admin-layout.tsx",
      "layer": "pages",
      "size": 780,
      "lines": 27,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/admin/ModularAdminLayout"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "ReactNode"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/pages/admin/ad-management.tsx",
      "domain": "moderation",
      "subdomain": "ad-management.tsx",
      "layer": "pages",
      "size": 24602,
      "lines": 789,
      "complexity": 3,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/Container"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.1
    },
    {
      "path": "client/src/__tests__/types/admin.types.test.ts",
      "domain": "moderation",
      "layer": "types",
      "size": 4795,
      "lines": 198,
      "complexity": 1,
      "dependencies": [
        "vitest"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "User",
          "UserFormData",
          "EconomyConfig",
          "AdminApiResponse",
          "BulkOperationRequest",
          "Achievement"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/test/RoleTest.tsx",
      "domain": "moderation",
      "layer": "components",
      "size": 1379,
      "lines": 43,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/hooks/use-auth",
        "@/lib/roles",
        "@/lib/roles"
      ],
      "exports": [
        "RoleTest"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Role"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/modals/DeleteConfirmModal.tsx",
      "domain": "moderation",
      "subdomain": "DeleteConfirmModal.tsx",
      "layer": "components",
      "size": 1846,
      "lines": 73,
      "complexity": 0,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "DeleteConfirmModal"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/components/mod/mod-sidebar.tsx",
      "domain": "moderation",
      "subdomain": "mod-sidebar.tsx",
      "layer": "components",
      "size": 5167,
      "lines": 160,
      "complexity": 1,
      "dependencies": [
        "wouter",
        "@/components/ui/button",
        "@/lib/utils"
      ],
      "exports": [
        "ModSidebar"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "client/src/components/mod/mod-layout.tsx",
      "domain": "moderation",
      "subdomain": "mod-layout.tsx",
      "layer": "components",
      "size": 4185,
      "lines": 138,
      "complexity": 1,
      "dependencies": [
        "react",
        "wouter",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/sheet",
        "@/components/ui/avatar",
        "@/components/ui/badge"
      ],
      "exports": [
        "ModLayout"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/header/AdminButton.tsx",
      "domain": "moderation",
      "layer": "components",
      "size": 1034,
      "lines": 34,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/icons/iconRenderer",
        "@/components/ui/button",
        "@/hooks/use-auth",
        "@/lib/roles",
        "@/lib/roles"
      ],
      "exports": [
        "AdminButton"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Role"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/dev/dev-role-switcher.tsx",
      "domain": "moderation",
      "layer": "components",
      "size": 1100,
      "lines": 40,
      "complexity": 1,
      "dependencies": [
        "@/hooks/use-auth",
        "@/components/ui/badge"
      ],
      "exports": [
        "DevRoleSwitcher"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/simple-menu.tsx",
      "domain": "moderation",
      "subdomain": "simple-menu.tsx",
      "layer": "components",
      "size": 1459,
      "lines": 54,
      "complexity": 1,
      "dependencies": [
        "react",
        "wouter",
        "@shared/config/admin.config"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "client/src/components/admin/protected-admin-route.tsx",
      "domain": "moderation",
      "subdomain": "protected-admin-route.tsx",
      "layer": "components",
      "size": 6659,
      "lines": 246,
      "complexity": 3,
      "dependencies": [
        "react",
        "wouter",
        "@/hooks/use-auth",
        "@/hooks/use-admin-modules",
        "@/lib/roles",
        "@/lib/roles",
        "lucide-react",
        "@/components/ui/alert",
        "@/components/ui/button",
        "@shared/config/admin.config"
      ],
      "exports": [
        "ProtectedAdminRoute",
        "withAdminProtection"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Role"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.1
    },
    {
      "path": "client/src/components/admin/VisualJsonTabs.tsx",
      "domain": "moderation",
      "subdomain": "VisualJsonTabs.tsx",
      "layer": "components",
      "size": 2813,
      "lines": 85,
      "complexity": 1,
      "dependencies": [
        "react",
        "@radix-ui/react-tabs",
        "zod"
      ],
      "exports": [
        "VisualJsonTabsProps",
        "VisualJsonTabs"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "client/src/components/admin/ModularAdminSidebar.tsx",
      "domain": "moderation",
      "subdomain": "ModularAdminSidebar.tsx",
      "layer": "components",
      "size": 12194,
      "lines": 439,
      "complexity": 2,
      "dependencies": [
        "react",
        "wouter",
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tooltip",
        "@/hooks/use-admin-modules",
        "@/hooks/use-auth",
        "@shared/config/admin.config"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": [
          "AdminModule"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.10000000000000003
    },
    {
      "path": "client/src/components/admin/ModularAdminLayout.tsx",
      "domain": "moderation",
      "subdomain": "ModularAdminLayout.tsx",
      "layer": "components",
      "size": 3468,
      "lines": 116,
      "complexity": 1,
      "dependencies": [
        "react",
        "react",
        "@/components/ui/sheet",
        "@/hooks/use-media-query",
        "@/lib/utils"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "ReactNode"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/AdminThemeProvider.tsx",
      "domain": "moderation",
      "subdomain": "AdminThemeProvider.tsx",
      "layer": "components",
      "size": 626,
      "lines": 29,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/lib/utils"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "ReactNode"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/AdminDashboard.tsx",
      "domain": "moderation",
      "subdomain": "AdminDashboard.tsx",
      "layer": "components",
      "size": 10736,
      "lines": 337,
      "complexity": 1,
      "dependencies": [
        "react",
        "wouter",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/hooks/use-admin-modules",
        "@/hooks/use-auth",
        "@/lib/admin-utils",
        "@shared/config/admin.config"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "AdminModule"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/errors/AdminErrorBoundary.tsx",
      "domain": "moderation",
      "layer": "components",
      "size": 3885,
      "lines": 124,
      "complexity": 2,
      "dependencies": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "AdminErrorBoundary"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/pages/admin/ui/pack-builder.tsx",
      "domain": "moderation",
      "subdomain": "ui",
      "layer": "pages",
      "size": 5263,
      "lines": 159,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/features/admin/services/media-api.service",
        "@/components/admin/layout/AdminPageShell",
        "@lottiefiles/dotlottie-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/hooks/use-toast"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 61,
          "context": "const removeFromPack = (id: number) => setContents(contents.filter((c) => c.id !== id));",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 3.8
    },
    {
      "path": "client/src/pages/admin/ui/animations.tsx",
      "domain": "moderation",
      "subdomain": "ui",
      "layer": "pages",
      "size": 3414,
      "lines": 105,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/features/admin/services/media-api.service",
        "@/components/admin/layout/AdminPageShell",
        "@/components/media/MediaAsset",
        "@/components/ui/button",
        "@/components/admin/media/MediaLibraryModal",
        "@/hooks/use-toast"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "client/src/pages/admin/stats/index.tsx",
      "domain": "moderation",
      "subdomain": "stats",
      "layer": "pages",
      "size": 2276,
      "lines": 73,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/skeleton",
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/pages/admin/reports/index.tsx",
      "domain": "moderation",
      "subdomain": "reports",
      "layer": "pages",
      "size": 25419,
      "lines": 833,
      "complexity": 3,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/textarea",
        "@/components/ui/separator",
        "@hookform/resolvers/zod",
        "react-hook-form",
        "zod",
        "@/components/admin/layout/AdminPageShell",
        "@/components/ui/alert",
        "@/lib/queryClient",
        "@db/types"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 73,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 177,
          "context": "mutationFn: async (data: { id: number; notes?: string }) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 194,
          "context": "mutationFn: async (data: { id: number; notes?: string }) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 211,
          "context": "mutationFn: async (data: { userId: number; reason: string; duration?: string }) => {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "ContentId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 3
    },
    {
      "path": "client/src/pages/admin/dictionary/index.tsx",
      "domain": "moderation",
      "subdomain": "dictionary",
      "layer": "pages",
      "size": 2692,
      "lines": 85,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/features/dictionary/services/dictionaryApi",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/loader",
        "@/components/ui/error-display"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 11,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 55,
          "context": "mutationFn: ({ id, status }: { id: number; status: 'approved' | 'rejected' }) =>",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.9
    },
    {
      "path": "client/src/pages/admin/features/index.tsx",
      "domain": "moderation",
      "subdomain": "features",
      "layer": "pages",
      "size": 11641,
      "lines": 404,
      "complexity": 2,
      "dependencies": [
        "react",
        "react-query",
        "@/lib/queryClient",
        "lucide-react",
        "@/hooks/use-toast",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/switch",
        "@/components/ui/label"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "client/src/pages/admin/config/zones.tsx",
      "domain": "moderation",
      "subdomain": "config",
      "layer": "pages",
      "size": 1923,
      "lines": 65,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "lucide-react",
        "@/components/ui/textarea.tsx",
        "@/components/ui/button.tsx",
        "@/hooks/use-toast.ts",
        "@/lib/queryClient.ts"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "client/src/pages/admin/config/tags.tsx",
      "domain": "moderation",
      "subdomain": "config",
      "layer": "pages",
      "size": 1916,
      "lines": 65,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "lucide-react",
        "@/components/ui/textarea.tsx",
        "@/components/ui/button.tsx",
        "@/hooks/use-toast.ts",
        "@/lib/queryClient.ts"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "client/src/pages/admin/announcements/index.tsx",
      "domain": "moderation",
      "subdomain": "announcements",
      "layer": "pages",
      "size": 39156,
      "lines": 1228,
      "complexity": 4,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "react-hook-form",
        "@hookform/resolvers/zod",
        "zod",
        "date-fns",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "@/components/ui/popover",
        "@/components/ui/calendar",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/hooks/use-toast",
        "@/lib/queryClient",
        "@/components/admin/layout/AdminPageShell"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 75,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 245,
          "context": "mutationFn: async ({ id, values }: { id: number; values: AnnouncementFormValues }) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 273,
          "context": "mutationFn: async (id: number) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 3.1
    },
    {
      "path": "client/src/pages/admin/dev/seeding.tsx",
      "domain": "moderation",
      "subdomain": "dev",
      "layer": "pages",
      "size": 1746,
      "lines": 63,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/admin/layout/AdminPageShell"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "client/src/pages/admin/activity/index.tsx",
      "domain": "moderation",
      "subdomain": "activity",
      "layer": "pages",
      "size": 7525,
      "lines": 243,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/features/activity/hooks/useActivityFeed",
        "@/features/activity/services/activityApi",
        "date-fns",
        "@/hooks/useAuth",
        "@/components/admin/layout/AdminPageShell",
        "@/layout/primitives"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/pages/admin/clout/index.tsx",
      "domain": "moderation",
      "subdomain": "clout",
      "layer": "pages",
      "size": 11722,
      "lines": 414,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "@/components/admin/layout/AdminPageShell",
        "@/lib/queryClient",
        "@/components/admin/clout/CloutTiersSection",
        "@/components/admin/clout/AchievementsSection",
        "@/components/admin/clout/CloutGrantsSection",
        "@/components/admin/clout/CloutLogsSection"
      ],
      "exports": [
        "CloutAchievement",
        "CloutLog",
        "CloutTier",
        "CLOUT_TIERS"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 17,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 30,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.9
    },
    {
      "path": "client/src/pages/admin/clout/grants.tsx",
      "domain": "moderation",
      "subdomain": "clout",
      "layer": "pages",
      "size": 27360,
      "lines": 882,
      "complexity": 6,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/hooks/use-toast",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/radio-group",
        "@/components/ui/checkbox",
        "@/components/ui/avatar",
        "@/hooks/use-debounce",
        "@/lib/queryClient",
        "@shared/economy/clout-calculator",
        "@/config/easter-eggs.config",
        "@/components/admin/effects/CloutObliterationEffect"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 69,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 3.8000000000000003
    },
    {
      "path": "client/src/features/dictionary/components/AddWordModal.tsx",
      "domain": "moderation",
      "layer": "components",
      "size": 4093,
      "lines": 140,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/button",
        "@tanstack/react-query",
        "zod",
        "@/lib/utils/generateSlug",
        "@/hooks/use-toast",
        "@/components/ui/label"
      ],
      "exports": [
        "AddWordModal"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "client/src/features/admin/hooks/useSystemAnalytics.ts",
      "domain": "moderation",
      "subdomain": "hooks",
      "layer": "hooks",
      "size": 6622,
      "lines": 205,
      "complexity": 1,
      "dependencies": [
        "@tanstack/react-query",
        "sonner"
      ],
      "exports": [
        "systemAnalyticsKeys",
        "useSystemMetrics",
        "useSystemOverview",
        "usePerformanceHeatmap",
        "useSystemHealth",
        "useRealtimeAnalytics",
        "useCacheStats",
        "useCacheOperation",
        "useDatabaseStats",
        "useRefreshSystemAnalytics",
        "useSystemAnalyticsLoadingState",
        "useSystemAnalyticsErrorState"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "client/src/features/admin/services/uiConfigApi.ts",
      "domain": "moderation",
      "subdomain": "services",
      "layer": "services",
      "size": 4872,
      "lines": 178,
      "complexity": 2,
      "dependencies": [
        "@/lib/api-request"
      ],
      "exports": [
        "QuoteFilters",
        "PaginationOptions",
        "CreateQuoteData",
        "UpdateQuoteData",
        "ReorderQuotesData",
        "BulkOperation",
        "QuoteAnalyticsData",
        "uiConfigApi",
        "useQuotes"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 1.0999999999999999
    },
    {
      "path": "client/src/features/admin/services/media-api.service.ts",
      "domain": "moderation",
      "subdomain": "services",
      "layer": "services",
      "size": 1131,
      "lines": 48,
      "complexity": 1,
      "dependencies": [
        "@/lib/queryClient"
      ],
      "exports": [
        "MediaType",
        "MediaItem",
        "MediaApiService",
        "mediaApiService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 6,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 42,
          "context": "async deleteMedia(id: number): Promise<void> {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 2.9
    },
    {
      "path": "client/src/features/admin/services/cloutGrantsService.ts",
      "domain": "moderation",
      "subdomain": "services",
      "layer": "services",
      "size": 727,
      "lines": 24,
      "complexity": 1,
      "dependencies": [
        "@tanstack/react-query",
        "@/lib/adminApi"
      ],
      "exports": [
        "CLOUT_LOGS_KEY",
        "useGrantClout",
        "useCloutLogs"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/features/admin/services/brandConfigApi.ts",
      "domain": "moderation",
      "subdomain": "services",
      "layer": "services",
      "size": 707,
      "lines": 21,
      "complexity": 1,
      "dependencies": [
        "@/types/compat/brand"
      ],
      "exports": [
        "brandConfigApi"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/features/admin/services/animation-pack-api.service.ts",
      "domain": "moderation",
      "subdomain": "services",
      "layer": "services",
      "size": 478,
      "lines": 19,
      "complexity": 1,
      "dependencies": [
        "@/lib/queryClient"
      ],
      "exports": [
        "PackPayload",
        "AnimationPackApiService",
        "animationPackApiService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "high",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/features/admin/api/system-analytics.api.ts",
      "domain": "moderation",
      "subdomain": "api",
      "layer": "other",
      "size": 6304,
      "lines": 299,
      "complexity": 2,
      "dependencies": [
        "@/lib/queryClient"
      ],
      "exports": [
        "SystemMetrics",
        "PerformanceHeatmap",
        "SystemHealth",
        "RealtimeAnalytics",
        "SystemOverview",
        "CacheStats",
        "SystemMetricsParams",
        "PerformanceHeatmapParams",
        "SystemHealthParams",
        "RealtimeAnalyticsParams",
        "CacheOperationParams",
        "systemAnalyticsApi"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "client/src/components/admin/roles/RolesSection.tsx",
      "domain": "moderation",
      "subdomain": "roles",
      "layer": "components",
      "size": 15559,
      "lines": 479,
      "complexity": 2,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/hooks/use-toast",
        "@/lib/queryClient",
        "@/pages/admin/roles-titles"
      ],
      "exports": [
        "RolesSection"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Role",
          "Title",
          "Permission"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "client/src/components/admin/roles/RoleForm.tsx",
      "domain": "moderation",
      "subdomain": "roles",
      "layer": "components",
      "size": 3221,
      "lines": 130,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea"
      ],
      "exports": [
        "RoleForm"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "client/src/components/admin/media/MediaPickerModal.tsx",
      "domain": "moderation",
      "subdomain": "media",
      "layer": "components",
      "size": 1446,
      "lines": 53,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/dialog",
        "@tanstack/react-query",
        "@/components/media/MediaAsset"
      ],
      "exports": [
        "MediaPickerModal"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/media/MediaLibraryModal.tsx",
      "domain": "moderation",
      "subdomain": "media",
      "layer": "components",
      "size": 3715,
      "lines": 143,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "react-dropzone",
        "@/components/media/MediaAsset",
        "@/hooks/use-toast"
      ],
      "exports": [
        "MediaLibraryModal"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "client/src/components/admin/form-controls/index.ts",
      "domain": "moderation",
      "subdomain": "form-controls",
      "layer": "components",
      "size": 492,
      "lines": 15,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "ColorPicker ",
        "SwitchRow ",
        "ImageUpload ",
        "JsonEditor ",
        "InlineError "
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/components/admin/form-controls/SwitchRow.tsx",
      "domain": "moderation",
      "subdomain": "form-controls",
      "layer": "components",
      "size": 1644,
      "lines": 51,
      "complexity": 1,
      "dependencies": [
        "react",
        "@radix-ui/react-switch"
      ],
      "exports": [
        "SwitchRowProps",
        "SwitchRow"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/form-controls/JsonEditor.tsx",
      "domain": "moderation",
      "subdomain": "form-controls",
      "layer": "components",
      "size": 1094,
      "lines": 53,
      "complexity": 1,
      "dependencies": [
        "react",
        "@monaco-editor/react"
      ],
      "exports": [
        "JsonEditorProps",
        "JsonEditor"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/form-controls/InlineError.tsx",
      "domain": "moderation",
      "subdomain": "form-controls",
      "layer": "components",
      "size": 427,
      "lines": 17,
      "complexity": 0,
      "dependencies": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "InlineErrorProps",
        "InlineError"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/components/admin/form-controls/ImageUpload.tsx",
      "domain": "moderation",
      "subdomain": "form-controls",
      "layer": "components",
      "size": 1918,
      "lines": 75,
      "complexity": 1,
      "dependencies": [
        "react",
        "react-dropzone"
      ],
      "exports": [
        "ImageUploadProps",
        "ImageUpload"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/form-controls/ColorPicker.tsx",
      "domain": "moderation",
      "subdomain": "form-controls",
      "layer": "components",
      "size": 1243,
      "lines": 40,
      "complexity": 1,
      "dependencies": [
        "react",
        "react-colorful"
      ],
      "exports": [
        "ColorPickerProps",
        "ColorPicker"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/effects/CloutObliterationEffect.tsx",
      "domain": "moderation",
      "subdomain": "effects",
      "layer": "components",
      "size": 5006,
      "lines": 166,
      "complexity": 1,
      "dependencies": [
        "react",
        "framer-motion",
        "lucide-react",
        "@/config/easter-eggs.config"
      ],
      "exports": [
        "CloutObliterationEffect"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/effects/BankruptcyEffect.tsx",
      "domain": "moderation",
      "subdomain": "effects",
      "layer": "components",
      "size": 4859,
      "lines": 183,
      "complexity": 1,
      "dependencies": [
        "react",
        "framer-motion",
        "lucide-react",
        "@/components/ui/button",
        "@/config/easter-eggs.config"
      ],
      "exports": [
        "BankruptcyEffect"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/clout/CloutTiersSection.tsx",
      "domain": "moderation",
      "subdomain": "clout",
      "layer": "components",
      "size": 8855,
      "lines": 265,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "lucide-react",
        "@/pages/admin/clout"
      ],
      "exports": [
        "CloutTiersSection"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "CloutTier"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/components/admin/clout/CloutLogsSection.tsx",
      "domain": "moderation",
      "subdomain": "clout",
      "layer": "components",
      "size": 11544,
      "lines": 374,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/pages/admin/clout"
      ],
      "exports": [
        "CloutLogsSection"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "CloutLog",
          "CloutAchievement"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/components/admin/clout/CloutGrantsSection.tsx",
      "domain": "moderation",
      "subdomain": "clout",
      "layer": "components",
      "size": 11979,
      "lines": 381,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "lucide-react",
        "react-hook-form",
        "@hookform/resolvers/zod",
        "zod",
        "@/hooks/use-toast",
        "@/lib/queryClient"
      ],
      "exports": [
        "CloutGrantsSection"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.2
    },
    {
      "path": "client/src/components/admin/inputs/UnlockMultiSelect.tsx",
      "domain": "moderation",
      "subdomain": "inputs",
      "layer": "components",
      "size": 2915,
      "lines": 102,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/checkbox",
        "@/components/ui/button",
        "@/components/ui/popover",
        "@/components/ui/scroll-area",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "UnlockMultiSelect"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 11,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 44,
          "context": "const toggle = (id: number) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.9
    },
    {
      "path": "client/src/components/admin/inputs/AdminToggle.tsx",
      "domain": "moderation",
      "subdomain": "inputs",
      "layer": "components",
      "size": 899,
      "lines": 37,
      "complexity": 0,
      "dependencies": [
        "react",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/lib/utils"
      ],
      "exports": [
        "AdminToggle"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/components/admin/inputs/AdminAccessSelector.tsx",
      "domain": "moderation",
      "subdomain": "inputs",
      "layer": "components",
      "size": 2862,
      "lines": 101,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/checkbox",
        "@/components/ui/button",
        "@/components/ui/popover",
        "@/components/ui/scroll-area",
        "@/lib/utils",
        "lucide-react"
      ],
      "exports": [
        "AdminAccessSelector"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 11,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 44,
          "context": "const toggleRole = (id: number) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.9
    },
    {
      "path": "client/src/components/admin/layout/EntityTable.tsx",
      "domain": "moderation",
      "subdomain": "layout",
      "layer": "components",
      "size": 5277,
      "lines": 170,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/skeleton",
        "@/components/ui/input",
        "@/lib/utils"
      ],
      "exports": [
        "ColumnDef",
        "EntityTable"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/layout/EntityFilters.tsx",
      "domain": "moderation",
      "subdomain": "layout",
      "layer": "components",
      "size": 4464,
      "lines": 146,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/date-range-picker",
        "react-day-picker",
        "@/lib/utils",
        "lucide-react"
      ],
      "exports": [
        "FilterValue",
        "FilterConfig",
        "EntityFilters"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "DateRange"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/layout/AdminPageShell.tsx",
      "domain": "moderation",
      "subdomain": "layout",
      "layer": "components",
      "size": 2558,
      "lines": 82,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/tabs",
        "@/lib/utils"
      ],
      "exports": [
        "TabConfig",
        "AdminPageShell"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/common/AdminDataTable.tsx",
      "domain": "moderation",
      "subdomain": "common",
      "layer": "components",
      "size": 701,
      "lines": 22,
      "complexity": 0,
      "dependencies": [
        "react",
        "@/components/admin/layout/EntityTable"
      ],
      "exports": [
        "AdminDataTableProps",
        "AdminDataTable"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/features/admin/components/dashboard/index.ts",
      "domain": "moderation",
      "subdomain": "components",
      "layer": "components",
      "size": 505,
      "lines": 11,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "default as RainAnalyticsCard ",
        "default as TippingAnalyticsCard ",
        "default as EngagementAnalyticsDashboard ",
        "default as UserAnalyticsCard ",
        "default as ForumAnalyticsCard "
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/features/admin/components/dashboard/RainAnalyticsCard.tsx",
      "domain": "moderation",
      "subdomain": "components",
      "layer": "components",
      "size": 8272,
      "lines": 275,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/tabs",
        "@/components/ui/skeleton",
        "date-fns",
        "@/lib/queryClient"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 61,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.8
    },
    {
      "path": "client/src/features/admin/components/dashboard/EngagementAnalyticsDashboard.tsx",
      "domain": "moderation",
      "subdomain": "components",
      "layer": "components",
      "size": 1124,
      "lines": 40,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/card"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/features/admin/components/analytics/SystemOverviewCard.tsx",
      "domain": "moderation",
      "subdomain": "components",
      "layer": "components",
      "size": 8742,
      "lines": 265,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/features/admin/api/system-analytics.api"
      ],
      "exports": [
        "SystemOverviewCard"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "SystemOverview"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/features/admin/components/analytics/SystemHealthCard.tsx",
      "domain": "moderation",
      "subdomain": "components",
      "layer": "components",
      "size": 6598,
      "lines": 204,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "lucide-react",
        "@/features/admin/api/system-analytics.api"
      ],
      "exports": [
        "SystemHealthCard"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "SystemHealth"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/features/admin/components/analytics/SystemAlertsCard.tsx",
      "domain": "moderation",
      "subdomain": "components",
      "layer": "components",
      "size": 8196,
      "lines": 224,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "lucide-react",
        "@/features/admin/api/system-analytics.api"
      ],
      "exports": [
        "SystemAlertsCard"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "SystemOverview"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/features/admin/components/analytics/RealtimeMetricsCard.tsx",
      "domain": "moderation",
      "subdomain": "components",
      "layer": "components",
      "size": 6268,
      "lines": 200,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/features/admin/api/system-analytics.api"
      ],
      "exports": [
        "RealtimeMetricsCard"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "RealtimeAnalytics"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/features/admin/components/analytics/PerformanceHeatmapCard.tsx",
      "domain": "moderation",
      "subdomain": "components",
      "layer": "components",
      "size": 9722,
      "lines": 272,
      "complexity": 3,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "lucide-react",
        "@/features/admin/api/system-analytics.api"
      ],
      "exports": [
        "PerformanceHeatmapCard"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "PerformanceHeatmap"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.1
    },
    {
      "path": "client/src/features/admin/components/analytics/DatabaseStatsCard.tsx",
      "domain": "moderation",
      "subdomain": "components",
      "layer": "components",
      "size": 6905,
      "lines": 192,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "lucide-react",
        "@/features/admin/api/system-analytics.api"
      ],
      "exports": [
        "DatabaseStatsCard"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "SystemMetrics"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/features/admin/components/analytics/CacheAnalyticsCard.tsx",
      "domain": "moderation",
      "subdomain": "components",
      "layer": "components",
      "size": 11411,
      "lines": 345,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/separator",
        "@/components/ui/chart",
        "recharts",
        "@/features/admin/hooks/useSystemAnalytics",
        "@/features/admin/api/system-analytics.api",
        "sonner"
      ],
      "exports": [
        "CacheAnalyticsCard"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "CacheStats"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/features/admin/components/analytics/APIMetricsCard.tsx",
      "domain": "moderation",
      "subdomain": "components",
      "layer": "components",
      "size": 9025,
      "lines": 265,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "lucide-react",
        "@/components/ui/chart",
        "recharts",
        "@/features/admin/api/system-analytics.api"
      ],
      "exports": [
        "APIMetricsCard"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "SystemMetrics"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/admin/forms/roles/RoleFormDialog.tsx",
      "domain": "moderation",
      "subdomain": "forms",
      "layer": "components",
      "size": 5043,
      "lines": 191,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/switch",
        "react-hook-form",
        "zod"
      ],
      "exports": [
        "roleSchema",
        "RoleFormValues",
        "RoleFormDialog"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "UseFormReturn"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "client/src/components/admin/forms/reports/ViewReportDialog.tsx",
      "domain": "moderation",
      "subdomain": "forms",
      "layer": "components",
      "size": 8825,
      "lines": 301,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/tabs",
        "@/components/ui/button",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@db/types"
      ],
      "exports": [
        "ReportStatus",
        "ReportType",
        "Report",
        "ViewReportDialog"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 34,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "ReporterId",
          "ContentId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.8
    },
    {
      "path": "client/src/components/admin/forms/reports/ReportActionDialogs.tsx",
      "domain": "moderation",
      "subdomain": "forms",
      "layer": "components",
      "size": 4278,
      "lines": 153,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/ui/label",
        "@/components/ui/textarea"
      ],
      "exports": [
        "ReportActionDialog",
        "BanUserDialog"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    }
  ],
  "totalIssues": 50,
  "avgComplexity": 1.6571428571428573,
  "migrationEffort": 168.2999999999998,
  "dependencies": [
    "@db/types",
    "@server/src/lib/db",
    "@schema",
    "@playwright/test/reporter",
    "@/db/types",
    "@paralleldrive/cuid2",
    "@shared/config/admin.config",
    "@/hooks/use-auth",
    "@/lib/queryClient",
    "@tanstack/react-query",
    "@shared/lib/admin-module-registry",
    "@/components/ui/card",
    "@/components/ui/button",
    "@/components/ui/badge",
    "@/components/ui/avatar",
    "@/components/ui/tabs",
    "@/components/ui/input",
    "@/components/ui/label",
    "@/components/ui/textarea",
    "@/components/ui/checkbox",
    "@/components/ui/separator",
    "@/components/ui/alert",
    "@/types/core.types",
    "@/hooks/use-toast",
    "@/components/admin/protected-admin-route",
    "@/hooks/use-admin-modules",
    "@/components/admin/VisualJsonTabs",
    "@/hooks/useJsonConfig",
    "@/schemas/uiQuotes.schema",
    "@/types/wallet",
    "@/components/admin/layout/AdminPageShell",
    "@hookform/resolvers/zod",
    "@/types/compat/forum",
    "@/components/ui/skeleton",
    "@/features/admin/components/analytics/SystemOverviewCard",
    "@/features/admin/components/analytics/SystemHealthCard",
    "@/features/admin/components/analytics/RealtimeMetricsCard",
    "@/features/admin/components/analytics/CacheAnalyticsCard",
    "@/features/admin/components/analytics/PerformanceHeatmapCard",
    "@/features/admin/components/analytics/DatabaseStatsCard",
    "@/features/admin/components/analytics/APIMetricsCard",
    "@/features/admin/components/analytics/SystemAlertsCard",
    "@/components/ui/switch",
    "@/config/social.config",
    "@/components/auth",
    "@/hooks/useCrudMutation",
    "@/components/admin/common/AdminDataTable",
    "@/components/admin/forms/roles/RoleFormDialog",
    "@/lib/utils",
    "@/components/admin/AdminDashboard",
    "@/components/ui/table",
    "@/components/admin/form-controls",
    "@/components/ui/slider",
    "@/components/admin/media/MediaLibraryModal",
    "@/features/admin/services/media-api.service",
    "@/components/media/MediaAsset",
    "@/lib/format-date",
    "@/lib/api-request",
    "@/components/ui",
    "@/schemas/brand.schema",
    "@/components/admin/ModularAdminLayout",
    "@/components/ui/Container",
    "@/lib/roles",
    "@/components/ui/sheet",
    "@/components/icons/iconRenderer",
    "@radix-ui/react-tabs",
    "@/components/ui/tooltip",
    "@/hooks/use-media-query",
    "@/lib/admin-utils",
    "@lottiefiles/dotlottie-react",
    "@/features/dictionary/services/dictionaryApi",
    "@/components/ui/loader",
    "@/components/ui/error-display",
    "@/components/ui/textarea.tsx",
    "@/components/ui/button.tsx",
    "@/hooks/use-toast.ts",
    "@/lib/queryClient.ts",
    "@/components/ui/popover",
    "@/components/ui/calendar",
    "@/features/activity/hooks/useActivityFeed",
    "@/features/activity/services/activityApi",
    "@/hooks/useAuth",
    "@/layout/primitives",
    "@/components/admin/clout/CloutTiersSection",
    "@/components/admin/clout/AchievementsSection",
    "@/components/admin/clout/CloutGrantsSection",
    "@/components/admin/clout/CloutLogsSection",
    "@/components/ui/radio-group",
    "@/hooks/use-debounce",
    "@shared/economy/clout-calculator",
    "@/config/easter-eggs.config",
    "@/components/admin/effects/CloutObliterationEffect",
    "@/components/ui/dialog",
    "@/lib/utils/generateSlug",
    "@/lib/adminApi",
    "@/types/compat/brand",
    "@/pages/admin/roles-titles",
    "@radix-ui/react-switch",
    "@monaco-editor/react",
    "@/components/ui/progress",
    "@/pages/admin/clout",
    "@/components/ui/scroll-area",
    "@/components/ui/date-range-picker",
    "@/components/admin/layout/EntityTable",
    "@/features/admin/api/system-analytics.api",
    "@/components/ui/chart",
    "@/features/admin/hooks/useSystemAnalytics"
  ],
  "dependents": [],
  "criticalPath": false,
  "riskAssessment": {
    "runtime": "high",
    "testing": "high",
    "integration": "low"
  },
  "migrationStrategy": {
    "priority": 3,
    "approach": "parallel",
    "estimatedDays": 34,
    "blockers": [],
    "prerequisites": []
  }
}
{
  "name": "admin",
  "files": [
    {
      "path": "server/src/domains/admin/admin.validation.ts",
      "domain": "admin",
      "subdomain": "admin.validation.ts",
      "layer": "other",
      "size": 1955,
      "lines": 89,
      "complexity": 1,
      "dependencies": [
        "zod",
        "express"
      ],
      "exports": [
        "validateRequestBody",
        "validateNumberParam",
        "validateQueryParams",
        "CommonValidation"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.1
    },
    {
      "path": "server/src/domains/admin/admin.service.ts",
      "domain": "admin",
      "subdomain": "admin.service.ts",
      "layer": "other",
      "size": 3491,
      "lines": 137,
      "complexity": 3,
      "dependencies": [
        "@db",
        "drizzle-orm",
        "@schema",
        "@/db/types"
      ],
      "exports": [
        "AdminService",
        "adminService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "AdminId",
          "UserId"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 1.6
    },
    {
      "path": "server/src/domains/admin/admin.routes.ts",
      "domain": "admin",
      "subdomain": "admin.routes.ts",
      "layer": "routes",
      "size": 5614,
      "lines": 120,
      "complexity": 1,
      "dependencies": [
        "express",
        "@server/src/core/logger"
      ],
      "exports": [
        "registerAdminRoutes"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "server/src/domains/admin/admin.response.ts",
      "domain": "admin",
      "subdomain": "admin.response.ts",
      "layer": "other",
      "size": 1370,
      "lines": 68,
      "complexity": 1,
      "dependencies": [
        "express"
      ],
      "exports": [
        "StandardResponse",
        "sendSuccess",
        "sendError",
        "sendValidationError",
        "handleAdminError"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Response"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 1.7
    },
    {
      "path": "server/src/domains/admin/admin.middleware.ts",
      "domain": "admin",
      "subdomain": "admin.middleware.ts",
      "layer": "other",
      "size": 5925,
      "lines": 173,
      "complexity": 5,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@schema",
        "drizzle-orm",
        "@server/src/core/db",
        "@server/src/core/logger"
      ],
      "exports": [
        "getUserId",
        "asyncHandler"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.2
    },
    {
      "path": "server/src/domains/admin/admin.errors.ts",
      "domain": "admin",
      "subdomain": "admin.errors.ts",
      "layer": "other",
      "size": 1265,
      "lines": 42,
      "complexity": 1,
      "dependencies": [
        "import { AdminError, AdminErrorCodes } from "
      ],
      "exports": [
        "AdminErrorCodes",
        "AdminError"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "server/src/domains/admin/admin.controller.ts",
      "domain": "admin",
      "subdomain": "admin.controller.ts",
      "layer": "controllers",
      "size": 1875,
      "lines": 75,
      "complexity": 2,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@/db/types"
      ],
      "exports": [
        "AdminController",
        "adminController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "server/src/domains/admin/sub-domains/index.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 67,
      "lines": 3,
      "complexity": 0,
      "dependencies": [],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/shared/index.ts",
      "domain": "admin",
      "subdomain": "shared",
      "layer": "other",
      "size": 2096,
      "lines": 76,
      "complexity": 0,
      "dependencies": [
        "@/domains/admin/shared",
        "@/domains/admin/shared",
        "@/domains/admin/shared",
        "@/domains/admin/shared"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/shared/admin-query-utils.ts",
      "domain": "admin",
      "subdomain": "shared",
      "layer": "other",
      "size": 6752,
      "lines": 286,
      "complexity": 5,
      "dependencies": [
        "drizzle-orm",
        "drizzle-orm/pg-core"
      ],
      "exports": [
        "SearchFilter",
        "DateRangeFilter",
        "StatusFilter",
        "RoleFilter",
        "PaginationParams",
        "SortParams",
        "buildSearchConditions",
        "buildDateRangeConditions",
        "buildStatusConditions",
        "buildRoleConditions",
        "combineFilterConditions",
        "buildSortConditions",
        "calculatePaginationOffset",
        "normalizePaginationParams",
        "buildPaginationMeta",
        "buildUserSearchConditions",
        "buildExclusionConditions",
        "FilterBuilder",
        "COMMON_SORT_FIELDS",
        "validateSortParams"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "server/src/domains/admin/shared/admin-operation-utils.ts",
      "domain": "admin",
      "subdomain": "shared",
      "layer": "other",
      "size": 9351,
      "lines": 384,
      "complexity": 7,
      "dependencies": [
        "@server/src/core/logger",
        "@/db/types"
      ],
      "exports": [
        "USER_ROLES",
        "UserRole",
        "ROLE_HIERARCHY",
        "hasRolePermission",
        "getManageableRoles",
        "validateRoleAssignment",
        "formatUserDisplayName",
        "createAuditLogEntry",
        "sanitizeForLogging",
        "formatEntityChanges",
        "validateAdminOperation",
        "generateSecureToken",
        "validateEntityId",
        "formatAdminResponse",
        "AdminRateLimiter",
        "BatchOperationManager",
        "ENTITY_STATUS",
        "EntityStatus",
        "validateStatusTransition",
        "adminCreateAuditLogEntry"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": [
          "AdminId",
          "EntityId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.1000000000000005
    },
    {
      "path": "server/src/domains/admin/shared/admin-error-boundaries.ts",
      "domain": "admin",
      "subdomain": "shared",
      "layer": "other",
      "size": 10524,
      "lines": 444,
      "complexity": 5,
      "dependencies": [
        "@server/src/core/services/user.service",
        "@server/src/core/logger",
        "express",
        "@/db/types"
      ],
      "exports": [
        "AdminErrorContext",
        "AdminOperationResult",
        "AdminErrorDetails",
        "ERROR_CATEGORIES",
        "ErrorCategory",
        "TypedAdminError",
        "AdminErrorFactory",
        "AdminOperationBoundary",
        "adminErrorBoundaryMiddleware",
        "formatErrorResponse"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "server/src/domains/admin/shared/admin-cache.service.ts",
      "domain": "admin",
      "subdomain": "shared",
      "layer": "other",
      "size": 9477,
      "lines": 404,
      "complexity": 8,
      "dependencies": [
        "node-cache",
        "@/db/types"
      ],
      "exports": [
        "CacheConfig",
        "CacheMetrics",
        "AdminCacheService",
        "AdminCacheKeys",
        "adminCacheService",
        "CacheResult"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "EntityId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 3.1
    },
    {
      "path": "server/src/domains/admin/sub-domains/wallet/wallet.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 3208,
      "lines": 130,
      "complexity": 2,
      "dependencies": [
        "express",
        "zod"
      ],
      "exports": [
        "validateWalletConfig",
        "validateDGTTransaction",
        "validateUserId"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.4
    },
    {
      "path": "server/src/domains/admin/sub-domains/wallet/wallet.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1135,
      "lines": 29,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [
        "router as adminWalletRoutes "
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/wallet/wallet.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 5933,
      "lines": 239,
      "complexity": 4,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express"
      ],
      "exports": [
        "AdminWalletController",
        "adminWalletController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.3
    },
    {
      "path": "server/src/domains/admin/sub-domains/user-groups/user-groups.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 1453,
      "lines": 38,
      "complexity": 1,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "UserGroupSchema",
        "ListGroupUsersQuerySchema",
        "UserGroupInput",
        "ListGroupUsersQueryInput"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "server/src/domains/admin/sub-domains/user-groups/user-groups.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 6470,
      "lines": 229,
      "complexity": 4,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@/db/types"
      ],
      "exports": [
        "AdminUserGroupsService",
        "adminUserGroupsService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "UserGroupInput",
          "ListGroupUsersQueryInput"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.8
    },
    {
      "path": "server/src/domains/admin/sub-domains/user-groups/user-groups.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1215,
      "lines": 50,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/user-groups/user-groups.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 4440,
      "lines": 135,
      "complexity": 5,
      "dependencies": [
        "express"
      ],
      "exports": [
        "AdminUserGroupsController",
        "adminUserGroupsController"
      ],
      "idPatterns": [
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 31,
          "context": "const groupId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 69,
          "context": "const groupId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 95,
          "context": "const groupId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 115,
          "context": "const groupId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 0.5999999999999999
    },
    {
      "path": "server/src/domains/admin/sub-domains/xp/xp.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 1116,
      "lines": 39,
      "complexity": 0,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "XpSettingsSchema",
        "CreateLevelSchema",
        "UpdateLevelSchema",
        "AdjustUserXpSchema"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1
    },
    {
      "path": "server/src/domains/admin/sub-domains/xp/xp.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 9112,
      "lines": 274,
      "complexity": 6,
      "dependencies": [
        "@db",
        "drizzle-orm",
        "@/db/types"
      ],
      "exports": [
        "XpAdminService",
        "xpAdminService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 224,
          "context": "userId: number,",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "AdminId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.3000000000000003
    },
    {
      "path": "server/src/domains/admin/sub-domains/xp/xp.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 3570,
      "lines": 69,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/xp/xp.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 11344,
      "lines": 385,
      "complexity": 9,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "getXpSettings",
        "updateXpSettings",
        "getLevels",
        "createLevel",
        "updateLevel",
        "deleteLevel",
        "getBadges",
        "createBadge",
        "updateBadge",
        "deleteBadge",
        "getTitles",
        "createTitle",
        "updateTitle",
        "deleteTitle",
        "adjustUserXp",
        "getXpAdjustmentLogs",
        "testXpActionAward"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 2.8
    },
    {
      "path": "server/src/domains/admin/sub-domains/xp/xp.reputation.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 726,
      "lines": 25,
      "complexity": 1,
      "dependencies": [
        "@db",
        "@schema"
      ],
      "exports": [
        "XpReputationService",
        "xpReputationService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "server/src/domains/admin/sub-domains/xp/xp-actions.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 8348,
      "lines": 304,
      "complexity": 5,
      "dependencies": [
        "express",
        "@db",
        "@schema",
        "drizzle-orm",
        "@shared/validators/admin",
        "@server/src/middleware/validate"
      ],
      "exports": [
        "getAllXpActions",
        "getXpActionByKey",
        "createXpAction",
        "updateXpAction",
        "toggleXpAction",
        "resetXpAction"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2
    },
    {
      "path": "server/src/domains/admin/sub-domains/users/users.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 12940,
      "lines": 498,
      "complexity": 8,
      "dependencies": [
        "@db",
        "drizzle-orm",
        "@schema",
        "@shared/validators/admin",
        "zod",
        "bcrypt",
        "@/db/types"
      ],
      "exports": [
        "AdminUsersService",
        "adminUsersService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "UserId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.6
    },
    {
      "path": "server/src/domains/admin/sub-domains/users/users.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 3258,
      "lines": 130,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/users/users.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 10701,
      "lines": 418,
      "complexity": 8,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@shared/validators/admin",
        "zod",
        "@db",
        "@schema",
        "drizzle-orm",
        "@/db/types",
        "@shared/utils/id"
      ],
      "exports": [
        "AdminUsersController",
        "adminUsersController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 0.8
    },
    {
      "path": "server/src/domains/admin/sub-domains/users/inventory.admin.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 922,
      "lines": 26,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/users/inventory.admin.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 6814,
      "lines": 221,
      "complexity": 5,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "userInventoryAdminController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1
    },
    {
      "path": "server/src/domains/admin/sub-domains/users/bulk-operations.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 9985,
      "lines": 411,
      "complexity": 6,
      "dependencies": [
        "@db",
        "drizzle-orm",
        "@schema",
        "@/db/types"
      ],
      "exports": [
        "BulkOperationResult",
        "BulkRoleAssignmentData",
        "BulkBanData",
        "AdminUserBulkOperationsService",
        "adminUserBulkOperationsService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 24,
          "context": "errors: Array<{ userId: number; error: string }>;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "AdminId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.3000000000000003
    },
    {
      "path": "server/src/domains/admin/sub-domains/users/bulk-operations.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 5793,
      "lines": 215,
      "complexity": 4,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod"
      ],
      "exports": [
        "AdminUserBulkOperationsController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7999999999999998
    },
    {
      "path": "server/src/domains/admin/sub-domains/treasury/treasury.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 2703,
      "lines": 72,
      "complexity": 1,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "TreasuryDepositSchema",
        "TreasuryWithdrawalSchema",
        "TreasurySettingsUpdateSchema",
        "MassAirdropSchema",
        "TreasuryDepositInput",
        "TreasuryWithdrawalInput",
        "TreasurySettingsUpdateInput",
        "MassAirdropInput"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1.2
    },
    {
      "path": "server/src/domains/admin/sub-domains/treasury/treasury.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 12300,
      "lines": 398,
      "complexity": 6,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@/db/types"
      ],
      "exports": [
        "AdminTreasuryService",
        "adminTreasuryService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 236,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Transaction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.3000000000000003
    },
    {
      "path": "server/src/domains/admin/sub-domains/treasury/treasury.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1282,
      "lines": 48,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/treasury/treasury.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 5229,
      "lines": 152,
      "complexity": 4,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express"
      ],
      "exports": [
        "AdminTreasuryController",
        "adminTreasuryController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.8
    },
    {
      "path": "server/src/domains/admin/sub-domains/titles/titles.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 2398,
      "lines": 76,
      "complexity": 0,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "baseTitleSchema",
        "createTitleSchema",
        "updateTitleSchema",
        "CreateTitleInput",
        "UpdateTitleInput"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1
    },
    {
      "path": "server/src/domains/admin/sub-domains/titles/titles.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 3407,
      "lines": 111,
      "complexity": 3,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "AdminTitlesService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 83,
          "context": "async update(id: number, data: UpdateTitleInput) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 103,
          "context": "async delete(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "CreateTitleInput",
          "UpdateTitleInput"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9999999999999998
    },
    {
      "path": "server/src/domains/admin/sub-domains/titles/titles.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1005,
      "lines": 30,
      "complexity": 1,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@lib/auth/canUser.ts"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "server/src/domains/admin/sub-domains/titles/titles.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 2113,
      "lines": 81,
      "complexity": 4,
      "dependencies": [
        "express"
      ],
      "exports": [
        "AdminTitlesController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1
    },
    {
      "path": "server/src/domains/admin/sub-domains/subscriptions/subscription.admin.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1673,
      "lines": 59,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/subscriptions/subscription.admin.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 11085,
      "lines": 407,
      "complexity": 4,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "AdminSubscriptionController",
        "adminSubscriptionController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "server/src/domains/admin/sub-domains/ui-config/uiThemes.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 2503,
      "lines": 95,
      "complexity": 2,
      "dependencies": [
        "drizzle-orm",
        "@schema/admin/uiThemes",
        "@shared/config/zoneThemes.config"
      ],
      "exports": [
        "UiThemesService",
        "uiThemesService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.4
    },
    {
      "path": "server/src/domains/admin/sub-domains/ui-config/ui-config.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 8220,
      "lines": 299,
      "complexity": 1,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "PaginationSchema",
        "QuoteFiltersSchema",
        "CreateQuoteSchema",
        "UpdateQuoteSchema",
        "ReorderQuotesSchema",
        "CreateCollectionSchema",
        "UpdateCollectionSchema",
        "TrackEventSchema",
        "AnalyticsRequestSchema",
        "BulkQuoteOperationSchema",
        "ImportQuotesSchema",
        "ExportQuotesSchema",
        "validateQuoteType",
        "validateCollectionType",
        "validateEventType",
        "EnhancedCreateQuoteSchema",
        "EnhancedCreateCollectionSchema",
        "EnhancedTrackEventSchema",
        "CreateQuoteRequest",
        "UpdateQuoteRequest"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1.2
    },
    {
      "path": "server/src/domains/admin/sub-domains/ui-config/ui-config.types.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 4487,
      "lines": 185,
      "complexity": 0,
      "dependencies": [
        "@schema"
      ],
      "exports": [
        "PaginationOptions",
        "QuoteFilters",
        "QuotesResponse",
        "CreateQuoteRequest",
        "UpdateQuoteRequest",
        "ReorderQuotesRequest",
        "CreateCollectionRequest",
        "UpdateCollectionRequest",
        "QuoteAnalyticsRequest",
        "QuoteAnalyticsResponse",
        "BulkQuoteOperation",
        "ImportQuotesRequest",
        "ExportQuotesRequest",
        "UiConfigService",
        "QuoteDisplayConfig",
        "QuoteContextConfig"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "UiQuote",
          "UiCollection",
          "NewUiQuote",
          "NewUiCollection"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 1
    },
    {
      "path": "server/src/domains/admin/sub-domains/ui-config/ui-config.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 13674,
      "lines": 585,
      "complexity": 9,
      "dependencies": [
        "drizzle-orm",
        "drizzle-orm/node-postgres"
      ],
      "exports": [
        "UiConfigService",
        "uiConfigService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "NodePgDatabase"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.8
    },
    {
      "path": "server/src/domains/admin/sub-domains/ui-config/ui-config.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 4124,
      "lines": 172,
      "complexity": 1,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "server/src/domains/admin/sub-domains/ui-config/ui-config.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 13054,
      "lines": 470,
      "complexity": 10,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express"
      ],
      "exports": [
        "UiConfigController",
        "uiConfigController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 3
    },
    {
      "path": "server/src/domains/admin/sub-domains/social/social.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 5788,
      "lines": 192,
      "complexity": 3,
      "dependencies": [
        "@db",
        "drizzle-orm",
        "@shared/config/social.config",
        "@shared/config/social.config"
      ],
      "exports": [
        "SocialService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "SocialConfig"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.8
    },
    {
      "path": "server/src/domains/admin/sub-domains/social/social.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 4037,
      "lines": 134,
      "complexity": 1,
      "dependencies": [
        "express",
        "zod"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "server/src/domains/admin/sub-domains/social/social.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 3702,
      "lines": 124,
      "complexity": 3,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@server/src/core/logger"
      ],
      "exports": [
        "SocialController",
        "socialController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.1
    },
    {
      "path": "server/src/domains/admin/sub-domains/settings/settings.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 3148,
      "lines": 108,
      "complexity": 1,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "UpdateSettingSchema",
        "UpdateSettingsSchema",
        "SettingGroupSchema",
        "CreateSettingSchema",
        "UpdateSettingMetadataSchema",
        "FilterSettingsSchema",
        "UpdateSettingInput",
        "UpdateSettingsInput",
        "SettingGroupInput",
        "CreateSettingInput",
        "UpdateSettingMetadataInput",
        "FilterSettingsInput"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1.2
    },
    {
      "path": "server/src/domains/admin/sub-domains/settings/settings.service.refactored.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 7957,
      "lines": 312,
      "complexity": 7,
      "dependencies": [
        "@server/src/core/logger"
      ],
      "exports": [
        "AdminSettingsService",
        "adminSettingsService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "UpdateSettingInput",
          "UpdateSettingsInput",
          "SettingGroupInput",
          "CreateSettingInput",
          "UpdateSettingMetadataInput",
          "FilterSettingsInput"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.4000000000000004
    },
    {
      "path": "server/src/domains/admin/sub-domains/settings/settings.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1834,
      "lines": 62,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/settings/settings.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 8149,
      "lines": 243,
      "complexity": 8,
      "dependencies": [
        "express",
        "@shared/validators/admin"
      ],
      "exports": [
        "AdminSettingsController",
        "adminSettingsController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 1.6
    },
    {
      "path": "server/src/domains/admin/sub-domains/roles/roles.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 769,
      "lines": 24,
      "complexity": 0,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "baseRoleSchema",
        "createRoleSchema",
        "updateRoleSchema",
        "CreateRoleInput",
        "UpdateRoleInput"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.1
    },
    {
      "path": "server/src/domains/admin/sub-domains/roles/roles.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 1161,
      "lines": 38,
      "complexity": 2,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "AdminRolesService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "CreateRoleInput",
          "UpdateRoleInput"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.4
    },
    {
      "path": "server/src/domains/admin/sub-domains/roles/roles.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 851,
      "lines": 28,
      "complexity": 1,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@lib/auth/canUser.ts"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "server/src/domains/admin/sub-domains/roles/roles.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 3789,
      "lines": 135,
      "complexity": 3,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express"
      ],
      "exports": [
        "AdminRolesController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.6
    },
    {
      "path": "server/src/domains/admin/sub-domains/shop/shopCategory.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 1643,
      "lines": 60,
      "complexity": 2,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "ShopCategoryService",
        "shopCategoryService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 34,
          "context": "async update(id: number, data: Partial<CategoryInput>) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 49,
          "context": "async delete(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 3.5999999999999996
    },
    {
      "path": "server/src/domains/admin/sub-domains/shop/shopCategory.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 859,
      "lines": 42,
      "complexity": 1,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 26,
          "context": "const id = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 35,
          "context": "const id = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "server/src/domains/admin/sub-domains/shop/shop.admin.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1108,
      "lines": 29,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/shop/shop.admin.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 4632,
      "lines": 143,
      "complexity": 4,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "shopAdminController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.8
    },
    {
      "path": "server/src/domains/admin/sub-domains/shop/rarity.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 1349,
      "lines": 48,
      "complexity": 2,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "RarityService",
        "rarityService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 29,
          "context": "async update(id: number, data: Partial<RarityInput>) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 40,
          "context": "async delete(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 3.5999999999999996
    },
    {
      "path": "server/src/domains/admin/sub-domains/shop/rarity.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 823,
      "lines": 42,
      "complexity": 1,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 26,
          "context": "const id = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 35,
          "context": "const id = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "server/src/domains/admin/sub-domains/reports/reports.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 1494,
      "lines": 41,
      "complexity": 1,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "GetReportsQuerySchema",
        "ReportActionSchema",
        "BanUserSchema",
        "DeleteContentSchema",
        "GetReportsQueryInput",
        "ReportActionInput",
        "BanUserInput",
        "DeleteContentInput"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "server/src/domains/admin/sub-domains/reports/reports.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 12377,
      "lines": 406,
      "complexity": 6,
      "dependencies": [
        "@db",
        "drizzle-orm",
        "@/db/types"
      ],
      "exports": [
        "AdminReportsService",
        "adminReportsService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "GetReportsQueryInput",
          "ReportActionInput",
          "BanUserInput",
          "DeleteContentInput"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.2000000000000002
    },
    {
      "path": "server/src/domains/admin/sub-domains/reports/reports.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1320,
      "lines": 45,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/reports/reports.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 5982,
      "lines": 187,
      "complexity": 5,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express"
      ],
      "exports": [
        "AdminReportsController",
        "adminReportsController"
      ],
      "idPatterns": [
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 39,
          "context": "const reportId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 56,
          "context": "const reportId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 86,
          "context": "const reportId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/referrals/referrals.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 1084,
      "lines": 38,
      "complexity": 1,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "createReferralSourceSchema",
        "recordUserReferralSchema",
        "CreateReferralSourceInput",
        "RecordUserReferralInput"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1.2
    },
    {
      "path": "server/src/domains/admin/sub-domains/referrals/referrals.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 4329,
      "lines": 176,
      "complexity": 3,
      "dependencies": [
        "drizzle-orm",
        "@schema/system/referralSources",
        "@schema/system/userReferrals",
        "@schema/user/users"
      ],
      "exports": [
        "ReferralsService",
        "referralsService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 57,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7000000000000002
    },
    {
      "path": "server/src/domains/admin/sub-domains/referrals/referrals.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1585,
      "lines": 66,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "server/src/domains/admin/sub-domains/referrals/referrals.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 2476,
      "lines": 114,
      "complexity": 3,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express"
      ],
      "exports": [
        "ReferralsController",
        "referralsController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.1
    },
    {
      "path": "server/src/domains/admin/sub-domains/permissions/permissions.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 7312,
      "lines": 161,
      "complexity": 2,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "AdminPermissionsService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1.4
    },
    {
      "path": "server/src/domains/admin/sub-domains/permissions/permissions.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 756,
      "lines": 26,
      "complexity": 1,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@lib/auth/canUser.ts"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.7
    },
    {
      "path": "server/src/domains/admin/sub-domains/permissions/permissions.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 637,
      "lines": 25,
      "complexity": 2,
      "dependencies": [
        "express"
      ],
      "exports": [
        "AdminPermissionsController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9
    },
    {
      "path": "server/src/domains/admin/sub-domains/moderator-notes/moderator-notes.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 3816,
      "lines": 148,
      "complexity": 2,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod",
        "@db",
        "@schema",
        "drizzle-orm",
        "@server/src/utils/auth",
        "@server/src/core/logger"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 105,
          "context": "const noteId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "server/src/domains/admin/sub-domains/forum/forum.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 3509,
      "lines": 98,
      "complexity": 1,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "CategorySchema",
        "PrefixSchema",
        "ModerateThreadSchema",
        "TagSchema",
        "PaginationSchema",
        "createEntitySchema",
        "updateEntitySchema",
        "CategoryInput",
        "PrefixInput",
        "TagInput",
        "ModerateThreadInput",
        "PaginationInput"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1.2
    },
    {
      "path": "server/src/domains/admin/sub-domains/forum/forum.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 14864,
      "lines": 564,
      "complexity": 10,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "AdminForumService",
        "adminForumService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 57,
          "context": "async getCategoryById(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 130,
          "context": "async updateCategory(id: number, data: CategoryInput) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 197,
          "context": "async deleteCategory(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 362,
          "context": "async updateTag(id: number, data: TagInput) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 413,
          "context": "async deleteTag(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 503,
          "context": "async getEntityById(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 519,
          "context": "async updateEntity(id: number, data: any) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 532,
          "context": "async deleteEntity(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "threadId: number",
          "line": 435,
          "context": "async moderateThread(threadId: number, data: ModerateThreadInput) {",
          "suggestedFix": "ThreadId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "CategoryInput",
          "PrefixInput",
          "TagInput",
          "ModerateThreadInput",
          "PaginationInput"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 5.1000000000000005
    },
    {
      "path": "server/src/domains/admin/sub-domains/forum/forum.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 3159,
      "lines": 110,
      "complexity": 1,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 71,
          "context": "const id = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 80,
          "context": "const id = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.10000000000000003
    },
    {
      "path": "server/src/domains/admin/sub-domains/forum/forum.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 11729,
      "lines": 371,
      "complexity": 10,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@server/src/core/logger"
      ],
      "exports": [
        "AdminForumController",
        "adminForumController"
      ],
      "idPatterns": [
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 42,
          "context": "const categoryId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 81,
          "context": "const categoryId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 107,
          "context": "const categoryId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 197,
          "context": "const tagId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 217,
          "context": "const tagId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 235,
          "context": "const threadId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 286,
          "context": "const entityId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 324,
          "context": "const entityId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 352,
          "context": "const entityId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 2.1
    },
    {
      "path": "server/src/domains/admin/sub-domains/forumPrefix/forumPrefix.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 2347,
      "lines": 80,
      "complexity": 2,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@/db/types"
      ],
      "exports": [
        "ForumPrefixService",
        "forumPrefixService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 16,
          "context": "async updatePrefix(id: number, data: UpdatePrefixInput) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 46,
          "context": "async deletePrefix(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "CategoryId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.8
    },
    {
      "path": "server/src/domains/admin/sub-domains/emojis/emojis.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 5026,
      "lines": 155,
      "complexity": 2,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "EmojiBaseSchema",
        "CreateEmojiSchema",
        "UpdateEmojiSchema",
        "ListEmojisQuerySchema",
        "EmojiIdParamSchema",
        "BulkDeleteEmojisSchema",
        "BulkUpdateEmojisSchema"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.4
    },
    {
      "path": "server/src/domains/admin/sub-domains/emojis/emojis.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 11642,
      "lines": 426,
      "complexity": 6,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "ListEmojisOptions",
        "CreateEmojiData",
        "UpdateEmojiData",
        "emojiService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 177,
          "context": "async getById(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 282,
          "context": "async update(id: number, emojiData: UpdateEmojiData) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 344,
          "context": "async delete(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 4.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/emojis/emojis.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1128,
      "lines": 39,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/emojis/emojis.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 9448,
      "lines": 367,
      "complexity": 7,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express"
      ],
      "exports": [
        "getAllEmojis",
        "getEmojiById",
        "createEmoji",
        "updateEmoji",
        "deleteEmoji",
        "bulkDeleteEmojis",
        "getEmojiCategories"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.4000000000000004
    },
    {
      "path": "server/src/domains/admin/sub-domains/economy/economy.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 391,
      "lines": 12,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/economy/economy.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 1788,
      "lines": 51,
      "complexity": 2,
      "dependencies": [
        "express",
        "@server/src/utils/economy-loader",
        "@shared/economy/economy.config",
        "zod"
      ],
      "exports": [
        "getEconomyConfig",
        "updateEconomyConfig",
        "resetEconomyConfig"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.4
    },
    {
      "path": "server/src/domains/admin/sub-domains/email-templates/email-templates.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 13011,
      "lines": 489,
      "complexity": 7,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "marked",
        "zod",
        "@/db/types"
      ],
      "exports": [
        "emailTemplateSchema",
        "CreateEmailTemplateInput",
        "UpdateEmailTemplateInput",
        "EmailTemplateService",
        "emailTemplateService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 175,
          "context": "id: number,",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 241,
          "context": "async deleteTemplate(id: number, adminId: string) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "TemplateId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.6
    },
    {
      "path": "server/src/domains/admin/sub-domains/email-templates/email-templates.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1706,
      "lines": 55,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [
        "emailTemplateRoutes"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/email-templates/email-templates.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 10515,
      "lines": 360,
      "complexity": 7,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod"
      ],
      "exports": [
        "EmailTemplateController",
        "emailTemplateController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.6000000000000003
    },
    {
      "path": "server/src/domains/admin/sub-domains/dgt-packages/dgt-packages.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 1547,
      "lines": 55,
      "complexity": 2,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "DgtPackageService",
        "dgtPackageService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 35,
          "context": "async update(id: number, data: Partial<DgtPackageInput>) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 47,
          "context": "async delete(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.6
    },
    {
      "path": "server/src/domains/admin/sub-domains/dgt-packages/dgt-packages.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 528,
      "lines": 20,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/dgt-packages/dgt-packages.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 1424,
      "lines": 52,
      "complexity": 2,
      "dependencies": [
        "express"
      ],
      "exports": [
        "listPackages",
        "getPackageById",
        "createPackage",
        "updatePackage",
        "deletePackage"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.9
    },
    {
      "path": "server/src/domains/admin/sub-domains/dev/seeding.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 2134,
      "lines": 81,
      "complexity": 1,
      "dependencies": [
        "express",
        "child_process"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "server/src/domains/admin/sub-domains/reputation/reputation.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1113,
      "lines": 24,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/reputation/reputation.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 9224,
      "lines": 316,
      "complexity": 6,
      "dependencies": [
        "express",
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "getAllAchievements",
        "getAchievementById",
        "createAchievement",
        "updateAchievement",
        "deleteAchievement",
        "toggleAchievement",
        "grantReputation",
        "getReputationLogs",
        "adjustReputation",
        "getReputationAdjustmentLogs"
      ],
      "idPatterns": [
        {
          "type": "conversion",
          "pattern": "Number(req.params.id)",
          "line": 24,
          "context": "const id = Number(req.params.id);",
          "suggestedFix": "remove Number(), use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "Number(req.params.id)",
          "line": 74,
          "context": "const id = Number(req.params.id);",
          "suggestedFix": "remove Number(), use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "Number(req.params.id)",
          "line": 95,
          "context": "const id = Number(req.params.id);",
          "suggestedFix": "remove Number(), use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "Number(req.params.id)",
          "line": 105,
          "context": "const id = Number(req.params.id);",
          "suggestedFix": "remove Number(), use branded type",
          "confidence": 0.5
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 2.6
    },
    {
      "path": "server/src/domains/admin/sub-domains/cache/cache.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1255,
      "lines": 46,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/cache/cache.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 8154,
      "lines": 306,
      "complexity": 5,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod"
      ],
      "exports": [
        "AdminCacheController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2
    },
    {
      "path": "server/src/domains/admin/sub-domains/database/query.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 9728,
      "lines": 419,
      "complexity": 5,
      "dependencies": [
        "@server/src/core/db",
        "@server/src/core/logger",
        "drizzle-orm"
      ],
      "exports": [
        "QueryResult",
        "QueryValidation",
        "QueryHistory",
        "QueryService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 96,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 108,
          "context": "async executeQuery(query: string, userId: number): Promise<QueryResult> {",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.2
    },
    {
      "path": "server/src/domains/admin/sub-domains/database/query.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 9062,
      "lines": 332,
      "complexity": 5,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@server/src/core/logger",
        "zod"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2
    },
    {
      "path": "server/src/domains/admin/sub-domains/database/database.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 27975,
      "lines": 1067,
      "complexity": 10,
      "dependencies": [
        "@server/src/core/db",
        "@server/src/core/logger",
        "drizzle-orm",
        "@schema"
      ],
      "exports": [
        "TableInfo",
        "ColumnInfo",
        "TableSchema",
        "ForeignKeyInfo",
        "IndexInfo",
        "ConstraintInfo",
        "TableDataResult",
        "ValidationResult",
        "DatabaseService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.2
    },
    {
      "path": "server/src/domains/admin/sub-domains/database/database.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 2253,
      "lines": 49,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "server/src/domains/admin/sub-domains/database/database.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 13846,
      "lines": 523,
      "complexity": 9,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@server/src/core/logger",
        "zod"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 2.8
    },
    {
      "path": "server/src/domains/admin/sub-domains/database/bulk-operations.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 9299,
      "lines": 348,
      "complexity": 6,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@server/src/core/logger",
        "zod",
        "multer",
        "csv-parser",
        "stream"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.2
    },
    {
      "path": "server/src/domains/admin/sub-domains/brand-config/brand.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 2420,
      "lines": 90,
      "complexity": 2,
      "dependencies": [
        "@db_types/brand.types",
        "@schema/admin/brandConfig",
        "@server/src/core/db",
        "drizzle-orm"
      ],
      "exports": [
        "brandService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "RuntimeBrandConfig",
          "BrandConfigUpdate"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 1.4
    },
    {
      "path": "server/src/domains/admin/sub-domains/brand-config/brand.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 544,
      "lines": 18,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/brand-config/brand.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 492,
      "lines": 17,
      "complexity": 1,
      "dependencies": [
        "express"
      ],
      "exports": [
        "brandController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "server/src/domains/admin/sub-domains/announcements/index.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 471,
      "lines": 17,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "ORIGINAL_ANNOUNCEMENTS_DEPRECATED",
        "registerAnnouncementRoutes",
        "publicRouter as publicAnnouncementRoutes",
        "adminRouter as adminAnnouncementRoutes",
        "default as createAnnouncementRouter"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/announcements/announcements.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 2081,
      "lines": 61,
      "complexity": 1,
      "dependencies": [
        "express"
      ],
      "exports": [
        "registerAnnouncementRoutes",
        "publicRouter",
        "adminRouter"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "server/src/domains/admin/sub-domains/backup-restore/schedule.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 16986,
      "lines": 592,
      "complexity": 10,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "zod"
      ],
      "exports": [
        "createScheduleSchema",
        "updateScheduleSchema",
        "listSchedulesSchema",
        "CreateScheduleInput",
        "UpdateScheduleInput",
        "ListSchedulesInput",
        "BackupScheduleService",
        "backupScheduleService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 100,
          "context": "async updateSchedule(id: number, data: UpdateScheduleInput, adminId: string) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 158,
          "context": "async deleteSchedule(id: number, adminId: string) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 255,
          "context": "async getSchedule(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 298,
          "context": "async triggerSchedule(id: number, adminId: string) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 5.4
    },
    {
      "path": "server/src/domains/admin/sub-domains/backup-restore/restore.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 19244,
      "lines": 664,
      "complexity": 10,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "child_process",
        "fs",
        "crypto",
        "zod",
        "@/db/types"
      ],
      "exports": [
        "createRestoreSchema",
        "listRestoreOperationsSchema",
        "CreateRestoreInput",
        "ListRestoreOperationsInput",
        "RestoreService",
        "restoreService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 634,
          "context": "id: number,",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "BackupId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 5.1
    },
    {
      "path": "server/src/domains/admin/sub-domains/backup-restore/backup.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 18080,
      "lines": 642,
      "complexity": 10,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "child_process",
        "crypto",
        "fs",
        "zlib",
        "stream/promises",
        "path",
        "fs",
        "zod",
        "@/db/types"
      ],
      "exports": [
        "createBackupSchema",
        "listBackupsSchema",
        "CreateBackupInput",
        "ListBackupsInput",
        "BackupService",
        "backupService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 224,
          "context": "async getBackup(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 255,
          "context": "async deleteBackup(id: number, adminId: string) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 305,
          "context": "getBackupProgress(id: number): BackupProgress | null {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 550,
          "context": "id: number,",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "BackupId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 5.4
    },
    {
      "path": "server/src/domains/admin/sub-domains/backup-restore/backup-restore.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 3624,
      "lines": 129,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [
        "backupRestoreRoutes"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/backup-restore/backup-restore.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 16022,
      "lines": 573,
      "complexity": 10,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod"
      ],
      "exports": [
        "BackupRestoreController",
        "backupRestoreController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 2
    },
    {
      "path": "server/src/domains/admin/sub-domains/animation-packs/animation-packs.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 2528,
      "lines": 85,
      "complexity": 2,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "slugify",
        "@/db/types"
      ],
      "exports": [
        "PackInput",
        "AnimationPackService",
        "animationPackService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 53,
          "context": "async update(id: number, data: PackInput) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 70,
          "context": "async delete(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "PackId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.6
    },
    {
      "path": "server/src/domains/admin/sub-domains/animation-packs/animation-packs.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 415,
      "lines": 13,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/animation-packs/animation-packs.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 1032,
      "lines": 41,
      "complexity": 2,
      "dependencies": [
        "express"
      ],
      "exports": [
        "listPacks",
        "createPack",
        "updatePack",
        "deletePack"
      ],
      "idPatterns": [
        {
          "type": "conversion",
          "pattern": "Number(req.params.id)",
          "line": 24,
          "context": "const id = Number(req.params.id);",
          "suggestedFix": "remove Number(), use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "Number(req.params.id)",
          "line": 34,
          "context": "const id = Number(req.params.id);",
          "suggestedFix": "remove Number(), use branded type",
          "confidence": 0.5
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.1
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/system-analytics.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 4446,
      "lines": 124,
      "complexity": 1,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "timeRangeSchema",
        "granularitySchema",
        "metricTypeSchema",
        "systemMetricsQuerySchema",
        "performanceHeatmapQuerySchema",
        "systemHealthQuerySchema",
        "realtimeAnalyticsQuerySchema",
        "alertThresholdSchema",
        "performanceBaselineSchema",
        "systemReportSchema",
        "cacheOperationSchema",
        "performanceOptimizationSchema",
        "SystemMetricsQuery",
        "PerformanceHeatmapQuery",
        "SystemHealthQuery",
        "RealtimeAnalyticsQuery",
        "AlertThreshold",
        "PerformanceBaseline",
        "SystemReport",
        "CacheOperation"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/system-analytics.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 15695,
      "lines": 562,
      "complexity": 4,
      "dependencies": [
        "drizzle-orm",
        "@db",
        "@server/src/domains/admin/shared/admin-cache.service"
      ],
      "exports": [
        "SystemMetrics",
        "PerformanceHeatmap",
        "SystemHealth",
        "SystemAnalyticsService",
        "systemAnalyticsService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.8
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/system-analytics.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 10513,
      "lines": 377,
      "complexity": 5,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@server/src/domains/admin/shared",
        "@server/src/domains/admin/admin.errors",
        "@server/src/domains/admin/shared/admin-cache.service"
      ],
      "exports": [
        "SystemAnalyticsController",
        "systemAnalyticsController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/analytics.validators.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 1880,
      "lines": 60,
      "complexity": 1,
      "dependencies": [
        "zod"
      ],
      "exports": [
        "AnalyticsPeriodSchema",
        "AnalyticsGranularitySchema",
        "AnalyticsQuerySchema",
        "AnalyticsPeriodInput",
        "AnalyticsGranularityInput",
        "AnalyticsQueryInput"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/analytics.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 5981,
      "lines": 188,
      "complexity": 3,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "date-fns"
      ],
      "exports": [
        "AdminAnalyticsService",
        "adminAnalyticsService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "AnalyticsPeriodInput",
          "AnalyticsQueryInput"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 1.6
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/analytics.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 1280,
      "lines": 35,
      "complexity": 0,
      "dependencies": [
        "express",
        "express",
        "@server/src/middleware/validate"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/analytics.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 2206,
      "lines": 64,
      "complexity": 3,
      "dependencies": [
        "express"
      ],
      "exports": [
        "AdminAnalyticsController",
        "adminAnalyticsController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.6000000000000001
    },
    {
      "path": "server/src/domains/admin/sub-domains/avatar-frames/avatar-frames.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 3094,
      "lines": 127,
      "complexity": 4,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "avatarFrameService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 31,
          "context": "async getFrameById(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 61,
          "context": "async updateFrame(id: number, data: UpdateFrameData) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 81,
          "context": "async deleteFrame(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 111,
          "context": "async getFrameUsageCount(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 4.2
    },
    {
      "path": "server/src/domains/admin/sub-domains/avatar-frames/avatar-frames.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 729,
      "lines": 26,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/avatar-frames/avatar-frames.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 4671,
      "lines": 163,
      "complexity": 4,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod"
      ],
      "exports": [
        "avatarFrameController"
      ],
      "idPatterns": [
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 35,
          "context": "const frameId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 92,
          "context": "const frameId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 132,
          "context": "const frameId = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.3000000000000001
    },
    {
      "path": "server/src/domains/admin/sub-domains/airdrop/airdrop.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 5478,
      "lines": 179,
      "complexity": 4,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "uuid",
        "@/db/types"
      ],
      "exports": [
        "AirdropAdminService",
        "airdropAdminService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "AdminId"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.1
    },
    {
      "path": "server/src/domains/admin/sub-domains/airdrop/airdrop.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 501,
      "lines": 14,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/airdrop/airdrop.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 1948,
      "lines": 56,
      "complexity": 2,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod"
      ],
      "exports": [
        "executeAirdrop",
        "getAirdropHistory"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.4
    },
    {
      "path": "server/src/domains/admin/sub-domains/settings/services/settings-validation.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "services",
      "size": 9270,
      "lines": 374,
      "complexity": 7,
      "dependencies": [
        "@server/src/core/logger"
      ],
      "exports": [
        "SettingsValidationService",
        "settingsValidationService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "CreateSettingInput",
          "UpdateSettingMetadataInput"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.9000000000000004
    },
    {
      "path": "server/src/domains/admin/sub-domains/settings/services/settings-query.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "services",
      "size": 6016,
      "lines": 233,
      "complexity": 5,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@server/src/core/logger"
      ],
      "exports": [
        "SettingsQueryService",
        "settingsQueryService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "FilterSettingsInput"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1
    },
    {
      "path": "server/src/domains/admin/sub-domains/settings/services/settings-group.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "services",
      "size": 8664,
      "lines": 326,
      "complexity": 5,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@server/src/core/logger"
      ],
      "exports": [
        "SettingsGroupService",
        "settingsGroupService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "SettingGroupInput"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1
    },
    {
      "path": "server/src/domains/admin/sub-domains/settings/services/settings-command.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "services",
      "size": 8940,
      "lines": 329,
      "complexity": 6,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@server/src/core/logger"
      ],
      "exports": [
        "ToggleFeatureFlagInput",
        "SettingsCommandService",
        "settingsCommandService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "UpdateSettingInput",
          "UpdateSettingsInput",
          "CreateSettingInput",
          "UpdateSettingMetadataInput"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.2
    },
    {
      "path": "server/src/domains/admin/sub-domains/settings/services/index.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "services",
      "size": 1509,
      "lines": 44,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "SettingsQueryService",
        "settingsQueryService",
        "SettingsCommandService",
        "settingsCommandService",
        "SettingsValidationService",
        "settingsValidationService",
        "SettingsGroupService",
        "settingsGroupService",
        "AdminSettingsService",
        "adminSettingsService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/announcements/services/announcements.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "services",
      "size": 4358,
      "lines": 154,
      "complexity": 4,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@schema"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 105,
          "context": "export async function getAnnouncementById(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 123,
          "context": "export async function updateAnnouncement(id: number, updateData: any) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 142,
          "context": "export async function deactivateAnnouncement(id: number) {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 4.1
    },
    {
      "path": "server/src/domains/admin/sub-domains/announcements/controllers/announcements.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 4563,
      "lines": 150,
      "complexity": 6,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "zod",
        "@schema"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 57,
          "context": "const id = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 106,
          "context": "const id = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        },
        {
          "type": "conversion",
          "pattern": "parseInt(req.params.id)",
          "line": 133,
          "context": "const id = parseInt(req.params.id);",
          "suggestedFix": "remove parseInt, use branded type",
          "confidence": 0.5
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 1.7
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/services/platformStats.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "services",
      "size": 4447,
      "lines": 186,
      "complexity": 3,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "PlatformStatsService",
        "platformStatsService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.6000000000000001
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/routes/stats.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 2546,
      "lines": 103,
      "complexity": 2,
      "dependencies": [
        "express",
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.4
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/engagement/tipping-analytics.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 7631,
      "lines": 264,
      "complexity": 2,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "date-fns"
      ],
      "exports": [
        "TippingAnalytics",
        "tippingAnalyticsService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 29,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        },
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 38,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.8
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/engagement/tipping-analytics.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 535,
      "lines": 20,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/engagement/tipping-analytics.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 1509,
      "lines": 50,
      "complexity": 2,
      "dependencies": [
        "express"
      ],
      "exports": [
        "tippingAnalyticsController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.10000000000000003
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/engagement/rain-analytics.service.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "other",
      "size": 4951,
      "lines": 169,
      "complexity": 1,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "date-fns"
      ],
      "exports": [
        "RainEventAnalytics",
        "rainAnalyticsService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "userId: number",
          "line": 29,
          "context": "userId: number;",
          "suggestedFix": "UserId",
          "confidence": 0.8
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.3
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/engagement/rain-analytics.routes.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "routes",
      "size": 517,
      "lines": 20,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/admin/sub-domains/analytics/engagement/rain-analytics.controller.ts",
      "domain": "admin",
      "subdomain": "sub-domains",
      "layer": "controllers",
      "size": 1470,
      "lines": 50,
      "complexity": 2,
      "dependencies": [
        "express"
      ],
      "exports": [
        "rainAnalyticsController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.10000000000000003
    }
  ],
  "totalIssues": 86,
  "avgComplexity": 3.0476190476190474,
  "migrationEffort": 194.4999999999999,
  "dependencies": [
    "@db",
    "@schema",
    "@/db/types",
    "@server/src/core/logger",
    "@server/src/core/services/user.service",
    "@server/src/core/db",
    "@/domains/admin/shared",
    "@shared/validators/admin",
    "@server/src/middleware/validate",
    "@shared/utils/id",
    "@lib/auth/canUser.ts",
    "@schema/admin/uiThemes",
    "@shared/config/zoneThemes.config",
    "@shared/config/social.config",
    "@schema/system/referralSources",
    "@schema/system/userReferrals",
    "@schema/user/users",
    "@server/src/utils/auth",
    "@server/src/utils/economy-loader",
    "@shared/economy/economy.config",
    "@db_types/brand.types",
    "@schema/admin/brandConfig",
    "@server/src/domains/admin/shared/admin-cache.service",
    "@server/src/domains/admin/shared",
    "@server/src/domains/admin/admin.errors"
  ],
  "dependents": [
    "moderation",
    "gamification",
    "user-management",
    "cosmetics",
    "forum-core",
    "economy",
    "other",
    "shoutbox",
    "collectibles"
  ],
  "criticalPath": true,
  "riskAssessment": {
    "runtime": "high",
    "testing": "high",
    "integration": "high"
  },
  "migrationStrategy": {
    "priority": 1,
    "approach": "incremental",
    "estimatedDays": 39,
    "blockers": [
      "Dependencies from: moderation, gamification, user-management, cosmetics, forum-core, economy, other, shoutbox, collectibles"
    ],
    "prerequisites": []
  }
}
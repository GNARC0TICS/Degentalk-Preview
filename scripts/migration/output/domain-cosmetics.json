{
  "name": "cosmetics",
  "files": [
    {
      "path": "server/utils/shop-utils.ts",
      "domain": "cosmetics",
      "layer": "utils",
      "size": 6596,
      "lines": 253,
      "complexity": 4,
      "dependencies": [
        "@schema",
        "drizzle-orm",
        "@db",
        "slugify"
      ],
      "exports": [
        "shopItems"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.8
    },
    {
      "path": "scripts/seed/seed-avatar-frames.ts",
      "domain": "cosmetics",
      "layer": "other",
      "size": 13678,
      "lines": 257,
      "complexity": 2,
      "dependencies": [
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types"
      ],
      "exports": [
        "seedAvatarFrames "
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "HeatEventId"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.4
    },
    {
      "path": "scripts/seed/avatar-frames.ts",
      "domain": "cosmetics",
      "layer": "other",
      "size": 2633,
      "lines": 76,
      "complexity": 2,
      "dependencies": [
        "@db/types",
        "path",
        "fast-glob",
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "AdminId"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.4
    },
    {
      "path": "scripts/db/seed-shop.ts",
      "domain": "cosmetics",
      "layer": "other",
      "size": 623,
      "lines": 24,
      "complexity": 1,
      "dependencies": [
        "@core/logger"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "shared/types/core/cosmetics.types.ts",
      "domain": "cosmetics",
      "layer": "types",
      "size": 6856,
      "lines": 325,
      "complexity": 2,
      "dependencies": [
        "@db/types/id.types"
      ],
      "exports": [
        "ItemRarity",
        "ItemCategory",
        "ItemType",
        "ShopItem",
        "ItemPrice",
        "ItemRequirements",
        "ItemMetadata",
        "ItemEffects",
        "ItemStats",
        "ItemStock",
        "Frame",
        "FrameBorderStyle",
        "FrameAnimation",
        "Badge",
        "Title",
        "TitleEffects",
        "UserCosmetics",
        "CosmeticInventory",
        "InventoryItem",
        "EquippedItems"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": [
          "UserId",
          "ItemId",
          "FrameId",
          "BadgeId",
          "TitleId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.10000000000000003
    },
    {
      "path": "scripts/seed/shop/seed-default-cosmetics.ts",
      "domain": "cosmetics",
      "layer": "other",
      "size": 6622,
      "lines": 163,
      "complexity": 2,
      "dependencies": [
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types",
        "@db/types"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "HeatEventId"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.5999999999999999
    },
    {
      "path": "db/schema/shop/signatureItems.ts",
      "domain": "cosmetics",
      "subdomain": "signatureItems.ts",
      "layer": "other",
      "size": 873,
      "lines": 21,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm/pg-core",
        "drizzle-orm"
      ],
      "exports": [
        "signatureShopItems",
        "SignatureShopItem",
        "InsertSignatureShopItem"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/shop/rarities.ts",
      "domain": "cosmetics",
      "subdomain": "rarities.ts",
      "layer": "other",
      "size": 1208,
      "lines": 51,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "rarities",
        "Rarity",
        "InsertRarity"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/shop/products.ts",
      "domain": "cosmetics",
      "subdomain": "products.ts",
      "layer": "other",
      "size": 3189,
      "lines": 82,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "products",
        "Product",
        "InsertProduct"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/shop/productMedia.ts",
      "domain": "cosmetics",
      "subdomain": "productMedia.ts",
      "layer": "other",
      "size": 1109,
      "lines": 39,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "productMedia",
        "ProductMedia",
        "InsertProductMedia"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/shop/productCategories.ts",
      "domain": "cosmetics",
      "subdomain": "productCategories.ts",
      "layer": "other",
      "size": 1396,
      "lines": 45,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm/pg-core",
        "drizzle-orm"
      ],
      "exports": [
        "productCategories",
        "ProductCategory",
        "InsertProductCategory"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "AnyPgColumn"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/shop/orders.ts",
      "domain": "cosmetics",
      "subdomain": "orders.ts",
      "layer": "other",
      "size": 1824,
      "lines": 56,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "orders",
        "Order",
        "InsertOrder"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/shop/orderItems.ts",
      "domain": "cosmetics",
      "subdomain": "orderItems.ts",
      "layer": "other",
      "size": 1401,
      "lines": 44,
      "complexity": 1,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "orderItems",
        "OrderItem"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "db/schema/shop/cosmeticCategories.ts",
      "domain": "cosmetics",
      "layer": "other",
      "size": 1557,
      "lines": 58,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "cosmeticCategories",
        "CosmeticCategory",
        "InsertCosmeticCategory"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/shop/animationPacks.ts",
      "domain": "cosmetics",
      "subdomain": "animationPacks.ts",
      "layer": "other",
      "size": 871,
      "lines": 31,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "animationPacks",
        "AnimationPack"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "db/schema/shop/animationPackItems.ts",
      "domain": "cosmetics",
      "subdomain": "animationPackItems.ts",
      "layer": "other",
      "size": 628,
      "lines": 17,
      "complexity": 0,
      "dependencies": [
        "drizzle-orm/pg-core"
      ],
      "exports": [
        "animationPackItems",
        "AnimationPackItem"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/types/inventory.ts",
      "domain": "cosmetics",
      "layer": "types",
      "size": 1179,
      "lines": 47,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "PluginReward",
        "Product",
        "UserInventory",
        "UserInventoryWithProduct",
        "AppliedCosmetics"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 9,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 19,
          "context": "id: number; // This is the inventory item's own ID, should be number",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 31,
          "context": "id: number; // This is the inventory item's own ID, should be number",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 3.8
    },
    {
      "path": "db/schema/collectibles/stickers.ts",
      "domain": "cosmetics",
      "layer": "other",
      "size": 11640,
      "lines": 280,
      "complexity": 1,
      "dependencies": [
        "drizzle-orm"
      ],
      "exports": [
        "stickerPacks",
        "stickers",
        "userStickerInventory",
        "userStickerPacks",
        "stickerUsage",
        "StickerPack",
        "NewStickerPack",
        "Sticker",
        "NewSticker",
        "UserStickerInventory",
        "NewUserStickerInventory",
        "UserStickerPack",
        "NewUserStickerPack",
        "StickerUsage",
        "NewStickerUsage",
        "StickerRarity",
        "StickerUnlockType",
        "StickerFormat"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.19999999999999996
    },
    {
      "path": "client/src/pages/shop.tsx",
      "domain": "cosmetics",
      "layer": "pages",
      "size": 10812,
      "lines": 333,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/hooks/use-shop-items",
        "@/hooks/use-vault-items",
        "@/hooks/use-shop-items",
        "wouter",
        "framer-motion",
        "@/layout/primitives",
        "@/components/shop/shop-item-card",
        "@/components/ui/skeleton",
        "@/components/ui/loader",
        "@/components/ui/error-display",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": [
          "ItemCategory"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.10000000000000003
    },
    {
      "path": "client/src/hooks/use-shop-ownership.tsx",
      "domain": "cosmetics",
      "layer": "hooks",
      "size": 1842,
      "lines": 71,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/lib/queryClient",
        "@tanstack/react-query"
      ],
      "exports": [
        "useShopItemOwnership",
        "useUserInventory"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/hooks/use-shop-items.tsx",
      "domain": "cosmetics",
      "layer": "hooks",
      "size": 1924,
      "lines": 94,
      "complexity": 1,
      "dependencies": [
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/hooks/use-vault-items"
      ],
      "exports": [
        "ShopItem",
        "useShopItems",
        "useShopItem"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "ItemCategory"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/config/shop-items.config.ts",
      "domain": "cosmetics",
      "layer": "other",
      "size": 3758,
      "lines": 164,
      "complexity": 3,
      "dependencies": [],
      "exports": [
        "BaseShopItem",
        "UsernameColorItem",
        "AvatarFrameItem",
        "UserTitleItem",
        "ShopItem",
        "defaultShopItems",
        "shopCategories",
        "getItemsByType",
        "getItemById",
        "isUsernameColorItem",
        "isAvatarFrameItem",
        "isUserTitleItem"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.3000000000000001
    },
    {
      "path": "client/src/config/frames.config.ts",
      "domain": "cosmetics",
      "layer": "other",
      "size": 685,
      "lines": 33,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "frameRarityConfig",
        "FrameRarity"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/cosmetics/frameEquip.service.ts",
      "domain": "cosmetics",
      "subdomain": "frameEquip.service.ts",
      "layer": "other",
      "size": 1356,
      "lines": 42,
      "complexity": 2,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "frameEquipService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.4
    },
    {
      "path": "server/src/domains/cosmetics/avatarFrameStore.service.ts",
      "domain": "cosmetics",
      "subdomain": "avatarFrameStore.service.ts",
      "layer": "other",
      "size": 3363,
      "lines": 137,
      "complexity": 2,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "StoreFrame",
        "avatarFrameStoreService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 7,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.5
    },
    {
      "path": "client/src/pages/shop-management/purchase-success.tsx",
      "domain": "cosmetics",
      "subdomain": "purchase-success.tsx",
      "layer": "pages",
      "size": 3760,
      "lines": 139,
      "complexity": 1,
      "dependencies": [
        "react",
        "wouter",
        "lucide-react",
        "@/components/ui/button",
        "wouter",
        "canvas-confetti",
        "@/layout/primitives",
        "@/hooks/useSearchParams"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/pages/shop/avatar-frames.tsx",
      "domain": "cosmetics",
      "layer": "pages",
      "size": 4595,
      "lines": 149,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/config/frames.config",
        "@/components/users/framed-avatar",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/hooks/use-toast",
        "@/components/ui/loader",
        "lucide-react"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 14,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.8
    },
    {
      "path": "client/src/pages/admin/stickers.tsx",
      "domain": "cosmetics",
      "layer": "pages",
      "size": 23275,
      "lines": 741,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/components/admin/layout/AdminPageShell",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/hooks/use-toast",
        "@/features/admin/services/sticker-api.service",
        "@/config/rarity.config"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/pages/admin/roles-titles.tsx",
      "domain": "cosmetics",
      "layer": "pages",
      "size": 8376,
      "lines": 296,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "@/components/admin/layout/AdminPageShell",
        "@/lib/queryClient",
        "@/components/admin/roles/RolesSection",
        "@/components/admin/titles/TitlesSection",
        "@/components/admin/permissions/PermissionsOverview"
      ],
      "exports": [
        "Role",
        "Title",
        "Permission"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 36,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 73,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 3.9
    },
    {
      "path": "client/src/pages/admin/avatar-frames.tsx",
      "domain": "cosmetics",
      "layer": "pages",
      "size": 13753,
      "lines": 462,
      "complexity": 1,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/config/rarity.config",
        "@/hooks/use-toast",
        "lucide-react",
        "@/components/users/framed-avatar",
        "@/components/admin/GrantFrameModal",
        "@/types/compat/avatar"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 100,
          "context": "const updateMutation = useMutation<AvatarFrame, Error, { id: number; data: CreateFrameData }>({",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "AvatarFrame"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.8
    },
    {
      "path": "client/src/lib/utils/cosmeticsUtils.tsx",
      "domain": "cosmetics",
      "layer": "utils",
      "size": 4500,
      "lines": 174,
      "complexity": 3,
      "dependencies": [],
      "exports": [
        "applyPluginRewards",
        "isFeatureUnlocked",
        "getRarityColorClass",
        "renderTextWithCustomEmojis"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1.3
    },
    {
      "path": "client/src/components/shop/shop-item-card.tsx",
      "domain": "cosmetics",
      "subdomain": "shop-item-card.tsx",
      "layer": "components",
      "size": 7003,
      "lines": 222,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/hooks/use-shop-items",
        "@/hooks/use-shop-ownership",
        "@/hooks/use-auth.tsx",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/tooltip",
        "@/hooks/use-toast",
        "@/components/ui/loader"
      ],
      "exports": [
        "ShopItemCard"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "ShopItem"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/shop/purchase-modal.tsx",
      "domain": "cosmetics",
      "subdomain": "purchase-modal.tsx",
      "layer": "components",
      "size": 8380,
      "lines": 271,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/hooks/use-purchase-modal",
        "@/hooks/use-toast",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "canvas-confetti"
      ],
      "exports": [
        "PurchaseModal"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.9
    },
    {
      "path": "client/src/components/shop/ShopItem.tsx",
      "domain": "cosmetics",
      "subdomain": "ShopItem.tsx",
      "layer": "components",
      "size": 4145,
      "lines": 150,
      "complexity": 0,
      "dependencies": [
        "react",
        "next/image",
        "framer-motion",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tooltip",
        "@/hooks/use-auth",
        "@/components/ui/feature-gate"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "client/src/components/identity/AvatarFrame.tsx",
      "domain": "cosmetics",
      "layer": "components",
      "size": 1738,
      "lines": 68,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/lib/utils"
      ],
      "exports": [
        "AvatarFrame"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "client/src/components/layout/WidgetFrame.tsx",
      "domain": "cosmetics",
      "layer": "components",
      "size": 8358,
      "lines": 254,
      "complexity": 2,
      "dependencies": [
        "react",
        "react-error-boundary",
        "lucide-react",
        "@/stores/useLayoutStore",
        "@/config/widgetRegistry",
        "@/components/ui/skeleton",
        "@/components/ui/button",
        "@/contexts/shoutbox-context",
        "@/lib/utils"
      ],
      "exports": [
        "WidgetFrame"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1.9
    },
    {
      "path": "client/src/components/admin/GrantFrameModal.tsx",
      "domain": "cosmetics",
      "layer": "components",
      "size": 2713,
      "lines": 99,
      "complexity": 1,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/hooks/use-toast",
        "@tanstack/react-query",
        "@/lib/queryClient",
        "@/components/ui/loader",
        "@/types/compat/avatar"
      ],
      "exports": [
        "GrantFrameModal"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "AvatarFrame"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.7
    },
    {
      "path": "server/src/routes/api/store/avatar-frames.ts",
      "domain": "cosmetics",
      "layer": "routes",
      "size": 2239,
      "lines": 65,
      "complexity": 2,
      "dependencies": [
        "express",
        "@db",
        "@schema",
        "drizzle-orm",
        "zod"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5999999999999999
    },
    {
      "path": "client/src/pages/admin/shop/rarities.tsx",
      "domain": "cosmetics",
      "subdomain": "rarities.tsx",
      "layer": "pages",
      "size": 6885,
      "lines": 248,
      "complexity": 2,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "zod",
        "react-hook-form",
        "@hookform/resolvers/zod",
        "@/components/admin/layout/AdminPageShell",
        "@/lib/utils"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 38,
          "context": "type Rarity = z.infer<typeof RaritySchema> & { id: number };",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.5
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 91,
          "context": "mutationFn: async (id: number) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 3.5999999999999996
    },
    {
      "path": "client/src/pages/admin/shop/index.tsx",
      "domain": "cosmetics",
      "subdomain": "index.tsx",
      "layer": "pages",
      "size": 4158,
      "lines": 146,
      "complexity": 2,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "lucide-react",
        "@/lib/queryClient",
        "@tanstack/react-query",
        "wouter",
        "@/components/admin/layout/AdminPageShell",
        "@/components/admin/common/AdminDataTable",
        "@/components/admin/layout/EntityTable",
        "@/components/ui/badge"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "ColumnDef"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 1.4
    },
    {
      "path": "client/src/pages/admin/shop/edit.tsx",
      "domain": "cosmetics",
      "subdomain": "edit.tsx",
      "layer": "pages",
      "size": 11927,
      "lines": 376,
      "complexity": 3,
      "dependencies": [
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/lib/queryClient",
        "@tanstack/react-query",
        "wouter",
        "lucide-react",
        "@/hooks/use-toast"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 2.1
    },
    {
      "path": "client/src/pages/admin/shop/categories.tsx",
      "domain": "cosmetics",
      "subdomain": "categories.tsx",
      "layer": "pages",
      "size": 8266,
      "lines": 285,
      "complexity": 2,
      "dependencies": [
        "react",
        "@tanstack/react-query",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "zod",
        "react-hook-form",
        "@hookform/resolvers/zod",
        "@/components/admin/layout/AdminPageShell",
        "@/components/admin/inputs/AdminAccessSelector",
        "@/lib/utils"
      ],
      "exports": [],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 30,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 48,
          "context": "type Category = z.infer<typeof CategorySchema> & { id: number };",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.5
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 112,
          "context": "mutationFn: async (id: number) => {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 3.7
    },
    {
      "path": "client/src/features/admin/services/sticker-api.service.ts",
      "domain": "cosmetics",
      "layer": "services",
      "size": 10917,
      "lines": 464,
      "complexity": 4,
      "dependencies": [
        "@/lib/queryClient",
        "@db/types"
      ],
      "exports": [
        "Sticker",
        "StickerPack",
        "CreateStickerData",
        "UpdateStickerData",
        "CreateStickerPackData",
        "UpdateStickerPackData",
        "ListStickersParams",
        "ListStickerPacksParams",
        "PaginatedResponse",
        "ApiResponse",
        "StickerCategories",
        "StickerPreview",
        "StickerApiService",
        "stickerApiService"
      ],
      "idPatterns": [
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 12,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 45,
          "context": "id: number;",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 203,
          "context": "async getSticker(id: number): Promise<ApiResponse<{ sticker: Sticker }>> {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 227,
          "context": "id: number,",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 240,
          "context": "async deleteSticker(id: number): Promise<ApiResponse<{ message: string }>> {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 278,
          "context": "async getStickerPack(id: number): Promise<ApiResponse<{ pack: StickerPack }>> {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 302,
          "context": "id: number,",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 315,
          "context": "async deleteStickerPack(id: number): Promise<ApiResponse<{ message: string }>> {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        },
        {
          "type": "definition",
          "pattern": "id: number",
          "line": 337,
          "context": "async previewSticker(id: number): Promise<ApiResponse<StickerPreview>> {",
          "suggestedFix": "check entity context for correct branded type",
          "confidence": 0.3
        }
      ],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": true,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "PackId",
          "StickerId"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 4.2
    },
    {
      "path": "client/src/components/admin/titles/TitlesSection.tsx",
      "domain": "cosmetics",
      "subdomain": "TitlesSection.tsx",
      "layer": "components",
      "size": 731,
      "lines": 34,
      "complexity": 1,
      "dependencies": [
        "@/components/ui/card"
      ],
      "exports": [
        "TitlesSection"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 1.7
    }
  ],
  "totalIssues": 22,
  "avgComplexity": 1.3409090909090908,
  "migrationEffort": 52.20000000000001,
  "dependencies": [
    "@schema",
    "@db",
    "@db/types",
    "@core/logger",
    "@db/types/id.types",
    "@/hooks/use-shop-items",
    "@/hooks/use-vault-items",
    "@/layout/primitives",
    "@/components/shop/shop-item-card",
    "@/components/ui/skeleton",
    "@/components/ui/loader",
    "@/components/ui/error-display",
    "@/components/ui/button",
    "@/components/ui/badge",
    "@/components/ui/input",
    "@/lib/queryClient",
    "@tanstack/react-query",
    "@/hooks/useSearchParams",
    "@/config/frames.config",
    "@/components/users/framed-avatar",
    "@/components/ui/card",
    "@/hooks/use-toast",
    "@/components/admin/layout/AdminPageShell",
    "@/components/ui/tabs",
    "@/features/admin/services/sticker-api.service",
    "@/config/rarity.config",
    "@/components/admin/roles/RolesSection",
    "@/components/admin/titles/TitlesSection",
    "@/components/admin/permissions/PermissionsOverview",
    "@/components/ui/label",
    "@/components/admin/GrantFrameModal",
    "@/types/compat/avatar",
    "@/hooks/use-shop-ownership",
    "@/hooks/use-auth.tsx",
    "@/components/ui/tooltip",
    "@/hooks/use-purchase-modal",
    "@/components/ui/alert",
    "@/hooks/use-auth",
    "@/components/ui/feature-gate",
    "@/lib/utils",
    "@/stores/useLayoutStore",
    "@/config/widgetRegistry",
    "@/contexts/shoutbox-context",
    "@hookform/resolvers/zod",
    "@/components/admin/common/AdminDataTable",
    "@/components/admin/layout/EntityTable",
    "@/components/ui/textarea",
    "@/components/admin/inputs/AdminAccessSelector"
  ],
  "dependents": [],
  "criticalPath": false,
  "riskAssessment": {
    "runtime": "high",
    "testing": "high",
    "integration": "low"
  },
  "migrationStrategy": {
    "priority": 3,
    "approach": "parallel",
    "estimatedDays": 11,
    "blockers": [],
    "prerequisites": []
  }
}
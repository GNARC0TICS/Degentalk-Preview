{
  "name": "wallet",
  "files": [
    {
      "path": "server/src/domains/wallet/withdrawal.controller.ts",
      "domain": "wallet",
      "subdomain": "withdrawal.controller.ts",
      "layer": "controllers",
      "size": 12704,
      "lines": 413,
      "complexity": 4,
      "dependencies": [
        "@server/src/core/services/user.service",
        "@/db/types",
        "express",
        "@db",
        "@schema",
        "drizzle-orm",
        "@shared/wallet.config",
        "zod"
      ],
      "exports": [
        "WithdrawalController",
        "withdrawalController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "UserId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.1
    },
    {
      "path": "server/src/domains/wallet/webhook.service.ts",
      "domain": "wallet",
      "subdomain": "webhook.service.ts",
      "layer": "other",
      "size": 14626,
      "lines": 590,
      "complexity": 6,
      "dependencies": [
        "@db",
        "drizzle-orm",
        "crypto"
      ],
      "exports": [
        "WebhookService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.2
    },
    {
      "path": "server/src/domains/wallet/wallet.validators.ts",
      "domain": "wallet",
      "subdomain": "wallet.validators.ts",
      "layer": "other",
      "size": 3855,
      "lines": 149,
      "complexity": 2,
      "dependencies": [
        "express",
        "zod"
      ],
      "exports": [
        "validateAmountMiddleware",
        "transferDgtSchema",
        "depositAddressSchema",
        "dgtPurchaseSchema",
        "withdrawalSchema",
        "validateTransferDgt",
        "validateCreateDepositAddress",
        "validateDgtPurchase",
        "validateWithdrawal",
        "validateRequest",
        "WalletRequestSchemas"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "low",
      "migrationEffort": 0.1
    },
    {
      "path": "server/src/domains/wallet/wallet.test.routes.ts",
      "domain": "wallet",
      "subdomain": "wallet.test.routes.ts",
      "layer": "routes",
      "size": 2660,
      "lines": 98,
      "complexity": 1,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@server/src/utils/environment"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.8999999999999999
    },
    {
      "path": "server/src/domains/wallet/wallet.test.controller.ts",
      "domain": "wallet",
      "subdomain": "wallet.test.controller.ts",
      "layer": "controllers",
      "size": 11201,
      "lines": 424,
      "complexity": 6,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@server/src/core/logger",
        "@server/src/utils/environment"
      ],
      "exports": [
        "WalletTestController",
        "walletTestController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.9000000000000001
    },
    {
      "path": "server/src/domains/wallet/wallet.service.ts",
      "domain": "wallet",
      "subdomain": "wallet.service.ts",
      "layer": "other",
      "size": 14090,
      "lines": 543,
      "complexity": 8,
      "dependencies": [
        "@db",
        "drizzle-orm",
        "@/db/types"
      ],
      "exports": [
        "WalletService",
        "walletService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "CoinId",
          "ActionId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.6
    },
    {
      "path": "server/src/domains/wallet/wallet.routes.ts",
      "domain": "wallet",
      "subdomain": "wallet.routes.ts",
      "layer": "routes",
      "size": 7750,
      "lines": 310,
      "complexity": 5,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@server/src/utils/environment"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.7
    },
    {
      "path": "server/src/domains/wallet/wallet.dev.controller.ts",
      "domain": "wallet",
      "subdomain": "wallet.dev.controller.ts",
      "layer": "controllers",
      "size": 6743,
      "lines": 221,
      "complexity": 5,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@shared/wallet.config",
        "zod"
      ],
      "exports": [],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.2
    },
    {
      "path": "server/src/domains/wallet/wallet.controller.ts",
      "domain": "wallet",
      "subdomain": "wallet.controller.ts",
      "layer": "controllers",
      "size": 20264,
      "lines": 670,
      "complexity": 9,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@shared/types/api.types",
        "@db",
        "@schema",
        "drizzle-orm",
        "crypto",
        "zod",
        "@/db/types",
        "@shared/wallet.config"
      ],
      "exports": [
        "WalletController",
        "walletController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response"
        ]
      },
      "riskLevel": "high",
      "migrationEffort": 2.8
    },
    {
      "path": "server/src/domains/wallet/wallet.constants.ts",
      "domain": "wallet",
      "subdomain": "wallet.constants.ts",
      "layer": "other",
      "size": 896,
      "lines": 17,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "DGT_CURRENCY",
        "TRANSACTION_FEE_PERCENT",
        "MIN_WITHDRAWAL_AMOUNT",
        "MAX_WITHDRAWAL_AMOUNT",
        "SUPPORTED_CRYPTO_CURRENCIES",
        "DEFAULT_CRYPTO_PRECISION",
        "MIN_TRANSACTION_AMOUNT",
        "MAX_USER_BALANCE",
        "DGT_TREASURY_USER_ID",
        "DEFAULT_DGT_REWARD_CREATE_THREAD"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "low",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/wallet/wallet-config.service.ts",
      "domain": "wallet",
      "subdomain": "wallet-config.service.ts",
      "layer": "other",
      "size": 9470,
      "lines": 353,
      "complexity": 7,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@shared/wallet.config",
        "@shared/wallet.config"
      ],
      "exports": [
        "WalletConfigService",
        "walletConfigService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "WalletConfig"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.6000000000000003
    },
    {
      "path": "server/src/domains/wallet/wallet-api-tests.ts",
      "domain": "wallet",
      "subdomain": "wallet-api-tests.ts",
      "layer": "other",
      "size": 8720,
      "lines": 338,
      "complexity": 7,
      "dependencies": [
        "axios",
        "zod",
        "axios"
      ],
      "exports": [
        "testGetWalletBalance",
        "testGetTransactionHistory",
        "testCreateDepositAddress",
        "testProcessDgtPurchase",
        "testTransferDGT",
        "testSendTip",
        "testSendRain",
        "runAllTests"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.6000000000000003
    },
    {
      "path": "server/src/domains/wallet/user-management.service.ts",
      "domain": "wallet",
      "subdomain": "user-management.service.ts",
      "layer": "other",
      "size": 6408,
      "lines": 242,
      "complexity": 6,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@/db/types"
      ],
      "exports": [
        "UserManagementService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "CoinId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.2000000000000002
    },
    {
      "path": "server/src/domains/wallet/treasury.controller.ts",
      "domain": "wallet",
      "subdomain": "treasury.controller.ts",
      "layer": "controllers",
      "size": 13763,
      "lines": 470,
      "complexity": 5,
      "dependencies": [
        "@server/src/core/services/user.service",
        "@/db/types",
        "express",
        "@db",
        "drizzle-orm",
        "zod"
      ],
      "exports": [
        "TreasuryController",
        "treasuryController"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": true,
        "typeImports": [
          "UserId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.2
    },
    {
      "path": "server/src/domains/wallet/dgt.service.ts",
      "domain": "wallet",
      "subdomain": "dgt.service.ts",
      "layer": "other",
      "size": 13846,
      "lines": 539,
      "complexity": 7,
      "dependencies": [
        "@db",
        "@schema",
        "drizzle-orm",
        "@/db/types"
      ],
      "exports": [
        "DGTTransactionMetadata",
        "DGTBalance",
        "DGTTransaction",
        "DGTTransferResult",
        "DGTService",
        "dgtService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "ItemId",
          "ActionId",
          "WalletId",
          "TransactionId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.4000000000000004
    },
    {
      "path": "server/src/domains/wallet/ccpayment.service.ts",
      "domain": "wallet",
      "subdomain": "ccpayment.service.ts",
      "layer": "other",
      "size": 7206,
      "lines": 283,
      "complexity": 5,
      "dependencies": [
        "@/db/types"
      ],
      "exports": [
        "CCPaymentUser",
        "WithdrawalRequest",
        "CCPaymentWithdrawalResponse",
        "CCPaymentWebhookEvent",
        "CCPaymentService",
        "ccpaymentService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "UserId"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 2.5
    },
    {
      "path": "server/src/domains/wallet/services/ccpayment-deposit.service.ts",
      "domain": "wallet",
      "subdomain": "services",
      "layer": "services",
      "size": 5692,
      "lines": 240,
      "complexity": 3,
      "dependencies": [
        "@server/src/core/logger",
        "@server/src/core/errors"
      ],
      "exports": [
        "DepositRequest",
        "DepositAddress",
        "CCPaymentOrderStatus",
        "CCPaymentDepositService",
        "ccpaymentDepositService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.1
    },
    {
      "path": "server/src/domains/wallet/services/ccpayment-balance.service.ts",
      "domain": "wallet",
      "subdomain": "services",
      "layer": "services",
      "size": 5838,
      "lines": 242,
      "complexity": 3,
      "dependencies": [
        "@server/src/core/logger",
        "@server/src/core/errors"
      ],
      "exports": [
        "CryptoBalance",
        "TransactionResponse",
        "TransactionHistoryRequest",
        "TransactionHistoryResponse",
        "CCPaymentBalanceService",
        "ccpaymentBalanceService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 2.1
    },
    {
      "path": "server/src/domains/wallet/services/ccpayment-api.service.ts",
      "domain": "wallet",
      "subdomain": "services",
      "layer": "services",
      "size": 5050,
      "lines": 201,
      "complexity": 2,
      "dependencies": [
        "axios",
        "crypto",
        "@server/src/core/logger",
        "@server/src/core/errors"
      ],
      "exports": [
        "CCPaymentConfig",
        "CCPaymentApiResponse",
        "CCPaymentApiService",
        "ccpaymentApiService"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": true,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": true,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 1.0999999999999999
    },
    {
      "path": "server/src/domains/wallet/middleware/webhook.middleware.ts",
      "domain": "wallet",
      "subdomain": "middleware",
      "layer": "middleware",
      "size": 6504,
      "lines": 255,
      "complexity": 4,
      "dependencies": [
        "express",
        "crypto"
      ],
      "exports": [
        "webhookMiddleware",
        "validateCCPaymentWebhook",
        "rateLimitWebhooks",
        "validateWebhookPayload"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": true,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.3
    },
    {
      "path": "server/src/domains/wallet/middleware/types.ts",
      "domain": "wallet",
      "subdomain": "middleware",
      "layer": "middleware",
      "size": 1439,
      "lines": 53,
      "complexity": 0,
      "dependencies": [
        "express"
      ],
      "exports": [
        "SecurityMiddleware",
        "WebhookMiddleware",
        "RateLimitRecord",
        "RateLimitResult",
        "SecurityError",
        "WebhookError"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    },
    {
      "path": "server/src/domains/wallet/middleware/security.middleware.ts",
      "domain": "wallet",
      "subdomain": "middleware",
      "layer": "middleware",
      "size": 9533,
      "lines": 375,
      "complexity": 6,
      "dependencies": [
        "@server/src/core/services/user.service",
        "express",
        "@db",
        "@schema",
        "drizzle-orm"
      ],
      "exports": [
        "securityMiddleware"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": true,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": true,
        "typeImports": [
          "Request",
          "Response",
          "NextFunction"
        ]
      },
      "riskLevel": "medium",
      "migrationEffort": 1.2000000000000002
    },
    {
      "path": "server/src/domains/wallet/middleware/index.ts",
      "domain": "wallet",
      "subdomain": "middleware",
      "layer": "middleware",
      "size": 619,
      "lines": 30,
      "complexity": 0,
      "dependencies": [],
      "exports": [
        "walletMiddleware",
        "securityMiddleware ",
        "webhookMiddleware",
        "validateCCPaymentWebhook",
        "rateLimitWebhooks",
        "validateWebhookPayload"
      ],
      "idPatterns": [],
      "typeUsage": {
        "hasAnyTypes": false,
        "hasUnknownTypes": false,
        "hasBrandedIds": false,
        "hasNumericIds": false,
        "hasTypeGuards": false,
        "hasZodValidation": false,
        "typeImports": []
      },
      "riskLevel": "medium",
      "migrationEffort": 0.5
    }
  ],
  "totalIssues": 0,
  "avgComplexity": 4.391304347826087,
  "migrationEffort": 31.300000000000004,
  "dependencies": [
    "@server/src/core/services/user.service",
    "@/db/types",
    "@db",
    "@schema",
    "@shared/wallet.config",
    "@server/src/utils/environment",
    "@server/src/core/logger",
    "@shared/types/api.types",
    "@server/src/core/errors"
  ],
  "dependents": [
    "economy",
    "shop",
    "moderation",
    "user-management",
    "engagement",
    "other",
    "auth",
    "forum-core"
  ],
  "criticalPath": true,
  "riskAssessment": {
    "runtime": "high",
    "testing": "low",
    "integration": "high"
  },
  "migrationStrategy": {
    "priority": 1,
    "approach": "atomic",
    "estimatedDays": 7,
    "blockers": [
      "Dependencies from: economy, shop, moderation, user-management, engagement, other, auth, forum-core"
    ],
    "prerequisites": []
  }
}
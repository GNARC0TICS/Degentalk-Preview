# Claude Code Optimized Docker Compose
# Minimal setup for Claude Code development

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: claude-postgres
    environment:
      POSTGRES_DB: degentalk
      POSTGRES_USER: claude
      POSTGRES_PASSWORD: claude123
    volumes:
      - claude_postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - claude-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U claude']
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: claude-redis
    ports:
      - '6379:6379'
    networks:
      - claude-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

  # Claude Code Workspace
  claude-workspace:
    build:
      context: .
      dockerfile: Dockerfile
      target: claude-code
    container_name: claude-workspace
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://claude:claude123@postgres:5432/degentalk
      - REDIS_URL=redis://redis:6379
      - CLAUDE_WORKSPACE=true
    volumes:
      # Mount project as writable workspace
      - .:/workspace
      # Persist node_modules for performance
      - claude_node_modules:/workspace/node_modules
      - claude_client_modules:/workspace/client/node_modules
      - claude_server_modules:/workspace/server/node_modules
      # Persist Claude-specific data
      - claude_home:/home/claude
    ports:
      - '5173:5173' # Vite dev server
      - '5001:5001' # Express server
    networks:
      - claude-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    stdin_open: true
    tty: true
    working_dir: /workspace
    command: ['bash', '-c', "echo 'Claude Code workspace ready!' && echo 'Run: pnpm dev' && bash"]

volumes:
  claude_postgres:
  claude_node_modules:
  claude_client_modules:
  claude_server_modules:
  claude_home:

networks:
  claude-network:
    driver: bridge

{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2021,
    "sourceType": "module",
    "project": [
      "tsconfig.json"
    ]
  },
  "plugins": [
    "@typescript-eslint",
    "degen"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "overrides": [
    {
      "files": ["client/src/**/*.{ts,tsx}"],
      "rules": {
        "no-restricted-imports": [
          "error",
          {
            "paths": [
              {
                "name": "@/features/forum/hooks/useForumStructure",
                "message": "Deprecated: use the context hooks exported from '@/contexts/ForumStructureContext' instead."
              },
              {
                "name": "../hooks/useForumStructure",
                "message": "Deprecated: use the context hooks exported from '@/contexts/ForumStructureContext' instead."
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["server/src/**/*.{ts,tsx}"],
      "rules": {
        "no-console": ["error", { "allow": ["warn", "error"] }], // Disallow console.log, .info, .debug, .trace but allow .warn and .error
        "no-restricted-imports": [ // Keep existing restricted imports for server if any, or remove if not needed for server
          "error",
          {
            "paths": [
              // Add any server-specific restricted imports here if necessary
              // For example, if client types should not be imported directly:
              // {
              //   "name": "@/client/src/types", 
              //   "message": "Server should use shared types or its own domain types."
              // }
            ]
          }
        ]
      }
    }
  ],
  "rules": {
    "degen/no-raw-container-auto": "error"
  }
}

{
	"root": true,
	"env": {
		"browser": true,
		"es2021": true,
		"node": true
	},
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": 2021,
		"sourceType": "module",
		"project": ["tsconfig.eslint.json"]
	},
	"plugins": ["@typescript-eslint", "degen", "react-hooks"],
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:react-hooks/recommended"
	],
	"overrides": [
		{
			"files": ["client/src/**/*.{ts,tsx}"],
			"rules": {
				"no-restricted-imports": [
					"error",
					{
						"paths": [
							{
								"name": "@/features/forum/hooks/useForumStructure",
								"message": "Deprecated: use the context hooks exported from '@/contexts/ForumStructureContext' instead."
							},
							{
								"name": "../hooks/useForumStructure",
								"message": "Deprecated: use the context hooks exported from '@/contexts/ForumStructureContext' instead."
							},
							{
								"name": "@db/types",
								"message": "CRITICAL: Frontend code must not import database types. Use '@shared/types' instead."
							}
						]
					}
				]
			}
		},
		{
			"files": ["server/src/**/*.{ts,tsx}"],
			"rules": {
				"no-console": ["error", { "allow": ["warn", "error"] }], // Disallow console.log, .info, .debug, .trace but allow .warn and .error
				"no-restricted-imports": [
					// Keep existing restricted imports for server if any, or remove if not needed for server
					"error",
					{
						"paths": [
							// Add any server-specific restricted imports here if necessary
							{
								"name": "@server/src/core/database",
								"message": "Deprecated: use '@db' or '@server/src/core/db' instead."
							},
							{
								"name": "@db/types",
								"message": "Use '@shared/types' instead of '@db/types' for branded IDs."
							},
							{
								"name": "@db/types/id.types",
								"message": "Use '@shared/types' instead of '@db/types' for branded IDs."
							},
							{
								"name": "@db_types",
								"message": "Use '@shared/types' branded ID module."
							}
						]
					}
				]
			}
		}
	],
	"rules": {
		"@typescript-eslint/no-explicit-any": "warn",
		"@typescript-eslint/no-unused-vars": ["warn", { "varsIgnorePattern": "^[A-Z][A-Za-z0-9]+$" }],
		"degen/no-raw-container-auto": "warn",
		"degen/no-direct-req-user": "error",
		"degen/no-number-id": "warn",
		"degen/no-missing-branded-id-import": "error",
		"@typescript-eslint/ban-types": "warn",
		"react-hooks/rules-of-hooks": "warn",
		"no-useless-catch": "warn",
		"no-useless-escape": "warn",
		"no-mixed-spaces-and-tabs": "warn",
		"no-case-declarations": "warn",
		"no-empty-pattern": "warn",
		"no-prototype-builtins": "warn",
		"degen/no-undeclared-branded-id": "off"
	}
}

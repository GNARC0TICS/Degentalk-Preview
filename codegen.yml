# GraphQL/OpenAPI Code Generation Configuration
# Generates TypeScript types from API schemas to ensure client/server consistency

# For GraphQL APIs
graphql:
  schema: 
    - http://localhost:5001/graphql
    - ./server/src/graphql/schema.graphql
  documents:
    - ./client/src/**/*.graphql
    - ./client/src/**/*.gql
  generates:
    ./client/src/generated/graphql.ts:
      plugins:
        - typescript
        - typescript-operations
        - typescript-react-query
      config:
        fetcher: '@/utils/api-request#apiRequest'
        exposeQueryKeys: true
        exposeFetcher: true
        addInfiniteQuery: true
        
    ./shared/types/generated/graphql-types.ts:
      plugins:
        - typescript
      config:
        enumsAsTypes: true
        scalars:
          UUID: string
          DateTime: string
          JSON: Record<string, any>

# For OpenAPI/REST APIs  
openapi:
  - spec: ./server/openapi.yaml
    generates:
      ./client/src/generated/api.ts:
        plugins:
          - typescript
          - typescript-axios
        config:
          withHooks: true
          
      ./shared/types/generated/api-types.ts:
        plugins:
          - typescript
        config:
          enumsAsTypes: true

# Hooks to run after generation
hooks:
  afterAllFileWrite:
    - prettier --write
    - eslint --fix
    
# Watch mode config
watch: true
watchConfig:
  usePolling: true
  interval: 1000